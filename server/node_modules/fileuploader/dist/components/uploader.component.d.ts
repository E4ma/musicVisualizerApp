/// <reference types="jszip" />
import { ElementRef, EventEmitter } from '@angular/core';
import * as JSZip from 'jszip';
export declare class UploaderComponent {
    type: string;
    userImg: string;
    cpntID: string;
    accepted: string;
    maxSize: number;
    looks: any;
    multiple: boolean;
    encode: boolean;
    invalidFilemsg: string;
    invalidFormatmsg: string;
    results: EventEmitter<any>;
    fail: EventEmitter<any>;
    dragging: boolean;
    files: File[];
    mFile: File;
    encoded: string[];
    imgSrc: string;
    jszip: JSZip;
    failed: String[];
    hasFile: boolean;
    protected myElement: ElementRef;
    input: ElementRef;
    /**
     * Constructor
     */
    constructor(element: ElementRef);
    handleFileOver(event: any): void;
    handleFileLoad(files: any): void;
    loadFiles(event: any): void;
    onChange(event: any): void;
    addFiles(): void;
    handleImageLoad(file: any): void;
    loadSingle(file: any): void;
    loadMultiple(files: any): void;
    cleanFiles(): void;
    handleInvoiceLoad(files: any): void;
    private handleExtension(file);
    private matchesExtension(file);
    _handleReaderLoaded(e: any): void;
    resize(img: any): string;
    setStyles(): any;
    getBase64(file: File): void;
    hasFiles(): boolean;
    convertbase64(e: any): void;
    downloadSingleFile(name?: string, encoded?: boolean): void;
    downloadFromList(index: number, name?: string, encoded?: boolean): void;
}
