[{"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/index.js":"1","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/App.js":"2","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Home.js":"3","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/About.js":"4","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/TemplatesPage.js":"5","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Navbars/Navigation.js":"6","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Displayer.js":"7","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/InsertIcon.js":"8","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/FileUpload.js":"9","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/Playlist.js":"10"},{"size":389,"mtime":1611935111113,"results":"11","hashOfConfig":"12"},{"size":1194,"mtime":1612743344002,"results":"13","hashOfConfig":"12"},{"size":3405,"mtime":1613103156358,"results":"14","hashOfConfig":"12"},{"size":1207,"mtime":1613062642628,"results":"15","hashOfConfig":"12"},{"size":196,"mtime":1611168617430,"results":"16","hashOfConfig":"12"},{"size":8243,"mtime":1613162714942,"results":"17","hashOfConfig":"12"},{"size":7163,"mtime":1613103917140,"results":"18","hashOfConfig":"12"},{"size":379,"mtime":1613012297186,"results":"19","hashOfConfig":"12"},{"size":6291,"mtime":1613162756184,"results":"20","hashOfConfig":"12"},{"size":516,"mtime":1613162755726,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1qwo52n",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/index.js",[],["47","48"],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/App.js",["49"],"import React, { useState } from 'react'\nimport './App.css'\nimport Navigation from './Components/Navbars/Navigation'\nimport About from './Components/About'\nimport TemplatesPage from './Components/TemplatesPage'\nimport Home from './Components/Home'\n\nconst App = () => {\n  const [route, setRoute] = useState('signout')\n  const [isSignedIn, setIsSignedIn] = useState(false)\n  const [displayPage, setDisplayPage] = useState(Home)\n\n  if (isSignedIn === 'signout') {\n    setIsSignedIn(false)\n  } else if (isSignedIn === 'signin') {\n    setIsSignedIn(true)\n  }\n\n  const onRouteChange = (route) => {\n    if (route === 'signout') {\n      setRoute({ isSignedIn: false })\n    } else if (route === 'signin') {\n      setRoute({ isSignedIn: true })\n    } else if (route === 'Home') {\n      setDisplayPage(<Home />)\n    } else if (route === 'About') {\n      setDisplayPage(<About />)\n    } else if (route === 'TemplatesPage') {\n      setDisplayPage(<TemplatesPage />)\n    }\n    setRoute({ route: route })\n  }\n\n  return (\n    <>\n      <div className=\"Frontscr\">\n        <Navigation isSignedIn={setIsSignedIn} onRouteChange={onRouteChange} />\n        {displayPage}\n      </div>\n    </>\n  )\n}\n\nexport default App\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Home.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/About.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/TemplatesPage.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Navbars/Navigation.js",["50","51"],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Displayer.js",["52","53","54","55"],"import React, { createRef, useState, useEffect, useLayoutEffect } from 'react'\nimport axios from 'axios'\nimport background from './Images/background1.jpg'\n\nconst UpdateWindowSize = () => {\n  const [size, setSize] = useState([1000, 1000])\n  useLayoutEffect(() => {\n    const updateSize = () => {\n      setSize([window.innerWidth, window.innerHeight])\n    }\n    window.addEventListener('resize', updateSize)\n    return () => window.removeEventListener('resize', updateSize)\n  }, [])\n  return size\n}\n\nlet rafId\n\nlet ctx, x_end, y_end, bar_height\n\nconst bars = 900 //  max 1030 - leave it in 555\nconst bar_width = 2 //  good in 1\nconst radius = 0 // innercircle\nlet audio\nlet audioContext\nlet source\nlet analyser\nlet frequency_array\nconst createAudioContext = () => {\n  audio = new Audio()\n\n  audioContext = new (window.AudioContext || window.webkitAudioContext)()\n  source = audioContext.createMediaElementSource(audio)\n  analyser = audioContext.createAnalyser()\n  source.connect(analyser)\n  analyser.connect(audioContext.destination)\n  frequency_array = new Uint8Array(analyser.frequencyBinCount)\n}\n\nconst Displayer = () => {\n  const [width, height] = UpdateWindowSize()\n  const [canvas, setCanvas] = useState(createRef())\n  const [isPaused, setIsPaused] = useState(true)\n  const [songSelect, setsongSelect] = useState()\n  const [currentSong, setCurrentSong] = useState(0)\n  const [sliderM, setSliderM] = useState(1)\n  const [sliderN, setSliderN] = useState(1)\n  const center_x = width / 2\n  const center_y = height / 2\n  useEffect(() => {\n    if (rafId) {\n      cancelAnimationFrame(rafId)\n      rafId = requestAnimationFrame(tick)\n    }\n  }, [sliderM, sliderN])\n  const getSong = async (song) => {\n    createAudioContext()\n    const response = await axios.get(\n      `http://localhost:5000/upload/media/${song}`,\n      { responseType: 'blob' },\n    )\n    audio.src = URL.createObjectURL(response.data)\n    audio.load()\n    // audio.play()\n  }\n  function animationLooper(canvas) {\n    canvas.width = width\n    canvas.height = height\n    ctx = canvas.getContext('2d')\n    for (let i = 0; i < bars; i++) {\n      //divide a circle into equal part\n      const rads = (Math.PI * 2) / bars\n      // Math is magical - you can make lots of visualizer\n      // this 4.5 decides the canves size\n      bar_height = frequency_array[i] * 2.5\n      const x = center_x + Math.cos(rads * i) * radius\n      const y = center_y + Math.sin(rads * i) * radius\n      x_end = center_x + Math.cos(rads * sliderN * i) * (radius + bar_height)\n      y_end =\n        center_y +\n        Math.sin(rads * sliderM * i + (Math.PI / 640) * new Date()) *\n          (radius + bar_height)\n      //draw a bar\n      // const x = bar_width / 2 + (i * window.innerWidth) / bars;\n      // const y = 900;\n      // const y_end = 800 - bar_height;\n      // const x_end = x;\n      drawBar(x, y, x_end, y_end, i, ctx, canvas)\n    }\n  }\n  function drawBar(x1 = 0, y1 = 0, x2 = 0, y2 = 0, i, ctx) {\n    i = (i + new Date().getTime() * 2) % 600 //  2 is an OK number,  600/6 =100 integer is good\n    const gradient = ctx.createLinearGradient(x1, y1, x2, y2)\n    gradient.addColorStop(0, 'rgba(0, 255, 0, 255)')\n    gradient.addColorStop(1, 'rgba(254, 0, 0, 255)')\n    ctx.fillStyle = 'pink'\n    let lineColor\n    if (i < 150) {\n      // lineColor = \"red\"\n      lineColor =\n        'rgb(' +\n        Math.abs(275 - i) +\n        ', ' +\n        Math.abs(175 - i / 2) +\n        ', ' +\n        1000 +\n        ')'\n    } else if (i < 300) {\n      // lineColor=\"blue\"\n      lineColor =\n        'rgb(' +\n        1000 +\n        ', ' +\n        Math.abs(275 - i) +\n        ', ' +\n        Math.abs(175 - i / 2) +\n        ')'\n    } else if (i < 450) {\n      // lineColor=\"green\"\n      lineColor =\n        'rgb(' +\n        Math.abs(175 - i / 2) +\n        ', ' +\n        1000 +\n        ', ' +\n        Math.abs(275 - i) +\n        ')'\n    } else if (i < 600) {\n      // lineColor = \"red\"\n      lineColor =\n        'rgb(' +\n        Math.abs(175 - i / 2) +\n        ', ' +\n        1000 +\n        ', ' +\n        Math.abs(275 - i) +\n        ')'\n    } else if (i < 750) {\n      // lineColor=\"blue\"\n      lineColor =\n        'rgb(' +\n        1000 +\n        ', ' +\n        Math.abs(275 - i) +\n        ', ' +\n        Math.abs(175 - i / 2) +\n        ')'\n    } else if (i < 900) {\n      // lineColor=\"green\"\n      lineColor =\n        'rgb(' +\n        Math.abs(275 - i) +\n        ', ' +\n        Math.abs(175 - i / 2) +\n        ', ' +\n        1000 +\n        ')'\n    }\n\n    ctx.strokeStyle = lineColor\n    ctx.lineWidth = bar_width\n    ctx.beginPath()\n    ctx.moveTo(x1, y1)\n    ctx.lineTo(x2, y2)\n    ctx.stroke()\n  }\n\n  //Plays Music\n  const togglePlay = () => {\n    // createAudioContext()\n    if (audio.paused) {\n      audioContext.resume()\n      audio.play()\n      setIsPaused(false)\n      rafId = requestAnimationFrame(tick)\n    } else {\n      audio.pause()\n      setIsPaused(true)\n      cancelAnimationFrame(rafId)\n    }\n  }\n\n  function tick() {\n    animationLooper(canvas.current)\n    analyser.getByteTimeDomainData(frequency_array)\n    rafId = requestAnimationFrame(tick)\n  }\n\n  useEffect(() => {\n    const getSongList = async () => {\n      let res = await axios.get('http://localhost:5000/upload/list')\n      setsongSelect(res.data)\n      console.log(setsongSelect)\n    }\n    getSongList()\n  }, [])\n\n  return (\n    <div\n      className=\"audioControlBackground\"\n      style={{ backgroundImage: `url(${background})` }}\n    >\n      <div className=\"buttonWrapper\">\n        <button\n          onClick={() => {\n            if (audio) {\n              togglePlay()\n            }\n          }}\n          style={{\n            width: '150px',\n            backgroundColor: isPaused\n              ? // this is the play/pause button colors\n                'yellow'\n              : 'green',\n          }}\n        >\n          {isPaused ? 'Play' : 'Pause'}\n        </button>\n\n        <select\n          onChange={(e) => {\n            getSong(e.target.value)\n          }}\n        >\n          {' '}\n          <option>Choose A Song</option>\n          {songSelect &&\n            songSelect.map((song) => {\n              return <option value={song}>{song}</option>\n            })}\n        </select>\n      </div>\n      <div className=\"songInfoWrapper\">\n        {/* Inserted by SN */}\n\n        {/* Removed by SN */}\n        {/* < h3 style={{ color: textColor }}>{songName}</h3> */}\n      </div>\n      <div className=\"canvasWrapper\">\n        {audio && audio.paused ? <canvas /> : <canvas ref={canvas} />}\n      </div>\n      <div className=\"sliders\">\n        {' '}\n        <div>{sliderM}</div>\n        <input\n          className=\"slider\"\n          type=\"range\"\n          min=\"0\"\n          max=\"8\"\n          step=\".5\"\n          onChange={(e) => {\n            setSliderM(e.target.value)\n          }}\n          value={sliderM}\n        />{' '}\n        <div>{sliderN}</div>\n        <input\n          className=\"slider1\"\n          type=\"range\"\n          min=\"0\"\n          max=\"8\"\n          step=\".5\"\n          onChange={(e) => {\n            setSliderN(e.target.value)\n          }}\n          value={sliderN}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Displayer\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/InsertIcon.js",["56"],"import React from 'react'\n// import { Container, Row, Col, Image } from 'react-bootstrap'\nimport icon from '../Images/Daco.png'\n\n//Icon input\nconst InsertIcon = () => {\n  return (\n    <div className=\"iconWrapper\">\n      <img\n        style={{\n          width: '15%',\n          height: '15%',\n        }}\n        src={`${icon}`}\n      />\n    </div>\n  )\n}\n\nexport default InsertIcon\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/FileUpload.js",["57","58","59"],"import React, { useState } from 'react'\nimport axios from 'axios'\nimport { Card } from 'react-bootstrap'\nimport Playlist from './Playlist'\n\nconst FileUpload = (props) => {\n  //Need to use a hook to set text in the label to the file namespace\n  const [file, setFile] = useState('')\n  const [filename, setFilename] = useState('Choose File')\n  const [uploadedFile, setUploadedFile] = useState({})\n  const [currentUser, setCurrentUser] = useState('USR------1')\n\n  console.log('USER.....:', currentUser)\n\n  const onChange = (e) => {\n    //HTML file uploads come as an array so we want the index of the first file\n    setFile(e.target.files[0])\n    setFilename(e.target.files[0].name)\n  }\n\n  const onSubmit = async (e) => {\n    // e.preventDefault() used to prevent submitting by accident by preventing normal submitting\n    e.preventDefault()\n    const formData = new FormData()\n    formData.append('file', file)\n\n    try {\n      const res = await axios.post(\n        'http://localhost:5000/upload/media',\n        formData,\n        {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        },\n      )\n      const { fileName, filePath } = res.data\n      console.log(res.headers)\n      if (res.status === 200) {\n        console.log('Was uploaded successfully ' + res.status)\n      }\n      setUploadedFile({ fileName, filePath })\n    } catch (err) {\n      if (err.response.status === 500) {\n        console.error('There is a problem with the server ' + err.message)\n      } else {\n        //This message is from the server if no file is uploaded\n        // console.error('we had an error??? ' + err.response.data.msg)\n        console.error(err.response.data.msg)\n      }\n    }\n  }\n  // If the audio button is selected\n  if (props.mediatype === 'Audio') {\n    return (\n      <Card style={{ width: '16rem', margin: '16px' }}>\n        <Card.Body>\n          <Card.Title>{props.mediatype} Upload</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            Select {props.mediatype} to Upload\n          </Card.Subtitle>\n          <Card.Text>\n            <>\n              <div className=\"mb-2\">\n                <form onSubmit={onSubmit}>\n                  <div className=\"input-group mb-3\">\n                    <input\n                      type=\"file\"\n                      className=\"form-control mb-5\"\n                      id=\"inputGroupFile02\"\n                      accept={`${props.mediatype}/wav, ${props.mediatype}/mp3, ${props.mediatype}/mpeg`}\n                      onChange={onChange}\n                    />\n                    <input\n                      type=\"submit\"\n                      value={`Upload ${props.mediatype}`}\n                      // className=\"btn btn-primary btn-block\"\n                      className=\"btn1\"\n                    />\n\n                    <label\n                      className=\"id=inputGroupFile02\"\n                      htmlFor=\"inputGroupFile02\"\n                    ></label>\n                  </div>\n                </form>\n              </div>\n            </>\n          </Card.Text>\n        </Card.Body>\n        <Playlist />\n      </Card>\n    )\n  }\n  if (props.mediatype === 'Background') {\n    return (\n      <Card style={{ width: '16rem', margin: '16px' }}>\n        <Card.Body>\n          <Card.Title>{props.mediatype} Upload</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            Select {props.mediatype} to Upload\n          </Card.Subtitle>\n          <Card.Text>\n            <>\n              <div className=\"mb-2\">\n                <form onSubmit={onSubmit}>\n                  <div className=\"input-group mb-3\">\n                    <input\n                      type=\"file\"\n                      className=\"form-control mb-5\"\n                      id=\"inputGroupFile02\"\n                      accept={`${props.filetype}/jpg, ${props.filetype}/jpeg, ${props.filetype}/bmp`}\n                      onChange={onChange}\n                    />\n                    <input\n                      type=\"submit\"\n                      value={`Upload ${props.mediatype}`}\n                      // className=\"btn btn-primary btn-block\"\n                      className=\"btn1\"\n                    />\n\n                    <label\n                      className=\"id=inputGroupFile02\"\n                      htmlFor=\"inputGroupFile02\"\n                    ></label>\n                  </div>\n                </form>\n              </div>\n            </>\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    )\n  }\n  return (\n    <Card style={{ width: '16rem', margin: '16px' }}>\n      <Card.Body>\n        <Card.Title>{props.mediatype} Upload</Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          Select {props.mediatype} to Upload\n        </Card.Subtitle>\n        <Card.Text>\n          <>\n            <div className=\"mb-2\">\n              <form onSubmit={onSubmit}>\n                <div className=\"input-group mb-3\">\n                  <input\n                    type=\"file\"\n                    className=\"form-control mb-5\"\n                    id=\"inputGroupFile02\"\n                    accept={`${props.filetype}/gif, ${props.filetype}/png, ${props.filetype}/jpg`}\n                    onChange={onChange}\n                  />\n                  <input\n                    type=\"submit\"\n                    value={`Upload ${props.mediatype}`}\n                    // className=\"btn btn-primary btn-block\"\n                    className=\"btn1\"\n                  />\n\n                  <label\n                    className=\"id=inputGroupFile02\"\n                    htmlFor=\"inputGroupFile02\"\n                  ></label>\n                </div>\n              </form>\n            </div>\n          </>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default FileUpload\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/Playlist.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":9,"column":10,"nodeType":"66","messageId":"67","endLine":9,"endColumn":15},{"ruleId":"64","severity":1,"message":"68","line":2,"column":44,"nodeType":"66","messageId":"67","endLine":2,"endColumn":47},{"ruleId":"64","severity":1,"message":"69","line":2,"column":49,"nodeType":"66","messageId":"67","endLine":2,"endColumn":52},{"ruleId":"64","severity":1,"message":"70","line":42,"column":18,"nodeType":"66","messageId":"67","endLine":42,"endColumn":27},{"ruleId":"64","severity":1,"message":"71","line":45,"column":10,"nodeType":"66","messageId":"67","endLine":45,"endColumn":21},{"ruleId":"64","severity":1,"message":"72","line":45,"column":23,"nodeType":"66","messageId":"67","endLine":45,"endColumn":37},{"ruleId":"73","severity":1,"message":"74","line":55,"column":6,"nodeType":"75","endLine":55,"endColumn":24,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":9,"column":7,"nodeType":"79","endLine":15,"endColumn":9},{"ruleId":"64","severity":1,"message":"80","line":9,"column":10,"nodeType":"66","messageId":"67","endLine":9,"endColumn":18},{"ruleId":"64","severity":1,"message":"81","line":10,"column":10,"nodeType":"66","messageId":"67","endLine":10,"endColumn":22},{"ruleId":"64","severity":1,"message":"82","line":11,"column":23,"nodeType":"66","messageId":"67","endLine":11,"endColumn":37},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'route' is assigned a value but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'setCanvas' is assigned a value but never used.","'currentSong' is assigned a value but never used.","'setCurrentSong' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tick'. Either include it or remove the dependency array.","ArrayExpression",["85"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'filename' is assigned a value but never used.","'uploadedFile' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [sliderM, sliderN, tick]",{"range":"88","text":"89"},[1642,1660],"[sliderM, sliderN, tick]"]