<<<<<<< HEAD
[{"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\index.js":"1","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\App.js":"2","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\About.js":"3","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Home.js":"4","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Signup.js":"5","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\MyAccount.js":"6","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\PrivateRoute.js":"7","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Login.js":"8","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\ForgotPassword.js":"9","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\UpdateProfile.js":"10","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\contexts\\AuthContext.js":"11","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Displayer.js":"12","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\MediaInteractions\\InsertIcon.js":"13","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Navigation.js":"14","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\MediaInteractions\\FileUpload.js":"15","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\firebase.js":"16","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\MediaInteractions\\Playlist.js":"17"},{"size":415,"mtime":1613411119397,"results":"18","hashOfConfig":"19"},{"size":2262,"mtime":1613414431331,"results":"20","hashOfConfig":"19"},{"size":2257,"mtime":1613411281020,"results":"21","hashOfConfig":"19"},{"size":2053,"mtime":1613411119382,"results":"22","hashOfConfig":"19"},{"size":2203,"mtime":1613411119392,"results":"23","hashOfConfig":"19"},{"size":1816,"mtime":1613411119388,"results":"24","hashOfConfig":"19"},{"size":606,"mtime":1613411119391,"results":"25","hashOfConfig":"19"},{"size":1810,"mtime":1613411119384,"results":"26","hashOfConfig":"19"},{"size":1708,"mtime":1613411119380,"results":"27","hashOfConfig":"19"},{"size":2726,"mtime":1613411119393,"results":"28","hashOfConfig":"19"},{"size":1535,"mtime":1613411119396,"results":"29","hashOfConfig":"19"},{"size":7502,"mtime":1613411119380,"results":"30","hashOfConfig":"19"},{"size":399,"mtime":1613063897108,"results":"31","hashOfConfig":"19"},{"size":1771,"mtime":1613411119390,"results":"32","hashOfConfig":"19"},{"size":6485,"mtime":1613411119385,"results":"33","hashOfConfig":"19"},{"size":592,"mtime":1613411119396,"results":"34","hashOfConfig":"19"},{"size":541,"mtime":1613411119385,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"mpxc4k",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\index.js",[],["78","79"],"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\App.js",["80","81"],"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\About.js",["82","83","84"],"import React from 'react'\r\nimport { Container, Card, Button } from \"react-bootstrap\";\r\n// import Displayer from './Displayer'\r\nimport Navigation from './Navigation'\r\n\r\n\r\n// styling for About is in App.css\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n         <Navigation />\r\n            <div className=\"ui container Abountscr\">\r\n            <br></br>\r\n            <h2>Turn your music into a killer video.</h2>\r\n            <br></br>\r\n            <h4>\r\n                We make it fast and easy to create custom music visualizers. You're one step closer to entertaining your audience with self made videos.\r\n            </h4>\r\n            <br></br>\r\n            <h4>\r\n                No download needed. Jump into the web based editor and start customizing right away. The live video preview updates in real time and moves with your music.\r\n\r\n                It only takes a few minutes to make a video. Use simple pre-set controls to enjoy your tracks\r\n            </h4>\r\n            {/* SN: sorry this is illegal (below) */}\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n// const About = () => {\r\n//     return (\r\n//         <div className=\"ui container Abountscr\">\r\n//             <br></br>\r\n//             <h2>Turn your music into a killer video.</h2>\r\n//             <br></br>\r\n//             <h4>\r\n//                 We make it fast and easy to create custom music visualizers. You're one step closer to entertaining your audience with self made videos.\r\n//             </h4>\r\n//             <br></br>\r\n//             <h4>\r\n//                 No download needed. Jump into the web based editor and start customizing right away. The live video preview updates in real time and moves with your music.\r\n//                 It only takes a few minutes to make a video. Use simple pre-set controls to enjoy your tracks\r\n//             </h4>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nexport default About\r\n","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Home.js",["85"],"import React from 'react'\r\nimport { Card, Row, Col, Nav, Container } from 'react-bootstrap'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport Displayer from './Displayer'\r\nimport FileUpload from './MediaInteractions/FileUpload'\r\nimport InsertIcon from './MediaInteractions/InsertIcon'\r\nimport Navigation from './Navigation'\r\n// import Playlist from './MediaInteractions/Playlist'\r\n\r\nconst Home = () => {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n<Container fluid id=\"editor-cont\">\r\n<Row>\r\n  <Col xs={6} md={4}>\r\n  <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n  <Row>\r\n    <Col sm={3}>\r\n      <Nav variant=\"pills\" className=\"flex-column\" id=\"tab-nav\">\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"uploadAudio\">Audio</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"uploadBackground\">Background</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"uploadIcon\">Icon</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"home\">Visualizer</Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n    </Col>\r\n    <Col sm={9}>\r\n      <Tab.Content id=\"tab-cont\">\r\n        <Tab.Pane eventKey=\"uploadAudio\" mediatype=\"audio\">\r\n        <FileUpload mediatype=\"Audio\" />\r\n        </Tab.Pane>\r\n        <Tab.Pane eventKey=\"uploadBackground\">\r\n        <FileUpload mediatype=\"Background\" filetype=\"image\" />\r\n        </Tab.Pane>\r\n        <Tab.Pane eventKey=\"uploadIcon\">\r\n        <FileUpload mediatype=\"Icon\" filetype=\"image\" />\r\n        </Tab.Pane>\r\n        \r\n      </Tab.Content>\r\n    </Col>\r\n  </Row>\r\n</Tab.Container>\r\n\r\n    </Col>\r\n    <Col xs={12} md={8}>\r\n     {/* card for displaying the visualizer on the right panel*/}\r\n    {/* <Card className=\"visualizer\">\r\n              <Card.Body> */}\r\n              <Container>\r\n              <Displayer />\r\n                <InsertIcon />\r\n              </Container>\r\n\r\n              {/* </Card.Body>\r\n            </Card> */}\r\n    </Col>\r\n  </Row>\r\n\r\n</Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Signup.js",[],"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\MyAccount.js",["86"],"import React, { useState } from \"react\"\r\n  import { Card, Button, Alert } from \"react-bootstrap\"\r\n  import { useAuth } from \"../contexts/AuthContext\"\r\n  import { Link, useHistory } from \"react-router-dom\"\r\nimport Navigation from \"./Navigation\"\r\n  \r\n  export default function Dashboard() {\r\n    const styles = {\r\n        root: {\r\n            width: \"80%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginBottom: \"105px\",\r\n            marginTop: \"105px\",\r\n            background: \"antiquewhite\",\r\n            padding: \"100px\",\r\n            fontSize: \"1.5rem\",\r\n            borderRadius: \"20px\",\r\n            backgroundColor: \"#357E85\"\r\n        },\r\n        labelText: {\r\n            fontFamily: \"Roboto\",\r\n            fontSize: \"2rem\",\r\n            color: \"#CCEBF4\",\r\n        }\r\n      }    \r\n    const [error, setError] = useState(\"\")\r\n    const { currentUser, logout } = useAuth()\r\n    const history = useHistory()\r\n  \r\n    async function handleLogout() {\r\n      setError(\"\")\r\n  \r\n      try {\r\n        await logout()\r\n        history.push(\"/login\")\r\n      } catch {\r\n        setError(\"Failed to log out\")\r\n      }\r\n    }\r\n  \r\n    return (\r\n<div>\r\n  <Navigation />\r\n<Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Profile</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <strong>Email:</strong> {currentUser.email}\r\n            <strong>Saved Visualizer:</strong>\r\n            <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\r\n              Update Profile\r\n            </Link>\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          <Button variant=\"link\" onClick={handleLogout}>\r\n            Log Out\r\n          </Button>\r\n        </div>\r\n</div>\r\n    )\r\n  }","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\PrivateRoute.js",[],"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Login.js",[],"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\ForgotPassword.js",[],"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\UpdateProfile.js",[],"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\contexts\\AuthContext.js",[],"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Displayer.js",["87","88","89","90","91"],"import React, { createRef, useState, useEffect, useLayoutEffect } from 'react'\r\nimport axios from 'axios'\r\nimport background from './Images/background1.jpg'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nconst UpdateWindowSize = () => {\r\n  const [size, setSize] = useState([1000, 1000])\r\n  useLayoutEffect(() => {\r\n    const updateSize = () => {\r\n      setSize([window.innerWidth, window.innerHeight])\r\n    }\r\n    window.addEventListener('resize', updateSize)\r\n    return () => window.removeEventListener('resize', updateSize)\r\n  }, [])\r\n  return size\r\n}\r\n\r\nlet rafId\r\n\r\nlet ctx, x_end, y_end, bar_height\r\n\r\nconst bars = 900 //  max 1030 - leave it in 555\r\nconst bar_width = 2 //  good in 1\r\nconst radius = 0 // innercircle\r\nlet audio\r\nlet audioContext\r\nlet source\r\nlet analyser\r\nlet frequency_array\r\nconst createAudioContext = () => {\r\n  audio = new Audio()\r\n\r\n  audioContext = new (window.AudioContext || window.webkitAudioContext)()\r\n  source = audioContext.createMediaElementSource(audio)\r\n  analyser = audioContext.createAnalyser()\r\n  source.connect(analyser)\r\n  analyser.connect(audioContext.destination)\r\n  frequency_array = new Uint8Array(analyser.frequencyBinCount)\r\n}\r\n\r\nconst Displayer = () => {\r\n  const [width, height] = UpdateWindowSize()\r\n  const [canvas, setCanvas] = useState(createRef())\r\n  const [isPaused, setIsPaused] = useState(true)\r\n  const [songSelect, setsongSelect] = useState()\r\n  const [currentSong, setCurrentSong] = useState(0)\r\n  const [sliderM, setSliderM] = useState(1)\r\n  const [sliderN, setSliderN] = useState(1)\r\n  const center_x = width / 2\r\n  const center_y = height / 2\r\n  useEffect(() => {\r\n    if (rafId) {\r\n      cancelAnimationFrame(rafId)\r\n      rafId = requestAnimationFrame(tick)\r\n    }\r\n  }, [sliderM, sliderN])\r\n  const getSong = async (song) => {\r\n    createAudioContext()\r\n    const response = await axios.get(\r\n      `http://localhost:5000/upload/media/${song}`,\r\n      { responseType: 'blob' },\r\n    )\r\n    audio.src = URL.createObjectURL(response.data)\r\n    audio.load()\r\n    // audio.play()\r\n  }\r\n  function animationLooper(canvas) {\r\n    canvas.width = width\r\n    canvas.height = height\r\n    ctx = canvas.getContext('2d')\r\n    for (let i = 0; i < bars; i++) {\r\n      //divide a circle into equal part\r\n      const rads = (Math.PI * 2) / bars\r\n      // Math is magical - you can make lots of visualizer\r\n      // this 4.5 decides the canves size\r\n      bar_height = frequency_array[i] * 2.5\r\n      const x = center_x + Math.cos(rads * i) * radius\r\n      const y = center_y + Math.sin(rads * i) * radius\r\n      x_end = center_x + Math.cos(rads * sliderN * i) * (radius + bar_height)\r\n      y_end =\r\n        center_y +\r\n        Math.sin(rads * sliderM * i + (Math.PI / 640) * new Date()) *\r\n          (radius + bar_height)\r\n      //draw a bar\r\n      // const x = bar_width / 2 + (i * window.innerWidth) / bars;\r\n      // const y = 900;\r\n      // const y_end = 800 - bar_height;\r\n      // const x_end = x;\r\n      drawBar(x, y, x_end, y_end, i, ctx, canvas)\r\n    }\r\n  }\r\n  function drawBar(x1 = 0, y1 = 0, x2 = 0, y2 = 0, i, ctx) {\r\n    i = (i + new Date().getTime() * 2) % 600 //  2 is an OK number,  600/6 =100 integer is good\r\n    const gradient = ctx.createLinearGradient(x1, y1, x2, y2)\r\n    gradient.addColorStop(0, 'rgba(0, 255, 0, 255)')\r\n    gradient.addColorStop(1, 'rgba(254, 0, 0, 255)')\r\n    ctx.fillStyle = 'pink'\r\n    let lineColor\r\n    if (i < 150) {\r\n      // lineColor = \"red\"\r\n      lineColor =\r\n        'rgb(' +\r\n        Math.abs(275 - i) +\r\n        ', ' +\r\n        Math.abs(175 - i / 2) +\r\n        ', ' +\r\n        1000 +\r\n        ')'\r\n    } else if (i < 300) {\r\n      // lineColor=\"blue\"\r\n      lineColor =\r\n        'rgb(' +\r\n        1000 +\r\n        ', ' +\r\n        Math.abs(275 - i) +\r\n        ', ' +\r\n        Math.abs(175 - i / 2) +\r\n        ')'\r\n    } else if (i < 450) {\r\n      // lineColor=\"green\"\r\n      lineColor =\r\n        'rgb(' +\r\n        Math.abs(175 - i / 2) +\r\n        ', ' +\r\n        1000 +\r\n        ', ' +\r\n        Math.abs(275 - i) +\r\n        ')'\r\n    } else if (i < 600) {\r\n      // lineColor = \"red\"\r\n      lineColor =\r\n        'rgb(' +\r\n        Math.abs(175 - i / 2) +\r\n        ', ' +\r\n        1000 +\r\n        ', ' +\r\n        Math.abs(275 - i) +\r\n        ')'\r\n    } else if (i < 750) {\r\n      // lineColor=\"blue\"\r\n      lineColor =\r\n        'rgb(' +\r\n        1000 +\r\n        ', ' +\r\n        Math.abs(275 - i) +\r\n        ', ' +\r\n        Math.abs(175 - i / 2) +\r\n        ')'\r\n    } else if (i < 900) {\r\n      // lineColor=\"green\"\r\n      lineColor =\r\n        'rgb(' +\r\n        Math.abs(275 - i) +\r\n        ', ' +\r\n        Math.abs(175 - i / 2) +\r\n        ', ' +\r\n        1000 +\r\n        ')'\r\n    }\r\n\r\n    ctx.strokeStyle = lineColor\r\n    ctx.lineWidth = bar_width\r\n    ctx.beginPath()\r\n    ctx.moveTo(x1, y1)\r\n    ctx.lineTo(x2, y2)\r\n    ctx.stroke()\r\n  }\r\n\r\n  //Plays Music\r\n  const togglePlay = () => {\r\n    // createAudioContext()\r\n    if (audio.paused) {\r\n      audioContext.resume()\r\n      audio.play()\r\n      setIsPaused(false)\r\n      rafId = requestAnimationFrame(tick)\r\n    } else {\r\n      audio.pause()\r\n      setIsPaused(true)\r\n      cancelAnimationFrame(rafId)\r\n    }\r\n  }\r\n\r\n  function tick() {\r\n    animationLooper(canvas.current)\r\n    analyser.getByteTimeDomainData(frequency_array)\r\n    rafId = requestAnimationFrame(tick)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getSongList = async () => {\r\n      let res = await axios.get('http://localhost:5000/upload/list')\r\n      setsongSelect(res.data)\r\n      console.log(setsongSelect)\r\n    }\r\n    getSongList()\r\n  }, [])\r\n\r\n  return (\r\n   \r\n      <div\r\n      className=\"audioControlBackground\"\r\n      style={{ backgroundImage: `url(${background})` }}\r\n    >\r\n      <div className=\"buttonWrapper\">\r\n        <button\r\n          onClick={() => {\r\n            if (audio) {\r\n              togglePlay()\r\n            }\r\n          }}\r\n          style={{\r\n            width: '150px',\r\n            backgroundColor: isPaused\r\n              ? // this is the play/pause button colors\r\n                'yellow'\r\n              : 'green',\r\n          }}\r\n        >\r\n          {isPaused ? 'Play' : 'Pause'}\r\n        </button>\r\n\r\n        <select\r\n          onChange={(e) => {\r\n            getSong(e.target.value)\r\n          }}\r\n        >\r\n          {' '}\r\n          <option>Choose A Song</option>\r\n          {songSelect &&\r\n            songSelect.map((song) => {\r\n              return <option value={song}>{song}</option>\r\n            })}\r\n        </select>\r\n      </div>\r\n      <div className=\"songInfoWrapper\">\r\n        {/* Inserted by SN */}\r\n\r\n        {/* Removed by SN */}\r\n        {/* < h3 style={{ color: textColor }}>{songName}</h3> */}\r\n      </div>\r\n      <div className=\"canvasWrapper\">\r\n        {audio && audio.paused ? <canvas /> : <canvas ref={canvas} />}\r\n        <div className=\"sliders\"> \r\n        {' '}\r\n        <div>{sliderM}</div>\r\n        <input\r\n          className=\"slider\"\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"8\"\r\n          step=\".5\"\r\n          onChange={(e) => {\r\n            setSliderM(e.target.value)\r\n          }}\r\n          value={sliderM}\r\n        />{' '}\r\n        <div>{sliderN}</div>\r\n        <input\r\n          className=\"slider1\"\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"8\"\r\n          step=\".5\"\r\n          onChange={(e) => {\r\n            setSliderN(e.target.value)\r\n          }}\r\n          value={sliderN}\r\n        />\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Displayer\r\n","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\MediaInteractions\\InsertIcon.js",["92"],"import React from 'react'\r\n// import { Container, Row, Col, Image } from 'react-bootstrap'\r\nimport icon from '../Images/Daco.png'\r\n\r\n//Icon input\r\nconst InsertIcon = () => {\r\n  return (\r\n    <div className=\"iconWrapper\">\r\n      <img\r\n        style={{\r\n          width: '15%',\r\n          height: '15%',\r\n        }}\r\n        src={`${icon}`}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InsertIcon\r\n","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Navigation.js",["93","94"],"import React, { useState }  from 'react'\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { Navbar, Nav, Container } from 'react-bootstrap'\r\nimport pic from './Images/logogrey.png'\r\n// import pic from './Logo1sn.png'\r\n\r\n\r\nconst Navigation = () => {\r\n\r\nconst [error, setError] = useState(\"\")\r\nconst { currentUser, logout } = useAuth()\r\nconst history = useHistory()\r\n\r\nasync function handleLogout() {\r\n  setError(\"\")\r\n\r\n  try {\r\n    await logout()\r\n    history.push(\"/login\")\r\n  } catch {\r\n    setError(\"Failed to log out\")\r\n  }\r\n}\r\n\r\n  //Navbar\r\n\r\n  return (\r\n    \r\n\r\n<Navbar style={{ backgroundColor: 'black' }} variant=\"dark\" expand=\"sm\" sticky=\"top\" className=\"justify-content-end\">\r\n        <Container id=\"nav-wrap\">\r\n        <Navbar.Brand href=\"/Login\">\r\n          {/* <img src={pic} alt={''} width={80} height={80} /> */}\r\n          <img \r\n          src={pic} \r\n          alt={''} \r\n          height={'30%'} \r\n          width={'30%'} \r\n          className=\"d-inline-block align-top\"/>\r\n        </Navbar.Brand>\r\n\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav>\r\n          <Nav.Item id=\"nav-item\"><Link to=\"/About\" style={{ color: 'white' }}>About</Link></Nav.Item>\r\n          <Nav.Item id=\"nav-item\"><Link to=\"/Home\" style={{ color: 'white' }}>Editor</Link></Nav.Item>\r\n          <Nav.Item id=\"nav-item\"><Link to=\"/MyAccount\" style={{ color: 'white' }}>Profile</Link></Nav.Item>\r\n          <Nav.Item id=\"nav-item\" onClick={handleLogout}><Link style={{ color: 'white' }} >Logout</Link></Nav.Item>\r\n\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n\r\n   \r\n  )\r\n}\r\n\r\nexport default Navigation","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\MediaInteractions\\FileUpload.js",["95","96","97"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Card } from 'react-bootstrap'\r\nimport Playlist from './Playlist'\r\n\r\nconst FileUpload = (props) => {\r\n  //Need to use a hook to set text in the label to the file namespace\r\n  const [file, setFile] = useState('')\r\n  const [filename, setFilename] = useState('Choose File')\r\n  const [uploadedFile, setUploadedFile] = useState({})\r\n  const [currentUser, setCurrentUser] = useState('USR------1')\r\n  const [playlist, setPlaylist] = useState()\r\n\r\n  console.log('USER.....:', currentUser)\r\n\r\n  const onChange = (e) => {\r\n    //HTML file uploads come as an array so we want the index of the first file\r\n    setFile(e.target.files[0])\r\n    setFilename(e.target.files[0].name)\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    // e.preventDefault() used to prevent submitting by accident by preventing normal submitting\r\n    e.preventDefault()\r\n\r\n    const formData = new FormData()\r\n    formData.append('file', file)\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        'http://localhost:5000/upload/media',\r\n        formData,\r\n        {\r\n          headers: { 'Content-Type': 'multipart/form-data' },\r\n        },\r\n      )\r\n      const { fileName, filePath } = res.data\r\n      console.log('These are the headers', res.headers)\r\n      if (res.status === 200) {\r\n        console.log('Was uploaded successfully ' + res.status)\r\n      }\r\n      setUploadedFile({ fileName, filePath })\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        console.error('There is a problem with the server ' + err.message)\r\n      } else {\r\n        //This message is from the server if no file is uploaded\r\n        // console.error('we had an error??? ' + err.response.data.msg)\r\n        console.error(err.response.data.msg)\r\n      }\r\n    }\r\n  }\r\n  // Gets the playlist and sends to the Playlist Component\r\n\r\n  const getPlaylist = () => {\r\n    axios\r\n      .get('http://localhost:5000/upload/list')\r\n      .then((res) => {\r\n        console.log('this is the res', res)\r\n        return res.data\r\n      })\r\n      .then((playlist) => {\r\n        console.log('This is the playlist', playlist)\r\n        setPlaylist(playlist)\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    getPlaylist()\r\n  }, [])\r\n\r\n  // If the audio button is selected\r\n  if (props.mediatype === 'Audio') {\r\n    return (\r\n      <Card style={{ width: '16rem', margin: '16px' }}>\r\n        <Card.Body>\r\n          <Card.Title>{props.mediatype} Upload</Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            Select {props.mediatype} to Upload\r\n          </Card.Subtitle>\r\n          <Card.Text>\r\n            <>\r\n              <div className=\"mb-2\">\r\n                <form onSubmit={onSubmit}>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"form-control mb-5\"\r\n                      id=\"inputGroupFile02\"\r\n                      accept={`${props.mediatype}/wav, ${props.mediatype}/mp3, ${props.mediatype}/mpeg`}\r\n                      onChange={onChange}\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      value={`Submit`}\r\n                      // className=\"btn btn-primary btn-block\"\r\n                      className=\"btn1\"\r\n                      onClick={() => getPlaylist()}\r\n                    />\r\n\r\n                    <label\r\n                      className=\"id=inputGroupFile02\"\r\n                      htmlFor=\"inputGroupFile02\"\r\n                    ></label>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </>\r\n          </Card.Text>\r\n        </Card.Body>\r\n        <Playlist playlist={playlist} />\r\n      </Card>\r\n    )\r\n  }\r\n  if (props.mediatype === 'Background') {\r\n    return (\r\n      <Card style={{ width: '16rem', margin: '16px' }}>\r\n        <Card.Body>\r\n          <Card.Title>{props.mediatype} Upload</Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            Select {props.mediatype} to Upload\r\n          </Card.Subtitle>\r\n          <Card.Text>\r\n            <>\r\n              <div className=\"mb-2\">\r\n                <form onSubmit={onSubmit}>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"form-control mb-5\"\r\n                      id=\"inputGroupFile02\"\r\n                      accept={`${props.filetype}/jpg, ${props.filetype}/jpeg, ${props.filetype}/bmp`}\r\n                      onChange={onChange}\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      value={`Submit`}\r\n                      // className=\"btn btn-primary btn-block\"\r\n                      className=\"btn1\"\r\n                    />\r\n\r\n                    <label\r\n                      className=\"id=inputGroupFile02\"\r\n                      htmlFor=\"inputGroupFile02\"\r\n                    ></label>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n  }\r\n  return (\r\n    <Card style={{ width: '16rem', margin: '16px' }}>\r\n      <Card.Body>\r\n        <Card.Title>{props.mediatype} Upload</Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">\r\n          Select {props.mediatype} to Upload\r\n        </Card.Subtitle>\r\n        <Card.Text>\r\n          <>\r\n            <div className=\"mb-2\">\r\n              <form onSubmit={onSubmit}>\r\n                <div className=\"input-group mb-3\">\r\n                  <input\r\n                    type=\"file\"\r\n                    className=\"form-control mb-5\"\r\n                    id=\"inputGroupFile02\"\r\n                    accept={`${props.filetype}/gif, ${props.filetype}/png, ${props.filetype}/jpg`}\r\n                    onChange={onChange}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value={`Submit`}\r\n                    // className=\"btn btn-primary btn-block\"\r\n                    className=\"btn1\"\r\n                  />\r\n\r\n                  <label\r\n                    className=\"id=inputGroupFile02\"\r\n                    htmlFor=\"inputGroupFile02\"\r\n                  ></label>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default FileUpload\r\n","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\firebase.js",[],"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\MediaInteractions\\Playlist.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"106","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":19},{"ruleId":"102","severity":1,"message":"106","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":19},{"ruleId":"102","severity":1,"message":"107","line":2,"column":21,"nodeType":"104","messageId":"105","endLine":2,"endColumn":25},{"ruleId":"102","severity":1,"message":"108","line":2,"column":27,"nodeType":"104","messageId":"105","endLine":2,"endColumn":33},{"ruleId":"102","severity":1,"message":"107","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":14},{"ruleId":"102","severity":1,"message":"109","line":8,"column":11,"nodeType":"104","messageId":"105","endLine":8,"endColumn":17},{"ruleId":"102","severity":1,"message":"106","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":19},{"ruleId":"102","severity":1,"message":"110","line":43,"column":18,"nodeType":"104","messageId":"105","endLine":43,"endColumn":27},{"ruleId":"102","severity":1,"message":"111","line":46,"column":10,"nodeType":"104","messageId":"105","endLine":46,"endColumn":21},{"ruleId":"102","severity":1,"message":"112","line":46,"column":23,"nodeType":"104","messageId":"105","endLine":46,"endColumn":37},{"ruleId":"113","severity":1,"message":"114","line":56,"column":6,"nodeType":"115","endLine":56,"endColumn":24,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":9,"column":7,"nodeType":"119","endLine":15,"endColumn":9},{"ruleId":"102","severity":1,"message":"120","line":11,"column":8,"nodeType":"104","messageId":"105","endLine":11,"endColumn":13},{"ruleId":"102","severity":1,"message":"121","line":12,"column":9,"nodeType":"104","messageId":"105","endLine":12,"endColumn":20},{"ruleId":"102","severity":1,"message":"122","line":9,"column":10,"nodeType":"104","messageId":"105","endLine":9,"endColumn":18},{"ruleId":"102","severity":1,"message":"123","line":10,"column":10,"nodeType":"104","messageId":"105","endLine":10,"endColumn":22},{"ruleId":"102","severity":1,"message":"124","line":11,"column":23,"nodeType":"104","messageId":"105","endLine":11,"endColumn":37},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'styles' is assigned a value but never used.","'setCanvas' is assigned a value but never used.","'currentSong' is assigned a value but never used.","'setCurrentSong' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tick'. Either include it or remove the dependency array.","ArrayExpression",["127"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'error' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'filename' is assigned a value but never used.","'uploadedFile' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},"Update the dependencies array to be: [sliderM, sliderN, tick]",{"range":"130","text":"131"},[1741,1759],"[sliderM, sliderN, tick]"]
=======
[{"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\index.js":"1","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\App.js":"2","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\Signup.js":"3","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\About.js":"4","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\MyAccount.js":"5","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\Home.js":"6","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\Login.js":"7","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\ForgotPassword.js":"8","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\UpdateProfile.js":"9","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\PrivateRoute.js":"10","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\contexts\\AuthContext.js":"11","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\Displayer.js":"12","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\MediaInteractions\\InsertIcon.js":"13","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\firebase.js":"14","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\MediaInteractions\\FileUpload.js":"15","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\MediaInteractions\\Playlist.js":"16","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\Navigation.js":"17"},{"size":415,"mtime":1613162764780,"results":"18","hashOfConfig":"19"},{"size":2262,"mtime":1613275702560,"results":"20","hashOfConfig":"19"},{"size":2203,"mtime":1613181768416,"results":"21","hashOfConfig":"19"},{"size":1347,"mtime":1613275001225,"results":"22","hashOfConfig":"19"},{"size":1816,"mtime":1613275001234,"results":"23","hashOfConfig":"19"},{"size":3582,"mtime":1613420855312,"results":"24","hashOfConfig":"19"},{"size":1810,"mtime":1613275001232,"results":"25","hashOfConfig":"19"},{"size":1708,"mtime":1613162764763,"results":"26","hashOfConfig":"19"},{"size":2726,"mtime":1613162764775,"results":"27","hashOfConfig":"19"},{"size":606,"mtime":1613162764773,"results":"28","hashOfConfig":"19"},{"size":1535,"mtime":1613162764778,"results":"29","hashOfConfig":"19"},{"size":7435,"mtime":1613420907603,"results":"30","hashOfConfig":"19"},{"size":399,"mtime":1613145530171,"results":"31","hashOfConfig":"19"},{"size":592,"mtime":1613162764779,"results":"32","hashOfConfig":"19"},{"size":6485,"mtime":1613163165880,"results":"33","hashOfConfig":"19"},{"size":541,"mtime":1613163165881,"results":"34","hashOfConfig":"19"},{"size":1771,"mtime":1613275001235,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"368z0z",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\index.js",[],["77","78"],"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\App.js",["79","80"],"import React, { useState } from 'react'\r\nimport './App.css'\r\nimport Signup from './Signup'\r\nimport { Container } from 'react-bootstrap'\r\nimport { AuthProvider } from '../contexts/AuthContext'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\n// import Navigation from './Navigation'\r\nimport About from './About'\r\n// import TemplatesPage from './TemplatesPage'\r\nimport Editor from './Home'\r\nimport Profile from './MyAccount'\r\nimport Login from './Login'\r\nimport PrivateRoute from './PrivateRoute'\r\nimport ForgotPassword from './ForgotPassword'\r\nimport UpdateProfile from './UpdateProfile'\r\n\r\n\r\n\r\n\r\nfunction App(){\r\n\r\n  return(\r\n \r\n    <div>\r\n    <Router>\r\n      <AuthProvider>\r\n        <Switch>\r\n          <Route path=\"/About\" component={About} />\r\n          <PrivateRoute exact path=\"/MyAccount\" component={Profile} />\r\n          <PrivateRoute exact path=\"/Home\" component={Editor} />\r\n          <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\r\n          <Route path=\"/signup\" component={Signup} />\r\n          <Route path=\"/\" component={Login} />\r\n          <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n        </Switch>\r\n      </AuthProvider>\r\n    </Router>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n// const App = () => {\r\n//   \r\n//   // const [isSignedIn, setIsSignedIn] = useState(false)\r\n//   \r\n\r\n//   // if (isSignedIn === 'signout') {\r\n//   //   setIsSignedIn(false)\r\n//   // } else if (isSignedIn === 'signin') {\r\n//   //   setIsSignedIn(true)\r\n//   // }\r\n\r\n//   const onRouteChange = (route) => {\r\n//  if (route === 'Home') {\r\n//       setDisplayPage(<Home />)\r\n//     } else if (route === 'About') {\r\n//       setDisplayPage(<About />)\r\n//     } else if (route === 'TemplatesPage') {\r\n//       setDisplayPage(<TemplatesPage />)\r\n//     }\r\n//     setRoute({ route: route })\r\n//   }\r\n\r\n//   // if (route === 'signout') {\r\n//   //   setRoute({ isSignedIn: false })\r\n//   // } else if (route === 'signin') {\r\n//   //   setRoute({ isSignedIn: true })\r\n//   // } else\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"Frontscr\">\r\n//         <Navigation  onRouteChange={onRouteChange} />\r\n//         {displayPage}\r\n//       </div>\r\n//     </>\r\n//   )\r\n// }\r\n\r\nexport default App\r\n\r\n// isSignedIn={setIsSignedIn}","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\Signup.js",[],"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\About.js",[],"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\MyAccount.js",["81"],"import React, { useState } from \"react\"\r\n  import { Card, Button, Alert } from \"react-bootstrap\"\r\n  import { useAuth } from \"../contexts/AuthContext\"\r\n  import { Link, useHistory } from \"react-router-dom\"\r\nimport Navigation from \"./Navigation\"\r\n  \r\n  export default function Dashboard() {\r\n    const styles = {\r\n        root: {\r\n            width: \"80%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginBottom: \"105px\",\r\n            marginTop: \"105px\",\r\n            background: \"antiquewhite\",\r\n            padding: \"100px\",\r\n            fontSize: \"1.5rem\",\r\n            borderRadius: \"20px\",\r\n            backgroundColor: \"#357E85\"\r\n        },\r\n        labelText: {\r\n            fontFamily: \"Roboto\",\r\n            fontSize: \"2rem\",\r\n            color: \"#CCEBF4\",\r\n        }\r\n      }    \r\n    const [error, setError] = useState(\"\")\r\n    const { currentUser, logout } = useAuth()\r\n    const history = useHistory()\r\n  \r\n    async function handleLogout() {\r\n      setError(\"\")\r\n  \r\n      try {\r\n        await logout()\r\n        history.push(\"/login\")\r\n      } catch {\r\n        setError(\"Failed to log out\")\r\n      }\r\n    }\r\n  \r\n    return (\r\n<div>\r\n  <Navigation />\r\n<Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Profile</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <strong>Email:</strong> {currentUser.email}\r\n            <strong>Saved Visualizer:</strong>\r\n            <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\r\n              Update Profile\r\n            </Link>\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          <Button variant=\"link\" onClick={handleLogout}>\r\n            Log Out\r\n          </Button>\r\n        </div>\r\n</div>\r\n    )\r\n  }","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\Home.js",[],"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\Login.js",[],"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\ForgotPassword.js",[],"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\UpdateProfile.js",[],"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\PrivateRoute.js",[],"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\contexts\\AuthContext.js",[],"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\Displayer.js",["82","83","84","85"],"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\MediaInteractions\\InsertIcon.js",["86"],"import React from 'react'\r\n// import { Container, Row, Col, Image } from 'react-bootstrap'\r\nimport icon from '../Images/Daco.png'\r\n\r\n//Icon input\r\nconst InsertIcon = () => {\r\n  return (\r\n    <div className=\"iconWrapper\">\r\n      <img\r\n        style={{\r\n          width: '15%',\r\n          height: '15%',\r\n        }}\r\n        src={`${icon}`}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InsertIcon\r\n","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\firebase.js",[],"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\MediaInteractions\\FileUpload.js",["87","88","89"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Card } from 'react-bootstrap'\r\nimport Playlist from './Playlist'\r\n\r\nconst FileUpload = (props) => {\r\n  //Need to use a hook to set text in the label to the file namespace\r\n  const [file, setFile] = useState('')\r\n  const [filename, setFilename] = useState('Choose File')\r\n  const [uploadedFile, setUploadedFile] = useState({})\r\n  const [currentUser, setCurrentUser] = useState('USR------1')\r\n  const [playlist, setPlaylist] = useState()\r\n\r\n  console.log('USER.....:', currentUser)\r\n\r\n  const onChange = (e) => {\r\n    //HTML file uploads come as an array so we want the index of the first file\r\n    setFile(e.target.files[0])\r\n    setFilename(e.target.files[0].name)\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    // e.preventDefault() used to prevent submitting by accident by preventing normal submitting\r\n    e.preventDefault()\r\n\r\n    const formData = new FormData()\r\n    formData.append('file', file)\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        'http://localhost:5000/upload/media',\r\n        formData,\r\n        {\r\n          headers: { 'Content-Type': 'multipart/form-data' },\r\n        },\r\n      )\r\n      const { fileName, filePath } = res.data\r\n      console.log('These are the headers', res.headers)\r\n      if (res.status === 200) {\r\n        console.log('Was uploaded successfully ' + res.status)\r\n      }\r\n      setUploadedFile({ fileName, filePath })\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        console.error('There is a problem with the server ' + err.message)\r\n      } else {\r\n        //This message is from the server if no file is uploaded\r\n        // console.error('we had an error??? ' + err.response.data.msg)\r\n        console.error(err.response.data.msg)\r\n      }\r\n    }\r\n  }\r\n  // Gets the playlist and sends to the Playlist Component\r\n\r\n  const getPlaylist = () => {\r\n    axios\r\n      .get('http://localhost:5000/upload/list')\r\n      .then((res) => {\r\n        console.log('this is the res', res)\r\n        return res.data\r\n      })\r\n      .then((playlist) => {\r\n        console.log('This is the playlist', playlist)\r\n        setPlaylist(playlist)\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    getPlaylist()\r\n  }, [])\r\n\r\n  // If the audio button is selected\r\n  if (props.mediatype === 'Audio') {\r\n    return (\r\n      <Card style={{ width: '16rem', margin: '16px' }}>\r\n        <Card.Body>\r\n          <Card.Title>{props.mediatype} Upload</Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            Select {props.mediatype} to Upload\r\n          </Card.Subtitle>\r\n          <Card.Text>\r\n            <>\r\n              <div className=\"mb-2\">\r\n                <form onSubmit={onSubmit}>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"form-control mb-5\"\r\n                      id=\"inputGroupFile02\"\r\n                      accept={`${props.mediatype}/wav, ${props.mediatype}/mp3, ${props.mediatype}/mpeg`}\r\n                      onChange={onChange}\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      value={`Submit`}\r\n                      // className=\"btn btn-primary btn-block\"\r\n                      className=\"btn1\"\r\n                      onClick={() => getPlaylist()}\r\n                    />\r\n\r\n                    <label\r\n                      className=\"id=inputGroupFile02\"\r\n                      htmlFor=\"inputGroupFile02\"\r\n                    ></label>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </>\r\n          </Card.Text>\r\n        </Card.Body>\r\n        <Playlist playlist={playlist} />\r\n      </Card>\r\n    )\r\n  }\r\n  if (props.mediatype === 'Background') {\r\n    return (\r\n      <Card style={{ width: '16rem', margin: '16px' }}>\r\n        <Card.Body>\r\n          <Card.Title>{props.mediatype} Upload</Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            Select {props.mediatype} to Upload\r\n          </Card.Subtitle>\r\n          <Card.Text>\r\n            <>\r\n              <div className=\"mb-2\">\r\n                <form onSubmit={onSubmit}>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"form-control mb-5\"\r\n                      id=\"inputGroupFile02\"\r\n                      accept={`${props.filetype}/jpg, ${props.filetype}/jpeg, ${props.filetype}/bmp`}\r\n                      onChange={onChange}\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      value={`Submit`}\r\n                      // className=\"btn btn-primary btn-block\"\r\n                      className=\"btn1\"\r\n                    />\r\n\r\n                    <label\r\n                      className=\"id=inputGroupFile02\"\r\n                      htmlFor=\"inputGroupFile02\"\r\n                    ></label>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n  }\r\n  return (\r\n    <Card style={{ width: '16rem', margin: '16px' }}>\r\n      <Card.Body>\r\n        <Card.Title>{props.mediatype} Upload</Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">\r\n          Select {props.mediatype} to Upload\r\n        </Card.Subtitle>\r\n        <Card.Text>\r\n          <>\r\n            <div className=\"mb-2\">\r\n              <form onSubmit={onSubmit}>\r\n                <div className=\"input-group mb-3\">\r\n                  <input\r\n                    type=\"file\"\r\n                    className=\"form-control mb-5\"\r\n                    id=\"inputGroupFile02\"\r\n                    accept={`${props.filetype}/gif, ${props.filetype}/png, ${props.filetype}/jpg`}\r\n                    onChange={onChange}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value={`Submit`}\r\n                    // className=\"btn btn-primary btn-block\"\r\n                    className=\"btn1\"\r\n                  />\r\n\r\n                  <label\r\n                    className=\"id=inputGroupFile02\"\r\n                    htmlFor=\"inputGroupFile02\"\r\n                  ></label>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default FileUpload\r\n","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\MediaInteractions\\Playlist.js",[],["90","91"],"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\Navigation.js",["92","93"],"import React, { useState }  from 'react'\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { Navbar, Nav, Container } from 'react-bootstrap'\r\nimport pic from './Images/logogrey.png'\r\n// import pic from './Logo1sn.png'\r\n\r\n\r\nconst Navigation = () => {\r\n\r\nconst [error, setError] = useState(\"\")\r\nconst { currentUser, logout } = useAuth()\r\nconst history = useHistory()\r\n\r\nasync function handleLogout() {\r\n  setError(\"\")\r\n\r\n  try {\r\n    await logout()\r\n    history.push(\"/login\")\r\n  } catch {\r\n    setError(\"Failed to log out\")\r\n  }\r\n}\r\n\r\n  //Navbar\r\n\r\n  return (\r\n    \r\n\r\n<Navbar style={{ backgroundColor: 'black' }} variant=\"dark\" expand=\"sm\" sticky=\"top\" className=\"justify-content-end\">\r\n        <Container id=\"nav-wrap\">\r\n        <Navbar.Brand href=\"/Login\">\r\n          {/* <img src={pic} alt={''} width={80} height={80} /> */}\r\n          <img \r\n          src={pic} \r\n          alt={''} \r\n          height={'30%'} \r\n          width={'30%'} \r\n          className=\"d-inline-block align-top\"/>\r\n        </Navbar.Brand>\r\n\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav>\r\n          <Nav.Item id=\"nav-item\"><Link to=\"/About\" style={{ color: 'white' }}>About</Link></Nav.Item>\r\n          <Nav.Item id=\"nav-item\"><Link to=\"/Home\" style={{ color: 'white' }}>Editor</Link></Nav.Item>\r\n          <Nav.Item id=\"nav-item\"><Link to=\"/MyAccount\" style={{ color: 'white' }}>Profile</Link></Nav.Item>\r\n          <Nav.Item id=\"nav-item\" onClick={handleLogout}><Link style={{ color: 'white' }} >Logout</Link></Nav.Item>\r\n\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n\r\n   \r\n  )\r\n}\r\n\r\nexport default Navigation",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"102","line":4,"column":10,"nodeType":"100","messageId":"101","endLine":4,"endColumn":19},{"ruleId":"98","severity":1,"message":"103","line":8,"column":11,"nodeType":"100","messageId":"101","endLine":8,"endColumn":17},{"ruleId":"98","severity":1,"message":"104","line":42,"column":18,"nodeType":"100","messageId":"101","endLine":42,"endColumn":27},{"ruleId":"98","severity":1,"message":"105","line":45,"column":10,"nodeType":"100","messageId":"101","endLine":45,"endColumn":21},{"ruleId":"98","severity":1,"message":"106","line":45,"column":23,"nodeType":"100","messageId":"101","endLine":45,"endColumn":37},{"ruleId":"107","severity":1,"message":"108","line":55,"column":6,"nodeType":"109","endLine":55,"endColumn":24,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":9,"column":7,"nodeType":"113","endLine":15,"endColumn":9},{"ruleId":"98","severity":1,"message":"114","line":9,"column":10,"nodeType":"100","messageId":"101","endLine":9,"endColumn":18},{"ruleId":"98","severity":1,"message":"115","line":10,"column":10,"nodeType":"100","messageId":"101","endLine":10,"endColumn":22},{"ruleId":"98","severity":1,"message":"116","line":11,"column":23,"nodeType":"100","messageId":"101","endLine":11,"endColumn":37},{"ruleId":"94","replacedBy":"117"},{"ruleId":"96","replacedBy":"118"},{"ruleId":"98","severity":1,"message":"119","line":11,"column":8,"nodeType":"100","messageId":"101","endLine":11,"endColumn":13},{"ruleId":"98","severity":1,"message":"120","line":12,"column":9,"nodeType":"100","messageId":"101","endLine":12,"endColumn":20},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'styles' is assigned a value but never used.","'setCanvas' is assigned a value but never used.","'currentSong' is assigned a value but never used.","'setCurrentSong' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tick'. Either include it or remove the dependency array.","ArrayExpression",["123"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'filename' is assigned a value but never used.","'uploadedFile' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.",["121"],["122"],"'error' is assigned a value but never used.","'currentUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},"Update the dependencies array to be: [sliderM, sliderN, tick]",{"range":"126","text":"127"},[1696,1714],"[sliderM, sliderN, tick]"]
>>>>>>> 470cf5726e056f145144e755df3fd89e511579cf
