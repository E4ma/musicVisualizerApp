[{"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\index.js":"1","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\App.js":"2","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\TemplatesPage.js":"3","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\Signin\\Login.js":"4","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\About.js":"5","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\Home.js":"6","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\Navbars\\Navigation.js":"7","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\Displayer.js":"8","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\UploadBackground\\backgroundUpload.js":"9","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\UploadAudio\\AudioUpload.js":"10","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\IconInteractions\\InsertIcon.js":"11","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\card.js":"12","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\IconInteractions\\IconUpload.js":"13"},{"size":404,"mtime":1611855068291,"results":"14","hashOfConfig":"15"},{"size":1445,"mtime":1612378946464,"results":"16","hashOfConfig":"15"},{"size":207,"mtime":1611710436492,"results":"17","hashOfConfig":"15"},{"size":651,"mtime":1611854093999,"results":"18","hashOfConfig":"15"},{"size":1248,"mtime":1611855068250,"results":"19","hashOfConfig":"15"},{"size":2448,"mtime":1612378946467,"results":"20","hashOfConfig":"15"},{"size":2324,"mtime":1612378946473,"results":"21","hashOfConfig":"15"},{"size":5826,"mtime":1612382649928,"results":"22","hashOfConfig":"15"},{"size":2831,"mtime":1612378946477,"results":"23","hashOfConfig":"15"},{"size":2786,"mtime":1612378946475,"results":"24","hashOfConfig":"15"},{"size":396,"mtime":1612378946470,"results":"25","hashOfConfig":"15"},{"size":1173,"mtime":1611861082357,"results":"26","hashOfConfig":"15"},{"size":2783,"mtime":1612378946469,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"368z0z",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\index.js",[],["60","61"],"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\App.js",["62"],"import React, { useState } from 'react'\r\nimport './App.css'\r\nimport Navigation from './Components/Navbars/Navigation'\r\nimport About from './Components/About'\r\nimport TemplatesPage from './Components/TemplatesPage'\r\nimport Home from './Components/Home'\r\nimport Login from './Components/Signin/Login'\r\n\r\nconst App = () => {\r\n  const [route, setRoute] = useState('signout')\r\n  const [isSignedIn, setIsSignedIn] = useState(false)\r\n  const [displayPage, setDisplayPage] = useState(Home)\r\n\r\n  if (isSignedIn === 'signout') {\r\n    setIsSignedIn(false)\r\n  } else if (isSignedIn === 'signin') {\r\n    setIsSignedIn(true)\r\n  }\r\n\r\n  const onRouteChange = (route) => {\r\n    if (route === 'signout') {\r\n      setRoute({ isSignedIn: false })\r\n    } else if (route === 'signin') {\r\n      setRoute({ isSignedIn: true })\r\n    } else if (route === 'Home') {\r\n      setDisplayPage(<Home onRouteChange={onRouteChange} />)\r\n    } else if (route === 'About') {\r\n      setDisplayPage(<About onRouteChange={onRouteChange} />)\r\n    } else if (route === 'TemplatesPage') {\r\n      setDisplayPage(<TemplatesPage />)\r\n    } else if (route === 'Login') {\r\n      setDisplayPage(<Login onRouteChange={onRouteChange} />)\r\n    }\r\n    setRoute({ route: route })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Frontscr\">\r\n        <Navigation isSignedIn={setIsSignedIn} onRouteChange={onRouteChange} />\r\n        {displayPage}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\TemplatesPage.js",[],"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\Signin\\Login.js",[],"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\About.js",[],"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\Home.js",[],"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\Navbars\\Navigation.js",[],"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\Displayer.js",["63","64","65","66","67"],"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\UploadBackground\\backgroundUpload.js",["68","69"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst BackgroundUpload = () => {\r\n  //Need to use a hook to set text in the label to the file namespace\r\n  const [file, setFile] = useState('')\r\n  const [filename, setFilename] = useState('Choose File')\r\n  const [uploadedFile, setUploadedFile] = useState({})\r\n\r\n  const onChange = (e) => {\r\n    //HTML file uploads come as an array so we want the index of the first file\r\n    setFile(e.target.files[0])\r\n    setFilename(e.target.files[0].name)\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    //used to prevent submitting by accident by preventing normal submitting\r\n    e.preventDefault()\r\n    const formData = new FormData()\r\n    formData.append('file', file)\r\n\r\n    try {\r\n      //Need to connect to the server the endpoint is media\r\n      const res = await axios.post(\r\n        'http://localhost:5000/upload/media',\r\n        formData,\r\n        {\r\n          headers: { 'Content-Type': 'multipart/form-data' },\r\n        },\r\n      )\r\n      const { fileName, filePath } = res.data\r\n      if (res.status === 200) {\r\n        console.log('Was uploaded successfully ' + res.status)\r\n      }\r\n      setUploadedFile({ fileName, filePath })\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        console.error('There is a problem with the server ' + err.message)\r\n      } else {\r\n        //This message is from the server if no file is uploaded\r\n        console.error(err.response.data.msg)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    //The fragment allows to group children without creating extra nodes\r\n    <Card style={{ width: '18rem', margin: '24px' }}>\r\n      <Card.Body>\r\n        <Card.Title>Upload Background</Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">\r\n          Select a background to upload\r\n        </Card.Subtitle>\r\n        <Card.Text>\r\n          <>\r\n            <div className=\"mb-2\">\r\n              <form onSubmit={onSubmit}>\r\n                <div className=\"input-group mb-3\">\r\n                  <input\r\n                    type=\"file\"\r\n                    className=\"form-control\"\r\n                    id=\"inputGroupFile02\"\r\n                    accept=\"image/gif, image/jpeg, image/jpg\"\r\n                    onChange={onChange}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Upload Background\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                  />\r\n\r\n                  <label\r\n                    className=\"id=inputGroupFile02\"\r\n                    htmlFor=\"inputGroupFile02\"\r\n                  ></label>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default BackgroundUpload\r\n","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\UploadAudio\\AudioUpload.js",["70","71"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst AudioUpload = () => {\r\n  //Need to use a hook to set text in the label to the file namespace\r\n  const [file, setFile] = useState('')\r\n  const [filename, setFilename] = useState('Choose File')\r\n  const [uploadedFile, setUploadedFile] = useState({})\r\n\r\n  const onChange = (e) => {\r\n    //HTML file uploads come as an array so we want the index of the first file\r\n    setFile(e.target.files[0])\r\n    setFilename(e.target.files[0].name)\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    // e.preventDefault() used to prevent submitting by accident by preventing normal submitting\r\n    e.preventDefault()\r\n    const formData = new FormData()\r\n    formData.append('file', file)\r\n\r\n    try {\r\n      //Need to connect to the server the endpoint is media\r\n      const res = await axios.post(\r\n        'http://localhost:5000/upload/media',\r\n        formData,\r\n        {\r\n          headers: { 'Content-Type': 'multipart/form-data' },\r\n        },\r\n      )\r\n      const { fileName, filePath } = res.data\r\n      console.log(res.headers)\r\n      if (res.status === 200) {\r\n        console.log('Was uploaded successfully ' + res.status)\r\n      }\r\n      setUploadedFile({ fileName, filePath })\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        console.error('There is a problem with the server ' + err.message)\r\n      } else {\r\n        //This message is from the server if no file is uploaded\r\n        console.error(err.response.data.msg)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card style={{ width: '18rem', margin: '20px' }}>\r\n      <Card.Body>\r\n        <Card.Title>Audio Upload</Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">\r\n          Select audio to upload\r\n        </Card.Subtitle>\r\n        <Card.Text>\r\n          <>\r\n            <div className=\"mb-2\">\r\n              <form onSubmit={onSubmit}>\r\n                <div className=\"input-group mb-3\">\r\n                  <input\r\n                    type=\"file\"\r\n                    className=\"form-control mb-5\"\r\n                    id=\"inputGroupFile02\"\r\n                    accept=\"audio/wav, audio/mp3, audio/mpeg\"\r\n                    onChange={onChange}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"UploadAudio\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                  />\r\n\r\n                  <label\r\n                    className=\"id=inputGroupFile02\"\r\n                    htmlFor=\"inputGroupFile02\"\r\n                  ></label>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AudioUpload\r\n","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\IconInteractions\\InsertIcon.js",["72","73","74","75","76"],"import React from 'react'\r\nimport { Container, Row, Col, Image } from 'react-bootstrap'\r\nimport icon from '../Images/Daco.png'\r\n\r\n//Icon input\r\nconst InsertIcon = () => {\r\n  return (\r\n    <div className=\"iconWrapper\">\r\n      <img\r\n        style={{\r\n          width: '20%',\r\n          height: '20%',\r\n        }}\r\n        src={`${icon}`}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InsertIcon\r\n","C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\card.js",[],"C:\\Users\\Ifyy\\Documents\\mandalorians\\musicVisualizerApp\\client\\src\\Components\\IconInteractions\\IconUpload.js",["77","78"],"import React, { useState, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst IconUpload = () => {\r\n  //Need to use a hook to set text in the label to the file namespace\r\n  const [file, setFile] = useState('')\r\n  const [filename, setFilename] = useState('Choose File')\r\n  const [uploadedFile, setUploadedFile] = useState({})\r\n\r\n  const onChange = (e) => {\r\n    //HTML file uploads come as an array so we want the index of the first file\r\n    setFile(e.target.files[0])\r\n    setFilename(e.target.files[0].name)\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    //used to prevent submitting by accident by preventing normal submitting\r\n    e.preventDefault()\r\n    const formData = new FormData()\r\n    formData.append('file', file)\r\n    console.log(formData)\r\n    try {\r\n      //Need to connect to the server this is the endpoint\r\n      const res = await axios.post(\r\n        'http://localhost:5000/upload/icon',\r\n        formData,\r\n        {\r\n          headers: { 'Content-Type': 'multipart/form-data' },\r\n        },\r\n      )\r\n      const { fileName, filePath } = res.data\r\n      if (res.status === 200) {\r\n        console.log('Icon was uploaded successfully ' + res.status)\r\n      }\r\n      setUploadedFile({ fileName, filePath })\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        console.error('There is a problem with the server ' + err.message)\r\n      } else {\r\n        //This message is from the server if no file is uploaded\r\n        console.error(err.response.data.msg)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card style={{ width: '18rem', margin: '24px' }}>\r\n      <Card.Body>\r\n        <Card.Title>Upload Icon</Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">\r\n          Select an Icon to upload\r\n        </Card.Subtitle>\r\n        <Card.Text>\r\n          <>\r\n            <div className=\"mb-2\">\r\n              <form onSubmit={onSubmit}>\r\n                <div className=\"input-group mb-3\">\r\n                  <input\r\n                    type=\"file\"\r\n                    className=\"form-control\"\r\n                    id=\"inputGroupFile02\"\r\n                    accept=\"image/gif, image/png, image/jpeg, image/jpg\"\r\n                    onChange={onChange}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Upload Background\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                  />\r\n\r\n                  <label\r\n                    className=\"id=inputGroupFile02\"\r\n                    htmlFor=\"inputGroupFile02\"\r\n                  ></label>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default IconUpload\r\n",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":10,"column":10,"nodeType":"85","messageId":"86","endLine":10,"endColumn":15},{"ruleId":"83","severity":1,"message":"87","line":61,"column":17,"nodeType":"85","messageId":"86","endLine":61,"endColumn":25},{"ruleId":"83","severity":1,"message":"88","line":62,"column":20,"nodeType":"85","messageId":"86","endLine":62,"endColumn":31},{"ruleId":"83","severity":1,"message":"89","line":63,"column":18,"nodeType":"85","messageId":"86","endLine":63,"endColumn":27},{"ruleId":"83","severity":1,"message":"90","line":71,"column":10,"nodeType":"85","messageId":"86","endLine":71,"endColumn":19},{"ruleId":"83","severity":1,"message":"91","line":146,"column":27,"nodeType":"85","messageId":"86","endLine":146,"endColumn":32},{"ruleId":"83","severity":1,"message":"92","line":8,"column":10,"nodeType":"85","messageId":"86","endLine":8,"endColumn":18},{"ruleId":"83","severity":1,"message":"93","line":9,"column":10,"nodeType":"85","messageId":"86","endLine":9,"endColumn":22},{"ruleId":"83","severity":1,"message":"92","line":8,"column":10,"nodeType":"85","messageId":"86","endLine":8,"endColumn":18},{"ruleId":"83","severity":1,"message":"93","line":9,"column":10,"nodeType":"85","messageId":"86","endLine":9,"endColumn":22},{"ruleId":"83","severity":1,"message":"94","line":2,"column":10,"nodeType":"85","messageId":"86","endLine":2,"endColumn":19},{"ruleId":"83","severity":1,"message":"95","line":2,"column":21,"nodeType":"85","messageId":"86","endLine":2,"endColumn":24},{"ruleId":"83","severity":1,"message":"96","line":2,"column":26,"nodeType":"85","messageId":"86","endLine":2,"endColumn":29},{"ruleId":"83","severity":1,"message":"97","line":2,"column":31,"nodeType":"85","messageId":"86","endLine":2,"endColumn":36},{"ruleId":"98","severity":1,"message":"99","line":9,"column":7,"nodeType":"100","endLine":15,"endColumn":9},{"ruleId":"83","severity":1,"message":"92","line":8,"column":10,"nodeType":"85","messageId":"86","endLine":8,"endColumn":18},{"ruleId":"83","severity":1,"message":"93","line":9,"column":10,"nodeType":"85","messageId":"86","endLine":9,"endColumn":22},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'route' is assigned a value but never used.","Identifier","unusedVar","'setAudio' is assigned a value but never used.","'setSongList' is assigned a value but never used.","'setCanvas' is assigned a value but never used.","'textColor' is assigned a value but never used.","'color' is assigned a value but never used.","'filename' is assigned a value but never used.","'uploadedFile' is assigned a value but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Image' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]