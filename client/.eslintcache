[{"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/index.js":"1","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/App.js":"2","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/PrivateRoute.js":"3","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/UpdateProfile.js":"4","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/ForgotPassword.js":"5","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Login.js":"6","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Signup.js":"7","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Home.js":"8","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MyAccount.js":"9","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/About.js":"10","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/contexts/AuthContext.js":"11","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/firebase.js":"12","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/LandingNav.js":"13","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Navigation.js":"14","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Displayer.js":"15","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/InsertIcon.js":"16","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/FileUpload.js":"17","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/Playlist.js":"18","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/contexts/PlaylistContext.js":"19","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Buttons/AudioControls.js":"20","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/SigninNav.js":"21","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/IconUpload.js":"22"},{"size":400,"mtime":1613675788586,"results":"23","hashOfConfig":"24"},{"size":2859,"mtime":1614054142509,"results":"25","hashOfConfig":"24"},{"size":591,"mtime":1614054142513,"results":"26","hashOfConfig":"24"},{"size":2798,"mtime":1614054142513,"results":"27","hashOfConfig":"24"},{"size":1654,"mtime":1613515553820,"results":"28","hashOfConfig":"24"},{"size":1981,"mtime":1614054136960,"results":"29","hashOfConfig":"24"},{"size":2345,"mtime":1614035785105,"results":"30","hashOfConfig":"24"},{"size":6541,"mtime":1614120553812,"results":"31","hashOfConfig":"24"},{"size":2026,"mtime":1614054142511,"results":"32","hashOfConfig":"24"},{"size":1085,"mtime":1614054136954,"results":"33","hashOfConfig":"24"},{"size":1469,"mtime":1613515554044,"results":"34","hashOfConfig":"24"},{"size":577,"mtime":1613515554045,"results":"35","hashOfConfig":"24"},{"size":985,"mtime":1614054136959,"results":"36","hashOfConfig":"24"},{"size":1570,"mtime":1614035785104,"results":"37","hashOfConfig":"24"},{"size":8773,"mtime":1614115919006,"results":"38","hashOfConfig":"24"},{"size":359,"mtime":1613972885006,"results":"39","hashOfConfig":"24"},{"size":8230,"mtime":1614120716003,"results":"40","hashOfConfig":"24"},{"size":1177,"mtime":1613976824042,"results":"41","hashOfConfig":"24"},{"size":3173,"mtime":1614035785106,"results":"42","hashOfConfig":"24"},{"size":1053,"mtime":1614109232991,"results":"43","hashOfConfig":"24"},{"size":1058,"mtime":1613972866352,"results":"44","hashOfConfig":"24"},{"size":5459,"mtime":1613972885005,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1qwo52n",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/index.js",[],["98","99"],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/App.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/PrivateRoute.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/UpdateProfile.js",["100","101"],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/ForgotPassword.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Login.js",["102","103"],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Signup.js",["104","105"],"import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport LandingNav from \"./LandingNav\"\n\n\nexport default function Signup() {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const { signup } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n    //are passwords same?\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\")\n      //and then exit\n    }\n\n    try {\n      setError(\"\")\n      //disables signup button\n      setLoading(true)\n      await signup(emailRef.current.value, passwordRef.current.value)\n      history.push(\"/Home\")\n    } catch {\n      setError(\"Failed to create an account. Password should be at least 6 characters\")\n    }\n\n    setLoading(false)\n  }\n\n  return (\n    <>\n      <LandingNav />\n      <Container className=\"signinContainer\">\n        <div className=\"signinWrapper\">\n          <div>\n            <h2 className=\"text-center m-4\">Sign Up</h2>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <Form.Group id=\"email\">\n                <input className=\"signinInput\" placeholder=\"Enter Email\" type=\"email\" ref={emailRef} required />\n              </Form.Group>\n              <Form.Group id=\"password\">\n                <input className=\"signinInput\" placeholder=\"Enter Password\" type=\"password\" ref={passwordRef} required />\n              </Form.Group>\n              <Form.Group id=\"password-confirm\">\n                <input className=\"signinInput\" placeholder=\"Re-enter Password\" type=\"password\" ref={passwordConfirmRef} required />\n              </Form.Group>\n              <button disabled={loading} className=\"formBtn\" type=\"submit\">\n                Sign Up\n            </button>\n            </Form>\n          </div>\n          <div className=\"w-100 text-center m-2\">\n            Already have an account? <Link to=\"/login\" className=\"formLink\">Sign In</Link>\n          </div>\n        </div>\n      </Container>\n    </>\n  )\n}","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Home.js",["106"],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MyAccount.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/About.js",["107"],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/contexts/AuthContext.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/firebase.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/LandingNav.js",["108"],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Navigation.js",["109","110"],"import React, { useState } from 'react'\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport { Navbar, Nav, Container } from 'react-bootstrap'\n\nimport pic from './Images/logogrey.png'\n// import pic from './Logo1sn.png'\n\n\nconst Navigation = () => {\n\n  const [error, setError] = useState(\"\")\n  const { currentUser, logout } = useAuth()\n  const history = useHistory()\n\n  async function handleLogout() {\n    setError(\"\")\n\n    try {\n      await logout()\n      history.push(\"/login\")\n    } catch {\n      setError(\"Failed to log out\")\n    }\n  }\n\n  //Navbar\n\n  return (\n\n\n    <Navbar style={{ backgroundColor: 'black' }} variant=\"dark\" expand=\"sm\" sticky=\"top\" className=\"justify-content-end\">\n      <Container id=\"nav-wrap\">\n        <Navbar.Brand href=\"/About\">\n          {/* <img src={pic} alt={''} width={80} height={80} /> */}\n          <img\n            src={pic}\n            alt={''}\n            height={'30%'}\n            width={'30%'}\n            className=\"d-inline-block align-top\" />\n        </Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav>\n\n            <Nav.Item id=\"nav-item\"><Link to=\"/Home\" style={{ color: 'white' }}>Editor</Link></Nav.Item>\n            <Nav.Item id=\"nav-item\"><Link to=\"/MyAccount\" style={{ color: 'white' }}>Profile</Link></Nav.Item>\n            <Nav.Item id=\"nav-item\" onClick={handleLogout}><Link style={{ color: 'white' }} >Sign Out</Link></Nav.Item>\n\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n\n\n  )\n}\n\nexport default Navigation","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Displayer.js",["111","112"],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/InsertIcon.js",["113"],"import React from 'react'\n// import { Container, Row, Col, Image } from 'react-bootstrap'\nimport icon from '../Images/Daco.png'\n\n//Icon input\nconst InsertIcon = () => {\n  return (\n    <div className=\"iconWrapper\">\n      <img\n        style={{\n          width: '15%',\n          height: '15%',\n        }}\n        src={`${icon}`}\n      />\n    </div>\n  )\n}\n\nexport default InsertIcon\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/FileUpload.js",["114"],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/Playlist.js",["115"],"import React, { useContext, useState } from 'react'\nimport { Card, ListGroup } from 'react-bootstrap'\nimport { PlaylistContext } from '../../contexts/PlaylistContext'\n\nconst Playlist = (props) => {\n  const { setCurrentSongIndex, songList } = useContext(PlaylistContext)\n\n  const generateKey = (pre) => {\n    return `${pre}_${new Date().getTime()}`\n  }\n  return (\n    <>\n      <br />\n      <Card.Body className=\"playlistTab\" style={{ overflow: 'auto' }}>\n        <Card.Title className=\"mb-2 text-muted\">Playlist</Card.Title>\n        <Card.Text className=\"tabScroll\">\n          <div>\n            <ListGroup action>\n              {songList?.map((song, index) => {\n                // console.log('This is the song with index', song, index)\n\n                return (\n                  <ListGroup.Item\n                    onClick={() => setCurrentSongIndex(index)}\n                    key={generateKey(index)}\n                    value={song}\n                  >\n                    {song}\n                  </ListGroup.Item>\n                )\n              })}\n            </ListGroup>\n          </div>\n        </Card.Text>\n      </Card.Body>\n    </>\n  )\n}\n\nexport default Playlist\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/contexts/PlaylistContext.js",["116","117"],"import React, { createContext, useState, useEffect } from 'react'\nimport axios from 'axios'\n\nexport const PlaylistContext = createContext()\n\nconst PlaylistContextProvider = (props) => {\n  const [songList, setSongList] = useState([])\n  // const [songName, setSongName] = useState('')\n  const [currentSongIndex, setCurrentSongIndex] = useState(-1)\n  const [audio, setAudio] = useState()\n  const [audioContext, setAudioContext] = useState()\n  const [source, setSource] = useState()\n  const [analyser, setAnalyser] = useState()\n  const [frequency_array, setFrequency_array] = useState()\n  const [duration, setDuration] = useState()\n  const [curTime, setCurTime] = useState()\n  const [clickedTime, setClickedTime] = useState()\n\n  // createAudioContextSingleton runs the file only once not again and again\n  const createAudioContextSingleton = () => {\n    if (!audio) {\n      let a = new Audio()\n      console.log('CreateAudioContextSingleton: a =', a)\n      let ac = new (window.AudioContext || window.webkitAudioContext)()\n      let s = ac.createMediaElementSource(a)\n      let analy = ac.createAnalyser()\n      s.connect(analy)\n      analy.connect(ac.destination)\n      let freqArr = new Uint8Array(analy.frequencyBinCount)\n\n      setAudio(a)\n      setAnalyser(analy)\n      setSource(s)\n      setAudioContext(ac)\n      setFrequency_array(freqArr)\n    }\n  }\n\n  const getSong = (song) => {\n    if (!audio) {\n      createAudioContextSingleton()\n      console.log('this is createAudioSingleton', audio)\n    }\n    console.log('this is song =', song)\n\n    console.log('PlaylistContext: songList[currentSongIndex]', currentSongIndex)\n  }\n\n  const loadSongIntoAudio = async () => {\n    if (!songList[currentSongIndex] || !audio) {\n      console.log('nothing here')\n      return\n    }\n\n    try {\n      const response = await axios.request({\n        url: `http://localhost:5000/upload/media/${songList[currentSongIndex]}`,\n        responseType: 'blob',\n        method: 'GET',\n      })\n      let MIN_URL_LENGTH = 22\n\n      if (!response.data || response.data.length <= MIN_URL_LENGTH) {\n        throw new Error(\n          `Error with respond.data located in /upload/media:`,\n          response.data,\n        )\n      }\n      // console.log('PlaylistContext: Audio in getSong= ', audio)\n\n      audio.src = URL.createObjectURL(response.data)\n      console.log('PlaylistContext: audio.src', audio.src)\n      audio.load()\n    } catch (ex) {\n      console.error(`PlaylistContext: exception in getSong(): `, ex.message)\n    }\n    // audio.play()\n  }\n\n  const getSongList = async () => {\n    let res = await axios.get('http://localhost:5000/upload/list')\n    const data = res.data\n    console.log('This is data', data)\n\n    setSongList(data)\n  }\n  // console.log(uploadedFile)\n  //Returns a list of files saved\n  useEffect(() => {\n    getSongList()\n  }, [])\n\n  useEffect(() => {\n    loadSongIntoAudio()\n  }, [currentSongIndex, audio])\n\n  //Scrollbar\n  // useEffect(() => {\n  //   const setAudiodata = () => {\n  //     setDuration(audio.duration)\n  //     setCurTime(audio.currentTime)\n  //   }\n\n  //   const setAudioTime = () => {\n  //     setCurTime(audio.currentTime)\n  //   }\n\n  //   audio.addEventListener('loadeddata', setAudioData)\n  //   audio.addEventListener('timeupdate', setAudioTime)\n\n  //   playing ? audio.play() : audio.pause()\n\n  //   if (clickedTime && clickedTime !== curTime) {\n  //     audio.currentTime = clickedTime\n  //     setClickedTime(null)\n  //   }\n\n  //   return () => {\n  //     audio.removeEventListener('loadeddata', setAudioData)\n  //     audio.removeEventListener('timeupdate', setAudioTime)\n  //   }\n  // }, [])\n  return (\n    <PlaylistContext.Provider\n      value={{\n        createAudioContextSingleton,\n        currentSongIndex,\n        setCurrentSongIndex,\n        songList,\n        setSongList,\n        getSong,\n        getSongList,\n        loadSongIntoAudio,\n        audio,\n        frequency_array,\n        audioContext,\n        analyser,\n      }}\n    >\n      {props.children}\n    </PlaylistContext.Provider>\n  )\n}\n\nexport default PlaylistContextProvider\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Buttons/AudioControls.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/SigninNav.js",["118","119"],"import React from 'react'\nimport { Link} from \"react-router-dom\"\nimport { Navbar, Nav, Container, Button } from 'react-bootstrap'\nimport pic from './Images/logogrey-bird.png'\nimport wave from './Images/navWave.svg'\n// import pic from './Logo1sn.png'\n\n\nconst SigninNav = () => {\n\n\n  return (\n    \n<Navbar className=\"landingNav\" variant=\"dark\" expand=\"sm\" >\n        <Container className=\"navContainer\">\n        <Navbar.Brand href=\"/About\">\n          {/* <img src={pic} alt={''} width={80} height={80} /> */}\n          <img \n          src={pic} \n          alt={''} \n          height={'40'} \n          width={'45'} \n          className=\"d-inline-block\"/>{' '}HUMMINGBIRD\n        </Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse className=\"justify-content-end\" id=\"basic-navbar-nav\" >\n          <Nav fill >\n\n          <Nav.Item><Link to=\"/Signup\" className=\"navBtn\">Sign Up</Link></Nav.Item>\n\n          </Nav>\n        </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n\n   \n  )\n}\n\nexport default SigninNav","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/IconUpload.js",["120","121"],"import React, { useState, useEffect, useCallback, useContext } from 'react'\nimport axios from 'axios'\nimport { Card, ListGroup } from 'react-bootstrap'\n\nconst IconUpload = (props) => {\n  const [file, setFile] = useState('')\n  const [filename, setFilename] = useState('Choose File')\n  const [uploadedFile, setUploadedFile] = useState({})\n  const [imagelist, setImagelist] = useState([])\n\n \n\n  const onChange = (e) => {\n    //HTML file uploads come as an array so we want the index of the first file\n    setFile(e.target.files[0])\n    setFilename(e.target.files[0].name)\n  }\n\n  const onSubmit = async (e) => {\n    // e.preventDefault() used to prevent submitting by accident by preventing normal submitting\n    e.preventDefault()\n\n    const formData = new FormData()\n    formData.append('file', file)\n\n    try {\n      const res = await axios.post(\n        'http://localhost:5000/iconUpload/icon',\n        formData,\n        {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        },\n      )\n      const { fileName, filePath } = res.data\n      // console.log('These are the headers', res.headers)\n      if (res.status === 200) {\n        console.log('File was uploaded successfully ' + res.status)\n      }\n      setUploadedFile({ fileName, filePath })\n    } catch (err) {\n      if (err.response.status === 500) {\n        console.error('There is a problem with the server ' + err.message)\n      } else {\n        //This message is from the server if no file is uploaded\n        // console.error('we had an error??? ' + err.response.data.msg)\n        console.error(err.response.data.msg)\n      }\n    }\n  }\n\n\n  const getImagelist = useCallback(() => {\n    axios\n      .get('http://localhost:5000/iconUpload/iconList')\n      .then((res) => {\n        console.log('this is the res', res.data)\n        return res.data\n      })\n      .then((imagelist) => {\n        setImagelist(imagelist)\n      })\n  }, [setImagelist])\n  useEffect(() => {\n    getImagelist()\n  }, [uploadedFile, getImagelist])\n\n  // If the Icon button is selected\n\n  if (props.mediatype === 'Icon') {\n    return (\n      <Card style={{ height: '25rem' }}>\n        <Card.Body className=\"modalUpload\">\n          <Card.Title className=\"mb-2 text-muted\">\n            {props.mediatype} Upload\n          </Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            Select {props.mediatype} to Upload\n          </Card.Subtitle>\n          <Card.Text>\n            <>\n              {/* <div className=\"mb-2\"> */}\n              <div>\n                <form onSubmit={onSubmit}>\n                  {/* <div className=\"input-group mb-3\"> */}\n                  <div>\n                    <input\n                      type=\"file\"\n                      // className=\"form-control mb-5\"\n                      className=\"modalUpload\"\n                      // id=\"inputGroupFile02\"\n                      accept={`${props.filetype}/jpg, ${props.filetype}/jpeg, ${props.filetype}/png, ${props.filetype}/bmp`}\n                      onChange={onChange}\n                    />\n                    <input\n                      type=\"submit\"\n                      value={`Submit`}\n                      // className=\"btn btn-primary btn-block\"\n                      className=\"btn2\"\n                      onClick={() => getImagelist()}\n                    />\n\n                    {/* <label\n                      className=\"id=inputGroupFile02\"\n                      htmlFor=\"inputGroupFile02\"\n                    ></label> */}\n                    <ListGroup\n                      action\n                      onClick={(event) => {\n                        props.getIcon(event.target.firstChild.data)\n                      }}\n                    >\n                      {imagelist?.map((picture, index) => {\n                        return (\n                          <ListGroup.Item action key={index} value={picture}>\n                            {picture}\n                          </ListGroup.Item>\n                        )\n                      })}\n                    </ListGroup>\n                  </div>\n                </form>\n              </div>\n            </>\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    )\n  }\n  return (\n    <Card style={{ width: '16rem', margin: '16px' }}>\n      <Card.Body>\n        <Card.Title>{props.mediatype} Upload</Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          Select {props.mediatype} to Upload\n        </Card.Subtitle>\n        <Card.Text>\n          <>\n            <div className=\"mb-2\">\n              <form onSubmit={onSubmit}>\n                <div className=\"input-group mb-3\">\n                  <input\n                    type=\"file\"\n                    className=\"form-control mb-5\"\n                    id=\"inputGroupFile02\"\n                    accept={`${props.filetype}/gif, ${props.filetype}/png, ${props.filetype}/jpg`}\n                    onChange={onChange}\n                  />\n                  <input\n                    type=\"submit\"\n                    value={`Submit`}\n                    // className=\"btn btn-primary btn-block\"\n                    className=\"btn1\"\n                  />\n\n                  <label\n                    className=\"id=inputGroupFile02\"\n                    htmlFor=\"inputGroupFile02\"\n                  ></label>\n                </div>\n              </form>\n            </div>\n          </>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default IconUpload\n",{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":2,"column":27,"nodeType":"128","messageId":"129","endLine":2,"endColumn":33},{"ruleId":"126","severity":1,"message":"130","line":2,"column":35,"nodeType":"128","messageId":"129","endLine":2,"endColumn":39},{"ruleId":"126","severity":1,"message":"127","line":2,"column":16,"nodeType":"128","messageId":"129","endLine":2,"endColumn":22},{"ruleId":"126","severity":1,"message":"130","line":2,"column":24,"nodeType":"128","messageId":"129","endLine":2,"endColumn":28},{"ruleId":"126","severity":1,"message":"127","line":2,"column":16,"nodeType":"128","messageId":"129","endLine":2,"endColumn":22},{"ruleId":"126","severity":1,"message":"130","line":2,"column":24,"nodeType":"128","messageId":"129","endLine":2,"endColumn":28},{"ruleId":"126","severity":1,"message":"131","line":1,"column":27,"nodeType":"128","messageId":"129","endLine":1,"endColumn":36},{"ruleId":"126","severity":1,"message":"132","line":8,"column":8,"nodeType":"128","messageId":"129","endLine":8,"endColumn":12},{"ruleId":"126","severity":1,"message":"127","line":3,"column":34,"nodeType":"128","messageId":"129","endLine":3,"endColumn":40},{"ruleId":"126","severity":1,"message":"133","line":12,"column":10,"nodeType":"128","messageId":"129","endLine":12,"endColumn":15},{"ruleId":"126","severity":1,"message":"134","line":13,"column":11,"nodeType":"128","messageId":"129","endLine":13,"endColumn":22},{"ruleId":"126","severity":1,"message":"135","line":48,"column":18,"nodeType":"128","messageId":"129","endLine":48,"endColumn":27},{"ruleId":"136","severity":1,"message":"137","line":227,"column":6,"nodeType":"138","endLine":227,"endColumn":24,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":9,"column":7,"nodeType":"142","endLine":15,"endColumn":9},{"ruleId":"126","severity":1,"message":"143","line":11,"column":10,"nodeType":"128","messageId":"129","endLine":11,"endColumn":18},{"ruleId":"126","severity":1,"message":"144","line":1,"column":29,"nodeType":"128","messageId":"129","endLine":1,"endColumn":37},{"ruleId":"126","severity":1,"message":"145","line":11,"column":10,"nodeType":"128","messageId":"129","endLine":11,"endColumn":16},{"ruleId":"136","severity":1,"message":"146","line":91,"column":6,"nodeType":"138","endLine":91,"endColumn":31,"suggestions":"147"},{"ruleId":"126","severity":1,"message":"127","line":3,"column":34,"nodeType":"128","messageId":"129","endLine":3,"endColumn":40},{"ruleId":"126","severity":1,"message":"148","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":12},{"ruleId":"126","severity":1,"message":"149","line":1,"column":51,"nodeType":"128","messageId":"129","endLine":1,"endColumn":61},{"ruleId":"126","severity":1,"message":"143","line":7,"column":10,"nodeType":"128","messageId":"129","endLine":7,"endColumn":18},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'useEffect' is defined but never used.","'vid2' is defined but never used.","'error' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'setCanvas' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tick'. Either include it or remove the dependency array.","ArrayExpression",["152"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'filename' is assigned a value but never used.","'useState' is defined but never used.","'source' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadSongIntoAudio'. Either include it or remove the dependency array.",["153"],"'wave' is defined but never used.","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [sliderM, sliderN, tick]",{"range":"158","text":"159"},"Update the dependencies array to be: [currentSongIndex, audio, loadSongIntoAudio]",{"range":"160","text":"161"},[5909,5927],"[sliderM, sliderN, tick]",[2697,2722],"[currentSongIndex, audio, loadSongIntoAudio]"]