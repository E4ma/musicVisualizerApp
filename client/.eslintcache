[{"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\index.js":"1","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\App.js":"2","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Home.js":"3","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\About.js":"4","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\TemplatesPage.js":"5","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Navbars\\Navigation.js":"6","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Signin\\Login.js":"7","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Displayer.js":"8","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\UploadAudio\\AudioImport.js":"9","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\BackgroundImport.js":"10"},{"size":355,"mtime":1611188402928,"results":"11","hashOfConfig":"12"},{"size":1439,"mtime":1611177090634,"results":"13","hashOfConfig":"12"},{"size":1988,"mtime":1611288584296,"results":"14","hashOfConfig":"12"},{"size":429,"mtime":1611174001887,"results":"15","hashOfConfig":"12"},{"size":207,"mtime":1611177150255,"results":"16","hashOfConfig":"12"},{"size":2420,"mtime":1611177539968,"results":"17","hashOfConfig":"12"},{"size":2081,"mtime":1611189756126,"results":"18","hashOfConfig":"12"},{"size":5065,"mtime":1611281561259,"results":"19","hashOfConfig":"12"},{"size":3072,"mtime":1611284997673,"results":"20","hashOfConfig":"12"},{"size":3098,"mtime":1611288642931,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"mpxc4k",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\index.js",[],["48","49"],"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\App.js",["50"],"import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Navigation from './Components/Navbars/Navigation';\r\nimport About from './Components/About';\r\nimport TemplatesPage from './Components/TemplatesPage';\r\nimport Home from './Components/Home';\r\nimport Login from './Components/Signin/Login';\r\n\r\nconst App = () => {\r\n  const [route, setRoute] = useState('signout');\r\n  const [isSignedIn, setIsSignedIn] = useState(false);\r\n  const [displayPage, setDisplayPage] = useState(Home);\r\n\r\n  if (isSignedIn === 'signout') {\r\n    setIsSignedIn(false)\r\n  } else if (isSignedIn === 'signin') {\r\n    setIsSignedIn(true)\r\n  }\r\n\r\n  const onRouteChange = (route) => {\r\n\r\n    if (route === 'signout') {\r\n      setRoute({ isSignedIn: false })\r\n\r\n    } else if (route === 'signin') {\r\n      setRoute({ isSignedIn: true })\r\n    } else if (route === 'Home') {\r\n      setDisplayPage(<Home onRouteChange={onRouteChange} />)\r\n    } else if (route === 'About') {\r\n      setDisplayPage(<About onRouteChange={onRouteChange} />)\r\n    } else if (route === \"TemplatesPage\") {\r\n      setDisplayPage(<TemplatesPage />)\r\n    } else if (route === 'Login') {\r\n      setDisplayPage(<Login onRouteChange={onRouteChange} />)\r\n    }\r\n    setRoute({ route: route })\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Navigation isSignedIn={setIsSignedIn} onRouteChange={onRouteChange} />\r\n     {displayPage}\r\n      {/* <Footer /> */}\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Home.js",["51"],"import React from 'react'\r\nimport { Container, Card, Row, Col, Nav, Button, ButtonGroup } from 'react-bootstrap'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport BackgroundImport from '../BackgroundImport'\r\nimport Displayer from './Displayer'\r\nimport AudioImport from './UploadAudio/AudioImport'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n      <Row>\r\n\r\n        <Col sm={3}>\r\n          <Nav variant=\"pills\" className=\"flex-column\">\r\n            <br />\r\n\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"uploadAudio\">Audio\r\n                {/* <Button size=\"lg\" block>Audio</Button> */}\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"uploadBackground\">Background</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"Icon\">Icon</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"text\">Text</Nav.Link>\r\n            </Nav.Item>\r\n            <ButtonGroup aria-label=\"Basic example\">\r\n              <Button variant=\"secondary\">Export</Button>\r\n              <Button variant=\"secondary\">Save</Button>\r\n            </ButtonGroup>\r\n          </Nav>\r\n        </Col>\r\n\r\n        {/* <Col sm={9}> */}\r\n        <Tab.Content>\r\n          <Tab.Pane eventKey=\"uploadAudio\">\r\n            <AudioImport />\r\n          </Tab.Pane>\r\n          <Tab.Pane eventKey=\"uploadBackground\">\r\n            <BackgroundImport />\r\n          </Tab.Pane>\r\n        </Tab.Content>\r\n        {/* </Col> */}\r\n\r\n        {/* card for displaying the visualizer on the right panel*/}\r\n\r\n        <Col sm={3}>\r\n          <br />\r\n          <Card style={{ width: '30rem' }}>\r\n            <Card.Body>\r\n              <Card.Title>Visualizer</Card.Title>\r\n              <Displayer />\r\n            </Card.Body>\r\n          </Card>\r\n\r\n        </Col>\r\n\r\n\r\n      </Row>\r\n    </Tab.Container >\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\About.js",[],"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\TemplatesPage.js",[],"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Navbars\\Navigation.js",[],"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Signin\\Login.js",["52","53","54","55","56","57","58"],"import React from 'react'\r\n// import { Button, Modal } from 'react-bootstrap'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Nav,\r\n  Button,\r\n  Tab, Card, \r\n  ButtonGroup,\r\n} from 'react-bootstrap'\r\n\r\nconst Login = () => {\r\n  return (\r\n    // <div className=\"ui container\">\r\n    //     <h3>Hello Login Page</h3>\r\n    // </div>\r\n\r\n    // <Modal.Dialog centered>\r\n    //     <Modal.Header closeButton>\r\n    //         <Modal.Title>Hello Login or Signup Page</Modal.Title>\r\n    //     </Modal.Header>\r\n\r\n    //     <Modal.Body>\r\n    //         <p>Modal body text goes here.</p>\r\n    //     </Modal.Body>\r\n\r\n    //     <Modal.Footer>\r\n    //         <Button variant=\"secondary\">Close</Button>\r\n    //         <Button variant=\"primary\">Save changes</Button>\r\n    //     </Modal.Footer>\r\n    // </Modal.Dialog>\r\n\r\n\r\n    <Card style={{ width: '18rem' }}>\r\n      <Card.Body>\r\n        <Card.Title>Card Title</Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">Card Subtitle</Card.Subtitle>\r\n        <Card.Text>\r\n          Some quick example text to build on the card title and make up the bulk of\r\n          the card's content.\r\n    </Card.Text>\r\n        <Card.Link href=\"#\">Card Link</Card.Link>\r\n        <Card.Link href=\"#\">Another Link</Card.Link>\r\n      </Card.Body>\r\n    </Card>\r\n\r\n\r\n    // <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n    //   <Row>\r\n    //     <Col sm={3}>\r\n    //       <Nav variant=\"pills\" className=\"flex-column\">\r\n    //         <Nav.Item>\r\n    //           <Nav.Link eventKey=\"first\">Tab 1</Nav.Link>\r\n    //         </Nav.Item>\r\n    //         <Nav.Item>\r\n    //           <Nav.Link eventKey=\"second\">Tab 2</Nav.Link>\r\n    //         </Nav.Item>\r\n    //       </Nav>\r\n    //     </Col>\r\n    //     <Col sm={9}>\r\n    //       <Tab.Content>\r\n    //         <Tab.Pane eventKey=\"first\">{/* <Sonnet /> */}The dog</Tab.Pane>\r\n    //         <Tab.Pane eventKey=\"second\">{/* <Sonnet /> */}The cat</Tab.Pane>\r\n    //       </Tab.Content>\r\n    //     </Col>\r\n    //   </Row>\r\n    // </Tab.Container>\r\n\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Displayer.js",["59","60","61","62"],"import React, { createRef, useState, useEffect } from 'react'\r\nimport songFile from './audio/ImperialMarch60.wav'\r\nimport songFile2 from './audio/Rodriguez - Inner City Blues.mp3'\r\nimport songFile3 from './audio/Lucky Dube-Too-Many-People.wav.mp3'\r\n\r\n\r\nlet songs = [\r\n  {\r\n    name: 'ImperialMarch60',\r\n    songFile: songFile,\r\n    color: 'black',\r\n    fontColor: 'black',\r\n  },\r\n  {\r\n    name: 'Rodriguez - Inner City Blue',\r\n    songFile: songFile2,\r\n    color: 'red',\r\n    fontColor: 'black',\r\n  },\r\n  {\r\n    name: 'Lucky Dube-Too-Many-People',\r\n    songFile: songFile3,\r\n    color: 'pink',\r\n    fontColor: 'darkpurple',\r\n  },\r\n]\r\n\r\nlet rafId\r\nlet analyser\r\n// Changing Variables\r\nlet ctx, x_end, y_end, bar_height\r\n\r\n// constants\r\nconst width = window.innerWidth * (1 / 2)  // it was (3/4)\r\nconst height = window.innerHeight - 101\r\n// width 1280 and height 446\r\n\r\n\r\nconsole.log('default sizes: ', window.innerWidth, '/', window.innerHeight)\r\nconsole.log('new sizes: ', width, \"/\", height)\r\n\r\nconst bars = 999 //  max 1030 - leave it in 555\r\nconst bar_width = 2 //  good in 1\r\nconst radius = 0 // innercircle\r\nconst center_x = width / 2 - window.innerWidth / 16\r\nconst center_y = height / 2\r\nlet audioSource = new Audio(songs[0].songFile)\r\n\r\nconst Displayer = () => {\r\n  const [audio, setAudio] = useState(audioSource)\r\n  const [songList, setSongList] = useState(songs)\r\n  const [canvas, setCanvas] = useState(createRef())\r\n  //\r\n  const [audioContext, setAudioContext] = useState()\r\n  const [isPaused, setIsPaused] = useState(true)\r\n  //\r\n  const [currentSong, setCurrentSong] = useState(0)\r\n  const [frequency_array, setFrequencyArray] = useState()\r\n  const [songName, setSongName] = useState(songs[0].name)\r\n  const [textColor, setTextColor] = useState(songs[0].textColor)\r\n\r\n  function animationLooper(canvas) {\r\n    canvas.width = width\r\n    canvas.height = height\r\n\r\n    ctx = canvas.getContext('2d')\r\n\r\n    for (var i = 0; i < bars; i++) {\r\n      //divide a circle into equal part\r\n      const rads = (Math.PI * 2) / bars\r\n\r\n      // Math is magical - you can make lots of visualizer\r\n      bar_height = frequency_array[i] * 1.5\r\n\r\n      const x = center_x + Math.cos(rads * i) * radius\r\n      const y = center_y + Math.sin(rads * i) * radius\r\n      x_end = center_x + Math.cos(rads * i) * (radius + bar_height)\r\n      y_end = center_y + Math.sin(rads * i) * (radius + bar_height)\r\n\r\n      //draw a bar\r\n      drawBar(x, y, x_end, y_end, frequency_array[i], ctx, canvas)\r\n    }\r\n  }\r\n\r\n  function drawBar(x1 = 0, y1 = 0, x2 = 0, y2 = 0, frequency, ctx, canvas) {\r\n    const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height)\r\n    // gradient.addColorStop(0, \"rgba(35, 7, 77, 1)\");\r\n    // gradient.addColorStop(1, \"rgba(204, 83, 51, 1)\");\r\n    gradient.addColorStop(0, 'rgba(30, 17, 18, 11)')\r\n    gradient.addColorStop(1, 'rgba(254, 283, 151, 121)')\r\n    ctx.fillStyle = gradient\r\n\r\n    const lineColor = 'rgb(' + frequency + ', ' + frequency + ', ' + 205 + ')'\r\n    ctx.strokeStyle = lineColor\r\n    ctx.lineWidth = bar_width\r\n    ctx.beginPath()\r\n    ctx.moveTo(x1, y1)\r\n    ctx.lineTo(x2, y2)\r\n    ctx.stroke()\r\n  }\r\n\r\n  useEffect(() => {\r\n    let context = new (window.AudioContext || window.webkitAudioContext)()\r\n    let source = context.createMediaElementSource(audio)\r\n\r\n    analyser = context.createAnalyser()\r\n    source.connect(analyser)\r\n    analyser.connect(context.destination)\r\n    let frequencyArray = new Uint8Array(analyser.frequencyBinCount)\r\n    setFrequencyArray(frequencyArray)\r\n    //\r\n    setAudioContext(context)\r\n    //\r\n  }, [audio])\r\n\r\n  const togglePlay = () => {\r\n    // const { audio } = this;\r\n    if (audio.paused) {\r\n      audioContext.resume()\r\n      audio.play()\r\n      setIsPaused(false)\r\n      rafId = requestAnimationFrame(tick)\r\n    } else {\r\n      audio.pause()\r\n      setIsPaused(true)\r\n      cancelAnimationFrame(rafId)\r\n    }\r\n  }\r\n\r\n  const changeSong = (songNumber) => {\r\n    console.log('No8', songNumber)\r\n    let { name, songFile, color, fontColor } = songList[songNumber]\r\n    audio.src = songFile\r\n    if (!isPaused) {\r\n      audio.play()\r\n    }\r\n    setCurrentSong(songNumber)\r\n    setSongName(name)\r\n    // setBackgroundColor(color)\r\n    setTextColor(fontColor)\r\n  }\r\n\r\n  const tick = () => {\r\n    animationLooper(canvas.current)\r\n    analyser.getByteTimeDomainData(frequency_array)\r\n    rafId = requestAnimationFrame(tick)\r\n  }\r\n\r\n  return (\r\n    <div className=\"audioControl\">\r\n      <button\r\n        onClick={togglePlay}\r\n        style={\r\n          isPaused\r\n            ? { backgroundColor: 'yellow' }\r\n            : { backgroundColor: 'green' }\r\n        }\r\n      >\r\n        {isPaused ? 'Paused' : 'PLAYING !!!'}\r\n      </button>\r\n\r\n      <button\r\n        onClick={() => {\r\n          changeSong((currentSong + 1) % 3)\r\n        }}\r\n      >\r\n        Change Song my Friend\r\n      </button>\r\n      <canvas ref={canvas} />\r\n      {/* <div className=\"songName\"> */}\r\n      <h3 style={{ color: textColor }}>{songName}</h3>\r\n      {/* </div> */}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Displayer\r\n","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\UploadAudio\\AudioImport.js",["63","64","65"],"import React, { useState, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport { Card, Button } from 'react-bootstrap'\r\n\r\n\r\nconst AudioUpload = () => {\r\n\r\n  //Need to use a hook to set text in the label to the file namespace\r\n  const [file, setFile] = useState('')\r\n  const [filename, setFilename] = useState('Choose File')\r\n  const [uploadedFile, setUploadedFile] = useState({})\r\n\r\n  const onChange = (e) => {\r\n    //HTML file uploads come as an array so we want the index of the first file\r\n    setFile(e.target.files[0])\r\n    setFilename(e.target.files[0].name)\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault()\r\n    const formData = new FormData()\r\n    formData.append('file', file)\r\n\r\n    try {\r\n      //Need to connect to the server\r\n      const res = await axios.post('/upload', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      })\r\n      const { fileName, filePath } = res.data\r\n      if (res.status === 200) {\r\n        console.log('Was uploaded successfully ' + res.status)\r\n      }\r\n      setUploadedFile({ fileName, filePath })\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        console.error('There is a problem with the server ' + err.message)\r\n      } else {\r\n        //This message is from the server if no file is uploaded\r\n        console.error(err.response.data.msg)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    //The fragment allows to group children without creating extra nodes\r\n\r\n    <Card style={{ width: '17rem', top: '25px' }}>\r\n      <Card.Body>\r\n        <Card.Title>\r\n          Audio Upload\r\n        </Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">Select your own audio to upload</Card.Subtitle>\r\n        <Card.Text>\r\n\r\n\r\n\r\n          <Fragment>\r\n            <div className=\"mb-2\">\r\n              <form onSubmit={onSubmit}>\r\n                <div className=\"input-group mb-3\">\r\n                  <input\r\n                    type=\"file\"\r\n                    className=\"form-control\"\r\n                    id=\"inputGroupFile02\"\r\n                    onChange={onChange}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Upload Audio\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                  />\r\n\r\n                  <label\r\n                    className=\"id=inputGroupFile02\"\r\n                    htmlFor=\"inputGroupFile02\"\r\n                  ></label>\r\n                </div>\r\n              </form>\r\n            </div>\r\n\r\n            {/* {uploadedFile ? (\r\n        <div className=\"row mt-5\">\r\n          <div className=\"col-md-6 m-auto\">\r\n            <h3 className=\"text-center\">{uploadedFile.filename}</h3>\r\n            <img style={{ width: '50%' }} src={uploadedFile.filepath} alt=\"\" />\r\n          </div>\r\n        </div>\r\n      ) : null} */}\r\n          </Fragment>\r\n\r\n\r\n\r\n        </Card.Text >\r\n        <Card.Link href=\"#\">Cancel</Card.Link>\r\n        {/* <Card.Link href=\"#\">Another Link</Card.Link> */}\r\n      </Card.Body >\r\n    </Card >\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default AudioUpload\r\n","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\BackgroundImport.js",["66","67","68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":10,"column":10,"nodeType":"75","messageId":"76","endLine":10,"endColumn":15},{"ruleId":"73","severity":1,"message":"77","line":2,"column":10,"nodeType":"75","messageId":"76","endLine":2,"endColumn":19},{"ruleId":"73","severity":1,"message":"77","line":4,"column":3,"nodeType":"75","messageId":"76","endLine":4,"endColumn":12},{"ruleId":"73","severity":1,"message":"78","line":5,"column":3,"nodeType":"75","messageId":"76","endLine":5,"endColumn":6},{"ruleId":"73","severity":1,"message":"79","line":6,"column":3,"nodeType":"75","messageId":"76","endLine":6,"endColumn":6},{"ruleId":"73","severity":1,"message":"80","line":7,"column":3,"nodeType":"75","messageId":"76","endLine":7,"endColumn":6},{"ruleId":"73","severity":1,"message":"81","line":8,"column":3,"nodeType":"75","messageId":"76","endLine":8,"endColumn":9},{"ruleId":"73","severity":1,"message":"82","line":9,"column":3,"nodeType":"75","messageId":"76","endLine":9,"endColumn":6},{"ruleId":"73","severity":1,"message":"83","line":10,"column":3,"nodeType":"75","messageId":"76","endLine":10,"endColumn":14},{"ruleId":"73","severity":1,"message":"84","line":50,"column":17,"nodeType":"75","messageId":"76","endLine":50,"endColumn":25},{"ruleId":"73","severity":1,"message":"85","line":51,"column":20,"nodeType":"75","messageId":"76","endLine":51,"endColumn":31},{"ruleId":"73","severity":1,"message":"86","line":52,"column":18,"nodeType":"75","messageId":"76","endLine":52,"endColumn":27},{"ruleId":"73","severity":1,"message":"87","line":132,"column":27,"nodeType":"75","messageId":"76","endLine":132,"endColumn":32},{"ruleId":"73","severity":1,"message":"81","line":3,"column":16,"nodeType":"75","messageId":"76","endLine":3,"endColumn":22},{"ruleId":"73","severity":1,"message":"88","line":10,"column":10,"nodeType":"75","messageId":"76","endLine":10,"endColumn":18},{"ruleId":"73","severity":1,"message":"89","line":11,"column":10,"nodeType":"75","messageId":"76","endLine":11,"endColumn":22},{"ruleId":"73","severity":1,"message":"81","line":3,"column":16,"nodeType":"75","messageId":"76","endLine":3,"endColumn":22},{"ruleId":"73","severity":1,"message":"88","line":10,"column":10,"nodeType":"75","messageId":"76","endLine":10,"endColumn":18},{"ruleId":"73","severity":1,"message":"89","line":11,"column":10,"nodeType":"75","messageId":"76","endLine":11,"endColumn":22},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'route' is assigned a value but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Nav' is defined but never used.","'Button' is defined but never used.","'Tab' is defined but never used.","'ButtonGroup' is defined but never used.","'setAudio' is assigned a value but never used.","'setSongList' is assigned a value but never used.","'setCanvas' is assigned a value but never used.","'color' is assigned a value but never used.","'filename' is assigned a value but never used.","'uploadedFile' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]