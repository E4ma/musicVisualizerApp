[{"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/index.js":"1","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Home.js":"2","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/About.js":"3","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Displayer.js":"4","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/InsertIcon.js":"5","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/FileUpload.js":"6","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/Playlist.js":"7","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MyAccount.js":"8","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/App.js":"9","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Signup.js":"10","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Login.js":"11","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/PrivateRoute.js":"12","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/ForgotPassword.js":"13","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/UpdateProfile.js":"14","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/contexts/AuthContext.js":"15","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Navigation.js":"16","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/firebase.js":"17"},{"size":400,"mtime":1613515554045,"results":"18","hashOfConfig":"19"},{"size":3443,"mtime":1613515553820,"results":"20","hashOfConfig":"19"},{"size":1381,"mtime":1613515553818,"results":"21","hashOfConfig":"19"},{"size":9014,"mtime":1613515590584,"results":"22","hashOfConfig":"19"},{"size":379,"mtime":1613012297186,"results":"23","hashOfConfig":"19"},{"size":6322,"mtime":1613515637770,"results":"24","hashOfConfig":"19"},{"size":2110,"mtime":1613515688689,"results":"25","hashOfConfig":"19"},{"size":1754,"mtime":1613515553822,"results":"26","hashOfConfig":"19"},{"size":2180,"mtime":1613515553819,"results":"27","hashOfConfig":"19"},{"size":2137,"mtime":1613515553823,"results":"28","hashOfConfig":"19"},{"size":1753,"mtime":1613515553821,"results":"29","hashOfConfig":"19"},{"size":586,"mtime":1613515553822,"results":"30","hashOfConfig":"19"},{"size":1654,"mtime":1613515553820,"results":"31","hashOfConfig":"19"},{"size":2639,"mtime":1613515553823,"results":"32","hashOfConfig":"19"},{"size":1469,"mtime":1613515554044,"results":"33","hashOfConfig":"19"},{"size":1712,"mtime":1613515553822,"results":"34","hashOfConfig":"19"},{"size":577,"mtime":1613515554045,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qwo52n",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/index.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Home.js",[],["78","79"],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/About.js",["80"],"import React from 'react'\n\n// styling for About is in App.css\n\n\nconst About = () => {\n    return (\n        <div className=\"ui container Abountscr\">\n            <br></br>\n            <h2>Turn your music into a killer video.</h2>\n            <br></br>\n            <h4>\n                We make it fast and easy to create custom music visualizers. You're one step closer to entertaining your audience with self made videos.\n            </h4>\n            <br></br>\n            <h4>\n                No download needed. Jump into the web based editor and start customizing right away. The live video preview updates in real time and moves with your music.\n\n                It only takes a few minutes to make a video. Use simple pre-set controls to enjoy your tracks\n            </h4>\n            {/* SN: sorry this is illegal (below) */}\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n        </div>\n    )\n}\n\nexport default About\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Displayer.js",["81","82","83","84","85"],"import React, { createRef, useState, useEffect, useLayoutEffect } from 'react'\nimport axios from 'axios'\nimport background from './Images/background1.jpg'\n\nconst UpdateWindowSize = () => {\n  const [size, setSize] = useState([1000, 1000])\n  useLayoutEffect(() => {\n    const updateSize = () => {\n      setSize([window.innerWidth, window.innerHeight])\n    }\n    window.addEventListener('resize', updateSize)\n    return () => window.removeEventListener('resize', updateSize)\n  }, [])\n  return size\n}\n\nlet rafId\n\nlet ctx, x_end, y_end, bar_height\n\nconst bars = 900 //  max 1030 - leave it in 555\nconst bar_width = 2 //  good in 1\nconst radius = 0 // innercircle\nlet audio\nlet audioContext\nlet source\nlet analyser\nlet frequency_array\nconst createAudioContext = () => {\n  audio = new Audio()\n\n  audioContext = new (window.AudioContext || window.webkitAudioContext)()\n  source = audioContext.createMediaElementSource(audio)\n  analyser = audioContext.createAnalyser()\n  source.connect(analyser)\n  analyser.connect(audioContext.destination)\n  frequency_array = new Uint8Array(analyser.frequencyBinCount)\n}\n\nconst Displayer = () => {\n  const [width, height] = UpdateWindowSize()\n  const [canvas, setCanvas] = useState(createRef())\n  const [isPaused, setIsPaused] = useState(true)\n  const [songSelect, setsongSelect] = useState()\n  const [currentSong, setCurrentSong] = useState(0)\n  const [sliderM, setSliderM] = useState(1)\n  const [sliderN, setSliderN] = useState(1)\n  const center_x = width / 2\n  const center_y = height / 2\n  useEffect(() => {\n    if (rafId) {\n      cancelAnimationFrame(rafId)\n      rafId = requestAnimationFrame(tick)\n    }\n  }, [sliderM, sliderN])\n  const getSong = async (song) => {\n    createAudioContext()\n    const response = await axios.get(\n      `http://localhost:5000/upload/media/${song}`,\n      { responseType: 'blob' },\n    )\n    audio.src = URL.createObjectURL(response.data)\n    audio.load()\n    // audio.play()\n  }\n  function animationLooper(canvas) {\n    canvas.width = width\n    canvas.height = height\n    ctx = canvas.getContext('2d')\n    for (let i = 0; i < bars; i++) {\n      //divide a circle into equal part\n      const rads = (Math.PI * 2) / bars\n      // Math is magical - you can make lots of visualizer\n      // this 4.5 decides the canves size\n      bar_height = frequency_array[i] * 2.5\n      const x = center_x + Math.cos(rads * i) * radius\n      const y = center_y + Math.sin(rads * i) * radius\n      x_end = center_x + Math.cos(rads * sliderN * i) * (radius + bar_height)\n      y_end =\n        center_y +\n        Math.sin(rads * sliderM * i + (Math.PI / 640) * new Date()) *\n          (radius + bar_height)\n      //draw a bar\n      // const x = bar_width / 2 + (i * window.innerWidth) / bars;\n      // const y = 900;\n      // const y_end = 800 - bar_height;\n      // const x_end = x;\n      drawBar(x, y, x_end, y_end, i, ctx, canvas)\n    }\n  }\n  function drawBar(x1 = 0, y1 = 0, x2 = 0, y2 = 0, i, ctx) {\n    i = (i + new Date().getTime() * 2) % 600 //  2 is an OK number,  600/6 =100 integer is good\n    const gradient = ctx.createLinearGradient(x1, y1, x2, y2)\n    gradient.addColorStop(0, 'rgba(0, 255, 0, 255)')\n    gradient.addColorStop(1, 'rgba(254, 0, 0, 255)')\n    ctx.fillStyle = 'pink'\n    let lineColor\n    if (i < 150) {\n      // lineColor = \"red\"\n      lineColor =\n        'rgb(' +\n        Math.abs(275 - i) +\n        ', ' +\n        Math.abs(175 - i / 2) +\n        ', ' +\n        1000 +\n        ')'\n    } else if (i < 300) {\n      // lineColor=\"blue\"\n      lineColor =\n        'rgb(' +\n        1000 +\n        ', ' +\n        Math.abs(275 - i) +\n        ', ' +\n        Math.abs(175 - i / 2) +\n        ')'\n    } else if (i < 450) {\n      // lineColor=\"green\"\n      lineColor =\n        'rgb(' +\n        Math.abs(175 - i / 2) +\n        ', ' +\n        1000 +\n        ', ' +\n        Math.abs(275 - i) +\n        ')'\n    } else if (i < 600) {\n      // lineColor = \"red\"\n      lineColor =\n        'rgb(' +\n        Math.abs(175 - i / 2) +\n        ', ' +\n        1000 +\n        ', ' +\n        Math.abs(275 - i) +\n        ')'\n    } else if (i < 750) {\n      // lineColor=\"blue\"\n      lineColor =\n        'rgb(' +\n        1000 +\n        ', ' +\n        Math.abs(275 - i) +\n        ', ' +\n        Math.abs(175 - i / 2) +\n        ')'\n    } else if (i < 900) {\n      // lineColor=\"green\"\n      lineColor =\n        'rgb(' +\n        Math.abs(275 - i) +\n        ', ' +\n        Math.abs(175 - i / 2) +\n        ', ' +\n        1000 +\n        ')'\n    }\n\n    ctx.strokeStyle = lineColor\n    ctx.lineWidth = bar_width\n    ctx.beginPath()\n    ctx.moveTo(x1, y1)\n    ctx.lineTo(x2, y2)\n    ctx.stroke()\n  }\n\n  //Plays Music\n  const togglePlay = () => {\n    // createAudioContext()\n    if (audio.paused) {\n      audioContext.resume()\n      audio.play()\n      setIsPaused(false)\n      rafId = requestAnimationFrame(tick)\n    } else {\n      audio.pause()\n      setIsPaused(true)\n      cancelAnimationFrame(rafId)\n    }\n  }\n\n  function tick() {\n    animationLooper(canvas.current)\n    analyser.getByteTimeDomainData(frequency_array)\n    rafId = requestAnimationFrame(tick)\n  }\n\n  useEffect(() => {\n    const getSongList = async () => {\n      let res = await axios.get('http://localhost:5000/upload/list')\n      setsongSelect(res.data)\n      console.log(setsongSelect)\n    }\n    getSongList()\n  }, [])\n\n  return (\n    <div\n      className=\"audioControlBackground\"\n      style={{ backgroundImage: `url(${background})` }}\n    >\n      <div className=\"buttonWrapper\">\n        <button\n          onClick={() => {\n            if (audio) {\n              togglePlay()\n            }\n          }}\n          style={{\n            width: '150px',\n            backgroundColor: isPaused\n              ? // this is the play/pause button colors\n                'yellow'\n              : 'green',\n          }}\n        >\n          {isPaused ? 'Play' : 'Pause'}\n        </button>\n\n        <select\n          onChange={(e) => {\n            getSong(e.target.value)\n          }}\n        >\n          {' '}\n          <option>Choose A Song</option>\n          {songSelect &&\n            songSelect.map((song) => {\n              return <option value={song}>{song}</option>\n            })}\n        </select>\n      </div>\n      <div className=\"songInfoWrapper\">\n        {/* Inserted by SN */}\n\n        {/* Removed by SN */}\n        {/* < h3 style={{ color: textColor }}>{songName}</h3> */}\n      </div>\n      <div className=\"canvasWrapper\">\n        {audio && audio.paused ? <canvas /> : <canvas ref={canvas} />}\n      </div>\n      <div className=\"sliders\">\n        {' '}\n        <div>{sliderM}</div>\n        <input\n          className=\"slider\"\n          type=\"range\"\n          min=\"0\"\n          max=\"8\"\n          step=\".5\"\n          onChange={(e) => {\n            setSliderM(e.target.value)\n          }}\n          value={sliderM}\n        />{' '}\n        <div>{sliderN}</div>\n        <input\n          className=\"slider1\"\n          type=\"range\"\n          min=\"0\"\n          max=\"8\"\n          step=\".5\"\n          onChange={(e) => {\n            setSliderN(e.target.value)\n          }}\n          value={sliderN}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Displayer","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/InsertIcon.js",["86"],"import React from 'react'\n// import { Container, Row, Col, Image } from 'react-bootstrap'\nimport icon from '../Images/Daco.png'\n\n//Icon input\nconst InsertIcon = () => {\n  return (\n    <div className=\"iconWrapper\">\n      <img\n        style={{\n          width: '15%',\n          height: '15%',\n        }}\n        src={`${icon}`}\n      />\n    </div>\n  )\n}\n\nexport default InsertIcon\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/FileUpload.js",["87"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Card } from 'react-bootstrap'\nimport Playlist from './Playlist'\n\nconst FileUpload = (props) => {\n  //Need to use a hook to set text in the label to the file namespace\n  const [file, setFile] = useState('')\n  const [filename, setFilename] = useState('Choose File')\n  const [uploadedFile, setUploadedFile] = useState({})\n  const [currentUser, setCurrentUser] = useState('USR------1')\n  const [playlist, setPlaylist] = useState([])\n\n  console.log('USER.....:', currentUser)\n\n  const onChange = (e) => {\n    //HTML file uploads come as an array so we want the index of the first file\n    setFile(e.target.files[0])\n    setFilename(e.target.files[0].name)\n  }\n\n  const onSubmit = async (e) => {\n    // e.preventDefault() used to prevent submitting by accident by preventing normal submitting\n    e.preventDefault()\n\n    const formData = new FormData()\n    formData.append('file', file)\n\n    try {\n      const res = await axios.post(\n        'http://localhost:5000/upload/media',\n        formData,\n        {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        },\n      )\n      const { fileName, filePath } = res.data\n      // console.log('These are the headers', res.headers)\n      if (res.status === 200) {\n        console.log('Was uploaded successfully ' + res.status)\n      }\n      setUploadedFile({ fileName, filePath })\n    } catch (err) {\n      if (err.response.status === 500) {\n        console.error('There is a problem with the server ' + err.message)\n      } else {\n        //This message is from the server if no file is uploaded\n        // console.error('we had an error??? ' + err.response.data.msg)\n        console.error(err.response.data.msg)\n      }\n    }\n  }\n  // Gets the playlist and sends to the Playlist Component\n\n  const getPlaylist = () => {\n    axios\n      .get('http://localhost:5000/upload/list')\n      .then((res) => {\n        // console.log('this is the res', res)\n        return res.data\n      })\n      .then((playlist) => {\n        // console.log('This is the playlist', playlist)\n        setPlaylist(playlist)\n      })\n  }\n  useEffect(() => {\n    getPlaylist()\n  }, [uploadedFile])\n\n  // If the audio button is selected\n  if (props.mediatype === 'Audio') {\n    return (\n      <Card style={{ width: '16rem', margin: '16px' }}>\n        <Card.Body>\n          <Card.Title>{props.mediatype} Upload</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            Select {props.mediatype} to Upload\n          </Card.Subtitle>\n          <Card.Text>\n            <>\n              <div className=\"mb-2\">\n                <form onSubmit={onSubmit}>\n                  <div className=\"input-group mb-3\">\n                    <input\n                      type=\"file\"\n                      className=\"form-control mb-5\"\n                      id=\"inputGroupFile02\"\n                      accept={`${props.mediatype}/wav, ${props.mediatype}/mp3, ${props.mediatype}/mpeg`}\n                      onChange={onChange}\n                    />\n                    <input\n                      type=\"submit\"\n                      value={`Submit`}\n                      // className=\"btn btn-primary btn-block\"\n                      className=\"btn1\"\n                      onClick={() => getPlaylist()}\n                    />\n\n                    <label\n                      className=\"id=inputGroupFile02\"\n                      htmlFor=\"inputGroupFile02\"\n                    ></label>\n                  </div>\n                </form>\n              </div>\n            </>\n          </Card.Text>\n        </Card.Body>\n        <Playlist uploadedFile={uploadedFile} />\n      </Card>\n    )\n  }\n  if (props.mediatype === 'Background') {\n    return (\n      <Card style={{ width: '16rem', margin: '16px' }}>\n        <Card.Body>\n          <Card.Title>{props.mediatype} Upload</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            Select {props.mediatype} to Upload\n          </Card.Subtitle>\n          <Card.Text>\n            <>\n              <div className=\"mb-2\">\n                <form onSubmit={onSubmit}>\n                  <div className=\"input-group mb-3\">\n                    <input\n                      type=\"file\"\n                      className=\"form-control mb-5\"\n                      id=\"inputGroupFile02\"\n                      accept={`${props.filetype}/jpg, ${props.filetype}/jpeg, ${props.filetype}/bmp`}\n                      onChange={onChange}\n                    />\n                    <input\n                      type=\"submit\"\n                      value={`Submit`}\n                      // className=\"btn btn-primary btn-block\"\n                      className=\"btn1\"\n                    />\n\n                    <label\n                      className=\"id=inputGroupFile02\"\n                      htmlFor=\"inputGroupFile02\"\n                    ></label>\n                  </div>\n                </form>\n              </div>\n            </>\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    )\n  }\n  return (\n    <Card style={{ width: '16rem', margin: '16px' }}>\n      <Card.Body>\n        <Card.Title>{props.mediatype} Upload</Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          Select {props.mediatype} to Upload\n        </Card.Subtitle>\n        <Card.Text>\n          <>\n            <div className=\"mb-2\">\n              <form onSubmit={onSubmit}>\n                <div className=\"input-group mb-3\">\n                  <input\n                    type=\"file\"\n                    className=\"form-control mb-5\"\n                    id=\"inputGroupFile02\"\n                    accept={`${props.filetype}/gif, ${props.filetype}/png, ${props.filetype}/jpg`}\n                    onChange={onChange}\n                  />\n                  <input\n                    type=\"submit\"\n                    value={`Submit`}\n                    // className=\"btn btn-primary btn-block\"\n                    className=\"btn1\"\n                  />\n\n                  <label\n                    className=\"id=inputGroupFile02\"\n                    htmlFor=\"inputGroupFile02\"\n                  ></label>\n                </div>\n              </form>\n            </div>\n          </>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default FileUpload\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/Playlist.js",["88","89"],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MyAccount.js",["90"],"import React, { useState } from \"react\"\n  import { Card, Button, Alert } from \"react-bootstrap\"\n  import { useAuth } from \"../contexts/AuthContext\"\n  import { Link, useHistory } from \"react-router-dom\"\nimport Navigation from \"./Navigation\"\n  \n  export default function Dashboard() {\n    const styles = {\n        root: {\n            width: \"80%\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            marginBottom: \"105px\",\n            marginTop: \"105px\",\n            background: \"antiquewhite\",\n            padding: \"100px\",\n            fontSize: \"1.5rem\",\n            borderRadius: \"20px\",\n            backgroundColor: \"#357E85\"\n        },\n        labelText: {\n            fontFamily: \"Roboto\",\n            fontSize: \"2rem\",\n            color: \"#CCEBF4\",\n        }\n      }    \n    const [error, setError] = useState(\"\")\n    const { currentUser, logout } = useAuth()\n    const history = useHistory()\n  \n    async function handleLogout() {\n      setError(\"\")\n  \n      try {\n        await logout()\n        history.push(\"/login\")\n      } catch {\n        setError(\"Failed to log out\")\n      }\n    }\n  \n    return (\n<div>\n  <Navigation />\n<Card>\n          <Card.Body>\n            <h2 className=\"text-center mb-4\">Profile</h2>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <strong>Email:</strong> {currentUser.email}\n            <strong>Saved Visualizer:</strong>\n            <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\n              Update Profile\n            </Link>\n          </Card.Body>\n        </Card>\n        <div className=\"w-100 text-center mt-2\">\n          <Button variant=\"link\" onClick={handleLogout}>\n            Log Out\n          </Button>\n        </div>\n</div>\n    )\n  }","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/App.js",["91","92"],"import React, { useState } from 'react'\nimport './App.css'\nimport Signup from './Signup'\nimport { Container } from 'react-bootstrap'\nimport { AuthProvider } from '../contexts/AuthContext'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n// import Navigation from './Navigation'\nimport About from './About'\n// import TemplatesPage from './TemplatesPage'\nimport Editor from './Home'\nimport Profile from './MyAccount'\nimport Login from './Login'\nimport PrivateRoute from './PrivateRoute'\nimport ForgotPassword from './ForgotPassword'\nimport UpdateProfile from './UpdateProfile'\n\n\n\n\nfunction App(){\n\n  return(\n \n    <div>\n    <Router>\n      <AuthProvider>\n        <Switch>\n          <Route path=\"/About\" component={About} />\n          <PrivateRoute exact path=\"/MyAccount\" component={Profile} />\n          <PrivateRoute exact path=\"/Home\" component={Editor} />\n          <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/\" component={Login} />\n          <Route path=\"/forgot-password\" component={ForgotPassword} />\n        </Switch>\n      </AuthProvider>\n    </Router>\n    </div>\n\n  )\n}\n\n// const App = () => {\n//   \n//   // const [isSignedIn, setIsSignedIn] = useState(false)\n//   \n\n//   // if (isSignedIn === 'signout') {\n//   //   setIsSignedIn(false)\n//   // } else if (isSignedIn === 'signin') {\n//   //   setIsSignedIn(true)\n//   // }\n\n//   const onRouteChange = (route) => {\n//  if (route === 'Home') {\n//       setDisplayPage(<Home />)\n//     } else if (route === 'About') {\n//       setDisplayPage(<About />)\n//     } else if (route === 'TemplatesPage') {\n//       setDisplayPage(<TemplatesPage />)\n//     }\n//     setRoute({ route: route })\n//   }\n\n//   // if (route === 'signout') {\n//   //   setRoute({ isSignedIn: false })\n//   // } else if (route === 'signin') {\n//   //   setRoute({ isSignedIn: true })\n//   // } else\n\n//   return (\n//     <>\n//       <div className=\"Frontscr\">\n//         <Navigation  onRouteChange={onRouteChange} />\n//         {displayPage}\n//       </div>\n//     </>\n//   )\n// }\n\nexport default App\n\n// isSignedIn={setIsSignedIn}","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Signup.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Login.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/PrivateRoute.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/ForgotPassword.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/UpdateProfile.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/contexts/AuthContext.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Navigation.js",["93","94"],"import React, { useState }  from 'react'\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport { Navbar, Nav, Container } from 'react-bootstrap'\nimport pic from './Images/logogrey.png'\n// import pic from './Logo1sn.png'\n\n\nconst Navigation = () => {\n\nconst [error, setError] = useState(\"\")\nconst { currentUser, logout } = useAuth()\nconst history = useHistory()\n\nasync function handleLogout() {\n  setError(\"\")\n\n  try {\n    await logout()\n    history.push(\"/login\")\n  } catch {\n    setError(\"Failed to log out\")\n  }\n}\n\n  //Navbar\n\n  return (\n    \n\n<Navbar style={{ backgroundColor: 'black' }} variant=\"dark\" expand=\"sm\" sticky=\"top\" className=\"justify-content-end\">\n        <Container id=\"nav-wrap\">\n        <Navbar.Brand href=\"/Login\">\n          {/* <img src={pic} alt={''} width={80} height={80} /> */}\n          <img \n          src={pic} \n          alt={''} \n          height={'30%'} \n          width={'30%'} \n          className=\"d-inline-block align-top\"/>\n        </Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav>\n          <Nav.Item id=\"nav-item\"><Link to=\"/About\" style={{ color: 'white' }}>About</Link></Nav.Item>\n          <Nav.Item id=\"nav-item\"><Link to=\"/Home\" style={{ color: 'white' }}>Editor</Link></Nav.Item>\n          <Nav.Item id=\"nav-item\"><Link to=\"/MyAccount\" style={{ color: 'white' }}>Profile</Link></Nav.Item>\n          <Nav.Item id=\"nav-item\" onClick={handleLogout}><Link style={{ color: 'white' }} >Logout</Link></Nav.Item>\n\n          </Nav>\n        </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n   \n  )\n}\n\nexport default Navigation","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/firebase.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":8,"column":8,"nodeType":"101","messageId":"102","endLine":8,"endColumn":12},{"ruleId":"99","severity":1,"message":"103","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":16},{"ruleId":"99","severity":1,"message":"104","line":43,"column":18,"nodeType":"101","messageId":"102","endLine":43,"endColumn":27},{"ruleId":"99","severity":1,"message":"105","line":46,"column":10,"nodeType":"101","messageId":"102","endLine":46,"endColumn":21},{"ruleId":"99","severity":1,"message":"106","line":46,"column":23,"nodeType":"101","messageId":"102","endLine":46,"endColumn":37},{"ruleId":"107","severity":1,"message":"108","line":56,"column":6,"nodeType":"109","endLine":56,"endColumn":24,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":9,"column":7,"nodeType":"113","endLine":15,"endColumn":9},{"ruleId":null,"fatal":true,"severity":2,"message":"114","line":110,"column":2},{"ruleId":"99","severity":1,"message":"115","line":18,"column":3,"nodeType":"101","messageId":"102","endLine":18,"endColumn":18},{"ruleId":"107","severity":1,"message":"116","line":50,"column":6,"nodeType":"109","endLine":50,"endColumn":26,"suggestions":"117"},{"ruleId":"99","severity":1,"message":"118","line":8,"column":11,"nodeType":"101","messageId":"102","endLine":8,"endColumn":17},{"ruleId":"99","severity":1,"message":"119","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"120","line":4,"column":10,"nodeType":"101","messageId":"102","endLine":4,"endColumn":19},{"ruleId":"99","severity":1,"message":"121","line":11,"column":8,"nodeType":"101","messageId":"102","endLine":11,"endColumn":13},{"ruleId":"99","severity":1,"message":"122","line":12,"column":9,"nodeType":"101","messageId":"102","endLine":12,"endColumn":20},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'vid2' is defined but never used.","Identifier","unusedVar","'songList' is defined but never used.","'setCanvas' is assigned a value but never used.","'currentSong' is assigned a value but never used.","'setCurrentSong' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tick'. Either include it or remove the dependency array.","ArrayExpression",["125"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 108 | \u001b[39m          \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mCard\u001b[39m\u001b[33m.\u001b[39m\u001b[33mText\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 109 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mCard\u001b[39m\u001b[33m.\u001b[39m\u001b[33mBody\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 110 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m     | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 111 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33mPlaylist\u001b[39m uploadedFile \u001b[33m=\u001b[39m {uploadedFile} \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 112 | \u001b[39m\u001b[33m===\u001b[39m\u001b[33m===\u001b[39m\u001b[33m=\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 113 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33mPlaylist\u001b[39m uploadedFile\u001b[33m=\u001b[39m{uploadedFile} \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m","'frequency_array' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSongList'. Either include it or remove the dependency array.",["126"],"'styles' is assigned a value but never used.","'useState' is defined but never used.","'Container' is defined but never used.","'error' is assigned a value but never used.","'currentUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [sliderM, sliderN, tick]",{"range":"131","text":"132"},"Update the dependencies array to be: [getSongList, props.uploadedFile]",{"range":"133","text":"134"},[1699,1717],"[sliderM, sliderN, tick]",[1384,1404],"[getSongList, props.uploadedFile]"]