[{"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/index.js":"1","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/App.js":"2","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/TemplatesPage.js":"3","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/About.js":"4","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Home.js":"5","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Navbars/Navigation.js":"6","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/UploadBackground/backgroundUpload.js":"7","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Displayer.js":"8","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/IconInteractions/IconUpload.js":"9","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/IconInteractions/InsertIcon.js":"10","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/UploadAudio/AudioUpload.js":"11","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Login.js":"12"},{"size":389,"mtime":1611935111113,"results":"13","hashOfConfig":"14"},{"size":1301,"mtime":1612643947106,"results":"15","hashOfConfig":"14"},{"size":196,"mtime":1611168617430,"results":"16","hashOfConfig":"14"},{"size":1207,"mtime":1611935111111,"results":"17","hashOfConfig":"14"},{"size":2369,"mtime":1612552648608,"results":"18","hashOfConfig":"14"},{"size":2403,"mtime":1612643947107,"results":"19","hashOfConfig":"14"},{"size":2744,"mtime":1612122303180,"results":"20","hashOfConfig":"14"},{"size":5921,"mtime":1612649854724,"results":"21","hashOfConfig":"14"},{"size":2697,"mtime":1612122303176,"results":"22","hashOfConfig":"14"},{"size":376,"mtime":1612122303176,"results":"23","hashOfConfig":"14"},{"size":2699,"mtime":1612643947108,"results":"24","hashOfConfig":"14"},{"size":2302,"mtime":1612643947107,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1qwo52n",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/index.js",[],["57","58"],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/App.js",["59"],"import React, { useState } from 'react'\nimport './App.css'\nimport Navigation from './Components/Navbars/Navigation'\nimport About from './Components/About'\nimport TemplatesPage from './Components/TemplatesPage'\nimport Home from './Components/Home'\nimport Login from './Components/Login'\n\nconst App = () => {\n  const [route, setRoute] = useState('signout')\n  const [isSignedIn, setIsSignedIn] = useState(false)\n  const [displayPage, setDisplayPage] = useState(Home)\n\n  if (isSignedIn === 'signout') {\n    setIsSignedIn(false)\n  } else if (isSignedIn === 'signin') {\n    setIsSignedIn(true)\n  }\n\n  const onRouteChange = (route) => {\n    if (route === 'signout') {\n      setRoute({ isSignedIn: false })\n    } else if (route === 'signin') {\n      setRoute({ isSignedIn: true })\n    } else if (route === 'Home') {\n      setDisplayPage(<Home />)\n    } else if (route === 'About') {\n      setDisplayPage(<About />)\n    } else if (route === 'TemplatesPage') {\n      setDisplayPage(<TemplatesPage />)\n    } else if (route === 'Login') {\n      setDisplayPage(<Login />)\n    }\n    setRoute({ route: route })\n  }\n\n  return (\n    <>\n      <div className=\"Frontscr\">\n        <Navigation isSignedIn={setIsSignedIn} onRouteChange={onRouteChange} />\n        {displayPage}\n      </div>\n    </>\n  )\n}\n\nexport default App\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/TemplatesPage.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/About.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Home.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Navbars/Navigation.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/UploadBackground/backgroundUpload.js",["60","61"],"import React, { useState } from 'react'\nimport axios from 'axios'\nimport { Card } from 'react-bootstrap'\n\nconst BackgroundUpload = () => {\n  //Need to use a hook to set text in the label to the file namespace\n  const [file, setFile] = useState('')\n  const [filename, setFilename] = useState('Choose File')\n  const [uploadedFile, setUploadedFile] = useState({})\n\n  const onChange = (e) => {\n    //HTML file uploads come as an array so we want the index of the first file\n    setFile(e.target.files[0])\n    setFilename(e.target.files[0].name)\n  }\n\n  const onSubmit = async (e) => {\n    //used to prevent submitting by accident by preventing normal submitting\n    e.preventDefault()\n    const formData = new FormData()\n    formData.append('file', file)\n\n    try {\n      //Need to connect to the server the endpoint is media\n      const res = await axios.post(\n        'http://localhost:5000/upload/media',\n        formData,\n        {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        },\n      )\n      const { fileName, filePath } = res.data\n      if (res.status === 200) {\n        console.log('Was uploaded successfully ' + res.status)\n      }\n      setUploadedFile({ fileName, filePath })\n    } catch (err) {\n      if (err.response.status === 500) {\n        console.error('There is a problem with the server ' + err.message)\n      } else {\n        //This message is from the server if no file is uploaded\n        console.error(err.response.data.msg)\n      }\n    }\n  }\n\n  return (\n    //The fragment allows to group children without creating extra nodes\n    <Card style={{ width: '18rem', margin: '24px' }}>\n      <Card.Body>\n        <Card.Title>Upload Background</Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          Select a background to upload\n        </Card.Subtitle>\n        <Card.Text>\n          <>\n            <div className=\"mb-2\">\n              <form onSubmit={onSubmit}>\n                <div className=\"input-group mb-3\">\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    id=\"inputGroupFile02\"\n                    accept=\"image/gif, image/jpeg, image/jpg\"\n                    onChange={onChange}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Upload Background\"\n                    className=\"btn btn-primary btn-block\"\n                  />\n\n                  <label\n                    className=\"id=inputGroupFile02\"\n                    htmlFor=\"inputGroupFile02\"\n                  ></label>\n                </div>\n              </form>\n            </div>\n          </>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default BackgroundUpload\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Displayer.js",["62","63","64"],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/IconInteractions/IconUpload.js",["65","66"],"import React, { useState, Fragment } from 'react'\nimport axios from 'axios'\nimport { Card } from 'react-bootstrap'\n\nconst IconUpload = () => {\n  //Need to use a hook to set text in the label to the file namespace\n  const [file, setFile] = useState('')\n  const [filename, setFilename] = useState('Choose File')\n  const [uploadedFile, setUploadedFile] = useState({})\n\n  const onChange = (e) => {\n    //HTML file uploads come as an array so we want the index of the first file\n    setFile(e.target.files[0])\n    setFilename(e.target.files[0].name)\n  }\n\n  const onSubmit = async (e) => {\n    //used to prevent submitting by accident by preventing normal submitting\n    e.preventDefault()\n    const formData = new FormData()\n    formData.append('file', file)\n    console.log(formData)\n    try {\n      //Need to connect to the server this is the endpoint\n      const res = await axios.post(\n        'http://localhost:5000/upload/icon',\n        formData,\n        {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        },\n      )\n      const { fileName, filePath } = res.data\n      if (res.status === 200) {\n        console.log('Icon was uploaded successfully ' + res.status)\n      }\n      setUploadedFile({ fileName, filePath })\n    } catch (err) {\n      if (err.response.status === 500) {\n        console.error('There is a problem with the server ' + err.message)\n      } else {\n        //This message is from the server if no file is uploaded\n        console.error(err.response.data.msg)\n      }\n    }\n  }\n\n  return (\n    <Card style={{ width: '18rem', margin: '24px' }}>\n      <Card.Body>\n        <Card.Title>Upload Icon</Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          Select an Icon to upload\n        </Card.Subtitle>\n        <Card.Text>\n          <>\n            <div className=\"mb-2\">\n              <form onSubmit={onSubmit}>\n                <div className=\"input-group mb-3\">\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    id=\"inputGroupFile02\"\n                    accept=\"image/gif, image/png, image/jpeg, image/jpg\"\n                    onChange={onChange}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Upload Background\"\n                    className=\"btn btn-primary btn-block\"\n                  />\n\n                  <label\n                    className=\"id=inputGroupFile02\"\n                    htmlFor=\"inputGroupFile02\"\n                  ></label>\n                </div>\n              </form>\n            </div>\n          </>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default IconUpload\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/IconInteractions/InsertIcon.js",["67","68","69","70","71"],"import React from 'react'\nimport { Container, Row, Col, Image } from 'react-bootstrap'\nimport icon from '../Images/Daco.png'\n\n//Icon input\nconst InsertIcon = () => {\n  return (\n    <div className=\"iconWrapper\">\n      <img\n        style={{\n          width: '20%',\n          height: '20%',\n        }}\n        src={`${icon}`}\n      />\n    </div>\n  )\n}\n\nexport default InsertIcon\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/UploadAudio/AudioUpload.js",["72","73"],"import React, { useState } from 'react'\nimport axios from 'axios'\nimport { Card } from 'react-bootstrap'\n\nconst AudioUpload = () => {\n  //Need to use a hook to set text in the label to the file namespace\n  const [file, setFile] = useState('')\n  const [filename, setFilename] = useState('Choose File')\n  const [uploadedFile, setUploadedFile] = useState({})\n\n  const onChange = (e) => {\n    //HTML file uploads come as an array so we want the index of the first file\n    setFile(e.target.files[0])\n    setFilename(e.target.files[0].name)\n  }\n\n  const onSubmit = async (e) => {\n    // e.preventDefault() used to prevent submitting by accident by preventing normal submitting\n    e.preventDefault()\n    const formData = new FormData()\n    formData.append('file', file)\n\n    try {\n      //Need to connect to the server the endpoint is media\n      const res = await axios.post(\n        'http://localhost:5000/upload/media',\n        formData,\n        {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        },\n      )\n      const { fileName, filePath } = res.data\n      console.log(res.headers)\n      if (res.status === 200) {\n        console.log('Was uploaded successfully ' + res.status)\n      }\n      setUploadedFile({ fileName, filePath })\n    } catch (err) {\n      if (err.response.status === 500) {\n        console.error('There is a problem with the server ' + err.message)\n      } else {\n        //This message is from the server if no file is uploaded\n        console.error(err.response.data.msg)\n      }\n    }\n  }\n\n  return (\n    <Card style={{ width: '18rem', margin: '20px' }}>\n      <Card.Body>\n        <Card.Title>Audio Upload</Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          Select audio to upload\n        </Card.Subtitle>\n        <Card.Text>\n          <>\n            <div className=\"mb-2\">\n              <form onSubmit={onSubmit}>\n                <div className=\"input-group mb-3\">\n                  <input\n                    type=\"file\"\n                    className=\"form-control mb-5\"\n                    id=\"inputGroupFile02\"\n                    accept=\"audio/wav, audio/mp3, audio/mpeg\"\n                    onChange={onChange}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"UploadAudio\"\n                    className=\"btn btn-primary btn-block\"\n                  />\n\n                  <label\n                    className=\"id=inputGroupFile02\"\n                    htmlFor=\"inputGroupFile02\"\n                  ></label>\n                </div>\n              </form>\n            </div>\n          </>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default AudioUpload\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Login.js",["74","75"],"import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\nconst Login = () => {\n  const [loginEmail, setLoginEmail] = useState(\"\")\n  const [loginPassword, setLoginPassword] = useState(\"\")\n  // const [error, setError] = useState(\"\")\n  const [route, setRoute] = useState('Login')\n\n  function onEmailChange (event) {\n    setLoginEmail(event.target.value);\n  }\n\n  function onPasswordChange(event) {\n    setLoginPassword(event.target.value);\n  }\n\n  function onRouteChange(route) {\n    setRoute(route);\n  }\n\n  function onSubmitLogin () {\n    fetch('http://localhost:3000/signin', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: loginEmail,\n        password: loginPassword\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          this.loadUser(user)\n          this.onRouteChange('home');\n        }\n      })\n  }\n\n  return (\n\n    // <Modal.Dialog centered>\n      <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend >Sign In</legend>\n              <div className=\"mt3\">\n                <label htmlFor=\"email-address\">Email</label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onChange={onEmailChange}\n                />\n              </div>\n              <div className=\"mv3\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={onPasswordChange}\n                />\n              </div>\n              <Button\n              onClick={onSubmitLogin}\n              >Submit</Button>\n              <div className=\"lh-copy mt3\">\n              <p  onClick={onRouteChange('Register')} className=\"f6 link dim black db pointer\">Register</p>\n            </div>\n            </fieldset>\n\n    // </Modal.Dialog>\n\n  )\n}\n\nexport default Login\n",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":10,"column":10,"nodeType":"82","messageId":"83","endLine":10,"endColumn":15},{"ruleId":"80","severity":1,"message":"84","line":8,"column":10,"nodeType":"82","messageId":"83","endLine":8,"endColumn":18},{"ruleId":"80","severity":1,"message":"85","line":9,"column":10,"nodeType":"82","messageId":"83","endLine":9,"endColumn":22},{"ruleId":"80","severity":1,"message":"86","line":42,"column":18,"nodeType":"82","messageId":"83","endLine":42,"endColumn":27},{"ruleId":"80","severity":1,"message":"87","line":45,"column":10,"nodeType":"82","messageId":"83","endLine":45,"endColumn":21},{"ruleId":"80","severity":1,"message":"88","line":45,"column":23,"nodeType":"82","messageId":"83","endLine":45,"endColumn":37},{"ruleId":"80","severity":1,"message":"84","line":8,"column":10,"nodeType":"82","messageId":"83","endLine":8,"endColumn":18},{"ruleId":"80","severity":1,"message":"85","line":9,"column":10,"nodeType":"82","messageId":"83","endLine":9,"endColumn":22},{"ruleId":"80","severity":1,"message":"89","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":19},{"ruleId":"80","severity":1,"message":"90","line":2,"column":21,"nodeType":"82","messageId":"83","endLine":2,"endColumn":24},{"ruleId":"80","severity":1,"message":"91","line":2,"column":26,"nodeType":"82","messageId":"83","endLine":2,"endColumn":29},{"ruleId":"80","severity":1,"message":"92","line":2,"column":31,"nodeType":"82","messageId":"83","endLine":2,"endColumn":36},{"ruleId":"93","severity":1,"message":"94","line":9,"column":7,"nodeType":"95","endLine":15,"endColumn":9},{"ruleId":"80","severity":1,"message":"84","line":8,"column":10,"nodeType":"82","messageId":"83","endLine":8,"endColumn":18},{"ruleId":"80","severity":1,"message":"85","line":9,"column":10,"nodeType":"82","messageId":"83","endLine":9,"endColumn":22},{"ruleId":"80","severity":1,"message":"96","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":13},{"ruleId":"80","severity":1,"message":"81","line":9,"column":10,"nodeType":"82","messageId":"83","endLine":9,"endColumn":15},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'route' is assigned a value but never used.","Identifier","unusedVar","'filename' is assigned a value but never used.","'uploadedFile' is assigned a value but never used.","'setCanvas' is assigned a value but never used.","'currentSong' is assigned a value but never used.","'setCurrentSong' is assigned a value but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Image' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Modal' is defined but never used.","no-global-assign","no-unsafe-negation"]