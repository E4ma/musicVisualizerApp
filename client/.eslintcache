[{"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/index.js":"1","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/App.js":"2","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/TemplatesPage.js":"3","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/About.js":"4","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Navbars/Navigation.js":"5","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Signin/Login.js":"6","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Home.js":"7","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Displayer.js":"8","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/UploadAudio/AudioImport.js":"9"},{"size":338,"mtime":1611249728917,"results":"10","hashOfConfig":"11"},{"size":1389,"mtime":1611168617427,"results":"12","hashOfConfig":"11"},{"size":196,"mtime":1611168617430,"results":"13","hashOfConfig":"11"},{"size":414,"mtime":1611168617427,"results":"14","hashOfConfig":"11"},{"size":2368,"mtime":1611182127085,"results":"15","hashOfConfig":"11"},{"size":624,"mtime":1611268035648,"results":"16","hashOfConfig":"11"},{"size":1640,"mtime":1611269133455,"results":"17","hashOfConfig":"11"},{"size":4715,"mtime":1611182100623,"results":"18","hashOfConfig":"11"},{"size":3007,"mtime":1611287553888,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qwo52n",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/index.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/App.js",["41"],"import React, { useState } from 'react';\nimport './App.css';\nimport Navigation from './Components/Navbars/Navigation';\nimport About from './Components/About';\nimport TemplatesPage from './Components/TemplatesPage';\nimport Home from './Components/Home';\nimport Login from './Components/Signin/Login';\n\nconst App = () => {\n  const [route, setRoute] = useState('signout');\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [displayPage, setDisplayPage] = useState(Home);\n\n  if (isSignedIn === 'signout') {\n    setIsSignedIn(false)\n  } else if (isSignedIn === 'signin') {\n    setIsSignedIn(true)\n  }\n\n  const onRouteChange = (route) => {\n\n    if (route === 'signout') {\n      setRoute({ isSignedIn: false })\n\n    } else if (route === 'signin') {\n      setRoute({ isSignedIn: true })\n    } else if (route === 'Home') {\n      setDisplayPage(<Home onRouteChange={onRouteChange} />)\n    } else if (route === 'About') {\n      setDisplayPage(<About onRouteChange={onRouteChange} />)\n    } else if (route === \"TemplatesPage\") {\n      setDisplayPage(<TemplatesPage />)\n    } else if (route === 'Login') {\n      setDisplayPage(<Login onRouteChange={onRouteChange} />)\n    }\n    setRoute({ route: route })\n  };\n\n\n  return (\n    <>\n      <Navigation isSignedIn={setIsSignedIn} onRouteChange={onRouteChange} />\n     {displayPage}\n      {/* <Footer /> */}\n    </>\n  );\n}\n\n\nexport default App;\n",["42","43"],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/TemplatesPage.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/About.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Navbars/Navigation.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Signin/Login.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Home.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Displayer.js",["44","45","46","47"],"import React, { createRef, useState, useEffect } from 'react'\nimport songFile from './audio/ImperialMarch60.wav'\nimport songFile2 from './audio/Rodriguez - Inner City Blues.mp3'\nimport songFile3 from './audio/Lucky Dube-Too-Many-People.wav.mp3'\n\n\nlet songs = [\n  {\n    name: 'ImperialMarch60',\n    songFile: songFile,\n    color: 'black',\n    fontColor: 'black',\n  },\n  {\n    name: 'Rodriguez - Inner City Blue',\n    songFile: songFile2,\n    color: 'red',\n    fontColor: 'black',\n  },\n  {\n    name: 'Lucky Dube-Too-Many-People',\n    songFile: songFile3,\n    color: 'pink',\n    fontColor: 'darkpurple',\n  },\n]\n\nlet rafId\nlet analyser\n// Changing Variables\nlet ctx, x_end, y_end, bar_height\n\n// constants\nconst width = window.innerWidth * (3 / 4) //\nconst height = window.innerHeight\nconst bars = 999 //  max 1030 - leave it in 555\nconst bar_width = 2 //  good in 1\nconst radius = 0 // innercircle\nconst center_x = width / 2 - window.innerWidth / 16\nconst center_y = height / 2\nlet audioSource = new Audio(songs[0].songFile)\n\nconst Displayer = () => {\n  const [audio, setAudio] = useState(audioSource)\n  const [songList, setSongList] = useState(songs)\n  const [canvas, setCanvas] = useState(createRef())\n  //\n  const [audioContext, setAudioContext] = useState()\n  const [isPaused, setIsPaused] = useState(true)\n  //\n  const [currentSong, setCurrentSong] = useState(0)\n  const [frequency_array, setFrequencyArray] = useState()\n  const [songName, setSongName] = useState(songs[0].name)\n  const [textColor, setTextColor] = useState(songs[0].textColor)\n\n  function animationLooper(canvas) {\n    canvas.width = width\n    canvas.height = height\n\n    ctx = canvas.getContext('2d')\n\n    for (var i = 0; i < bars; i++) {\n      //divide a circle into equal part\n      const rads = (Math.PI * 2) / bars\n\n      // Math is magical - you can make lots of visualizer\n      bar_height = frequency_array[i] * 1.5\n\n      const x = center_x + Math.cos(rads * i) * radius\n      const y = center_y + Math.sin(rads * i) * radius\n      x_end = center_x + Math.cos(rads * i) * (radius + bar_height)\n      y_end = center_y + Math.sin(rads * i) * (radius + bar_height)\n\n      //draw a bar\n      drawBar(x, y, x_end, y_end, frequency_array[i], ctx, canvas)\n    }\n  }\n\n  function drawBar(x1 = 0, y1 = 0, x2 = 0, y2 = 0, frequency, ctx, canvas) {\n    const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height)\n    // gradient.addColorStop(0, \"rgba(35, 7, 77, 1)\");\n    // gradient.addColorStop(1, \"rgba(204, 83, 51, 1)\");\n    gradient.addColorStop(0, 'rgba(30, 17, 18, 11)')\n    gradient.addColorStop(1, 'rgba(254, 283, 151, 121)')\n    ctx.fillStyle = gradient\n\n    const lineColor = 'rgb(' + frequency + ', ' + frequency + ', ' + 205 + ')'\n    ctx.strokeStyle = lineColor\n    ctx.lineWidth = bar_width\n    ctx.beginPath()\n    ctx.moveTo(x1, y1)\n    ctx.lineTo(x2, y2)\n    ctx.stroke()\n  }\n\n  useEffect(() => {\n    let context = new (window.AudioContext || window.webkitAudioContext)()\n    let source = context.createMediaElementSource(audio)\n\n    analyser = context.createAnalyser()\n    source.connect(analyser)\n    analyser.connect(context.destination)\n    let frequencyArray = new Uint8Array(analyser.frequencyBinCount)\n    setFrequencyArray(frequencyArray)\n    //\n    setAudioContext(context)\n    //\n  }, [audio])\n\n  const togglePlay = () => {\n    // const { audio } = this;\n    if (audio.paused) {\n      audioContext.resume()\n      audio.play()\n      setIsPaused(false)\n      rafId = requestAnimationFrame(tick)\n    } else {\n      audio.pause()\n      setIsPaused(true)\n      cancelAnimationFrame(rafId)\n    }\n  }\n\n  const changeSong = (songNumber) => {\n    console.log('No8', songNumber)\n    let { name, songFile, color, fontColor } = songList[songNumber]\n    audio.src = songFile\n    if (!isPaused) {\n      audio.play()\n    }\n    setCurrentSong(songNumber)\n    setSongName(name)\n    // setBackgroundColor(color)\n    setTextColor(fontColor)\n  }\n\n  const tick = () => {\n    animationLooper(canvas.current)\n    analyser.getByteTimeDomainData(frequency_array)\n    rafId = requestAnimationFrame(tick)\n  }\n\n  return (\n    <div className=\"audioControl\">\n      <button\n        onClick={togglePlay}\n        style={\n          isPaused\n            ? { backgroundColor: 'yellow' }\n            : { backgroundColor: 'green' }\n        }\n      >\n        {isPaused ? 'Paused' : 'PLAYING !!!'}\n      </button>\n\n      <button\n        onClick={() => {\n          changeSong((currentSong + 1) % 3)\n        }}\n      >\n        Change Song my Friend\n      </button>\n      <canvas ref={canvas} />\n      {/* <div className=\"songName\"> */}\n        <h3 style={{ color: textColor }}>{songName}</h3>\n      {/* </div> */}\n    </div>\n  )\n}\n\n\nexport default Displayer\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/UploadAudio/AudioImport.js",["48","49"],{"ruleId":"50","severity":1,"message":"51","line":10,"column":10,"nodeType":"52","messageId":"53","endLine":10,"endColumn":15},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"50","severity":1,"message":"58","line":44,"column":17,"nodeType":"52","messageId":"53","endLine":44,"endColumn":25},{"ruleId":"50","severity":1,"message":"59","line":45,"column":20,"nodeType":"52","messageId":"53","endLine":45,"endColumn":31},{"ruleId":"50","severity":1,"message":"60","line":46,"column":18,"nodeType":"52","messageId":"53","endLine":46,"endColumn":27},{"ruleId":"50","severity":1,"message":"61","line":126,"column":27,"nodeType":"52","messageId":"53","endLine":126,"endColumn":32},{"ruleId":"50","severity":1,"message":"62","line":8,"column":10,"nodeType":"52","messageId":"53","endLine":8,"endColumn":18},{"ruleId":"50","severity":1,"message":"63","line":9,"column":10,"nodeType":"52","messageId":"53","endLine":9,"endColumn":22},"no-unused-vars","'route' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["64"],"no-negated-in-lhs",["65"],"'setAudio' is assigned a value but never used.","'setSongList' is assigned a value but never used.","'setCanvas' is assigned a value but never used.","'color' is assigned a value but never used.","'filename' is assigned a value but never used.","'uploadedFile' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]