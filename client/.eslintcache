[{"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/index.js":"1","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/App.js":"2","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Home.js":"3","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Signin/Login.js":"4","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/TemplatesPage.js":"5","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/About.js":"6","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Navbars/Navigation.js":"7","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Displayer.js":"8","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/UploadAudio/AudioImport.js":"9","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/BackgroundImport.js":"10"},{"size":341,"mtime":1611544482841,"results":"11","hashOfConfig":"12"},{"size":1392,"mtime":1611347097714,"results":"13","hashOfConfig":"12"},{"size":1919,"mtime":1611544482839,"results":"14","hashOfConfig":"12"},{"size":2005,"mtime":1611544482840,"results":"15","hashOfConfig":"12"},{"size":196,"mtime":1611168617430,"results":"16","hashOfConfig":"12"},{"size":414,"mtime":1611168617427,"results":"17","hashOfConfig":"12"},{"size":2363,"mtime":1611423667923,"results":"18","hashOfConfig":"12"},{"size":4887,"mtime":1611423705253,"results":"19","hashOfConfig":"12"},{"size":2969,"mtime":1611544482841,"results":"20","hashOfConfig":"12"},{"size":2994,"mtime":1611544482836,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qwo52n",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/index.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/App.js",["47"],"import React, { useState } from 'react';\n// import './App.css';\nimport Navigation from './Components/Navbars/Navigation';\nimport About from './Components/About';\nimport TemplatesPage from './Components/TemplatesPage';\nimport Home from './Components/Home';\nimport Login from './Components/Signin/Login';\n\nconst App = () => {\n  const [route, setRoute] = useState('signout');\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [displayPage, setDisplayPage] = useState(Home);\n\n  if (isSignedIn === 'signout') {\n    setIsSignedIn(false)\n  } else if (isSignedIn === 'signin') {\n    setIsSignedIn(true)\n  }\n\n  const onRouteChange = (route) => {\n\n    if (route === 'signout') {\n      setRoute({ isSignedIn: false })\n\n    } else if (route === 'signin') {\n      setRoute({ isSignedIn: true })\n    } else if (route === 'Home') {\n      setDisplayPage(<Home onRouteChange={onRouteChange} />)\n    } else if (route === 'About') {\n      setDisplayPage(<About onRouteChange={onRouteChange} />)\n    } else if (route === \"TemplatesPage\") {\n      setDisplayPage(<TemplatesPage />)\n    } else if (route === 'Login') {\n      setDisplayPage(<Login onRouteChange={onRouteChange} />)\n    }\n    setRoute({ route: route })\n  };\n\n\n  return (\n    <>\n      <Navigation isSignedIn={setIsSignedIn} onRouteChange={onRouteChange} />\n     {displayPage}\n      {/* <Footer /> */}\n    </>\n  );\n}\n\n\nexport default App;\n",["48","49"],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Home.js",["50"],"import React from 'react'\nimport { Container, Card, Row, Col, Nav, Button, ButtonGroup } from 'react-bootstrap'\nimport Tab from 'react-bootstrap/Tab'\nimport BackgroundImport from '../BackgroundImport'\nimport Displayer from './Displayer'\nimport AudioImport from './UploadAudio/AudioImport'\n\nconst Home = () => {\n  return (\n    <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n      <Row>\n\n        <Col sm={3}>\n          <Nav variant=\"pills\" className=\"flex-column\">\n            <br />\n\n            <Nav.Item>\n              <Nav.Link eventKey=\"uploadAudio\">Audio\n                {/* <Button size=\"lg\" block>Audio</Button> */}\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"uploadBackground\">Background</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"Icon\">Icon </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"text\">Text</Nav.Link>\n            </Nav.Item>\n            <ButtonGroup aria-label=\"Basic example\">\n              <Button variant=\"secondary\">Export</Button>\n              <Button variant=\"secondary\">Save</Button>\n            </ButtonGroup>\n          </Nav>\n        </Col>\n\n        {/* <Col sm={9}> */}\n        <Tab.Content>\n          <Tab.Pane eventKey=\"uploadAudio\">\n            <AudioImport />\n          </Tab.Pane>\n          <Tab.Pane eventKey=\"uploadBackground\">\n            <BackgroundImport />\n          </Tab.Pane>\n        </Tab.Content>\n        {/* </Col> */}\n\n        {/* card for displaying the visualizer on the right panel*/}\n\n        <Col sm={3}>\n          <br />\n          <Card style={{ width: '30rem' }}>\n            <Card.Body>\n              <Card.Title>Visualizer</Card.Title>\n              <Displayer />\n            </Card.Body>\n          </Card>\n\n        </Col>\n\n\n      </Row>\n    </Tab.Container >\n\n\n  )\n}\n\nexport default Home\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Signin/Login.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/TemplatesPage.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/About.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Navbars/Navigation.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Displayer.js",["51","52","53","54"],"import React, { createRef, useState, useEffect } from 'react'\nimport songFile from './audio/ImperialMarch60.wav'\nimport songFile2 from './audio/Rodriguez - Inner City Blues.mp3'\nimport songFile3 from './audio/Lucky Dube-Too-Many-People.wav.mp3'\n\n\nlet songs = [\n  {\n    name: 'ImperialMarch60',\n    songFile: songFile,\n    color: 'black',\n    fontColor: 'black',\n  },\n  {\n    name: 'Rodriguez - Inner City Blue',\n    songFile: songFile2,\n    color: 'red',\n    fontColor: 'black',\n  },\n  {\n    name: 'Lucky Dube-Too-Many-People',\n    songFile: songFile3,\n    color: 'pink',\n    fontColor: 'darkpurple',\n  },\n]\n\nlet rafId\nlet analyser\n// Changing Variables\nlet ctx, x_end, y_end, bar_height\n\n// constants\nconst width = window.innerWidth * (1 / 2)  // it was (3/4)\nconst height = window.innerHeight - 101\n// width 1280 and height 446\n\n\nconsole.log('default sizes: ', window.innerWidth, '/', window.innerHeight)\nconsole.log('new sizes: ', width, \"/\", height)\n\nconst bars = 999 //  max 1030 - leave it in 555\nconst bar_width = 2 //  good in 1\nconst radius = 0 // innercircle\nconst center_x = width / 2 - window.innerWidth / 16\nconst center_y = height / 2\nlet audioSource = new Audio(songs[0].songFile)\n\nconst Displayer = () => {\n  const [audio, setAudio] = useState(audioSource)\n  const [songList, setSongList] = useState(songs)\n  const [canvas, setCanvas] = useState(createRef())\n  //\n  const [audioContext, setAudioContext] = useState()\n  const [isPaused, setIsPaused] = useState(true)\n  //\n  const [currentSong, setCurrentSong] = useState(0)\n  const [frequency_array, setFrequencyArray] = useState()\n  const [songName, setSongName] = useState(songs[0].name)\n  const [textColor, setTextColor] = useState(songs[0].textColor)\n\n  function animationLooper(canvas) {\n    canvas.width = width\n    canvas.height = height\n\n    ctx = canvas.getContext('2d')\n\n    for (var i = 0; i < bars; i++) {\n      //divide a circle into equal part\n      const rads = (Math.PI * 2) / bars\n\n      // Math is magical - you can make lots of visualizer\n      bar_height = frequency_array[i] * 1.5\n\n      const x = center_x + Math.cos(rads * i) * radius\n      const y = center_y + Math.sin(rads * i) * radius\n      x_end = center_x + Math.cos(rads * i) * (radius + bar_height)\n      y_end = center_y + Math.sin(rads * i) * (radius + bar_height)\n\n      //draw a bar\n      drawBar(x, y, x_end, y_end, frequency_array[i], ctx, canvas)\n    }\n  }\n\n  function drawBar(x1 = 0, y1 = 0, x2 = 0, y2 = 0, frequency, ctx, canvas) {\n    const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height)\n    // gradient.addColorStop(0, \"rgba(35, 7, 77, 1)\");\n    // gradient.addColorStop(1, \"rgba(204, 83, 51, 1)\");\n    gradient.addColorStop(0, 'rgba(30, 17, 18, 11)')\n    gradient.addColorStop(1, 'rgba(254, 283, 151, 121)')\n    ctx.fillStyle = gradient\n\n    const lineColor = 'rgb(' + frequency + ', ' + frequency + ', ' + 205 + ')'\n    ctx.strokeStyle = lineColor\n    ctx.lineWidth = bar_width\n    ctx.beginPath()\n    ctx.moveTo(x1, y1)\n    ctx.lineTo(x2, y2)\n    ctx.stroke()\n  }\n\n  useEffect(() => {\n    let context = new (window.AudioContext || window.webkitAudioContext)()\n    let source = context.createMediaElementSource(audio)\n\n    analyser = context.createAnalyser()\n    source.connect(analyser)\n    analyser.connect(context.destination)\n    let frequencyArray = new Uint8Array(analyser.frequencyBinCount)\n    setFrequencyArray(frequencyArray)\n    //\n    setAudioContext(context)\n    //\n  }, [audio])\n\n  const togglePlay = () => {\n    // const { audio } = this;\n    if (audio.paused) {\n      audioContext.resume()\n      audio.play()\n      setIsPaused(false)\n      rafId = requestAnimationFrame(tick)\n    } else {\n      audio.pause()\n      setIsPaused(true)\n      cancelAnimationFrame(rafId)\n    }\n  }\n\n  const changeSong = (songNumber) => {\n    console.log('No8', songNumber)\n    let { name, songFile, color, fontColor } = songList[songNumber]\n    audio.src = songFile\n    if (!isPaused) {\n      audio.play()\n    }\n    setCurrentSong(songNumber)\n    setSongName(name)\n    // setBackgroundColor(color)\n    setTextColor(fontColor)\n  }\n\n  const tick = () => {\n    animationLooper(canvas.current)\n    analyser.getByteTimeDomainData(frequency_array)\n    rafId = requestAnimationFrame(tick)\n  }\n\n  return (\n    <div className=\"audioControl\">\n      <button\n        onClick={togglePlay}\n        style={\n          isPaused\n            ? { backgroundColor: 'yellow' }\n            : { backgroundColor: 'green' }\n        }\n      >\n        {isPaused ? 'Paused' : 'PLAYING !!!'}\n      </button>\n\n      <button\n        onClick={() => {\n          changeSong((currentSong + 1) % 3)\n        }}\n      >\n        Change Song my Friend\n      </button>\n      <canvas ref={canvas} />\n      {/* <div className=\"songName\"> */}\n      <h3 style={{ color: textColor }}>{songName}</h3>\n      {/* </div> */}\n    </div>\n  )\n}\n\n\nexport default Displayer\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/UploadAudio/AudioImport.js",["55","56","57"],"import React, { useState, Fragment } from 'react'\nimport axios from 'axios'\nimport { Card, Button } from 'react-bootstrap'\n\n\nconst AudioUpload = () => {\n\n  //Need to use a hook to set text in the label to the file namespace\n  const [file, setFile] = useState('')\n  const [filename, setFilename] = useState('Choose File')\n  const [uploadedFile, setUploadedFile] = useState({})\n\n  const onChange = (e) => {\n    //HTML file uploads come as an array so we want the index of the first file\n    setFile(e.target.files[0])\n    setFilename(e.target.files[0].name)\n  }\n\n  const onSubmit = async (e) => {\n    e.preventDefault()\n    const formData = new FormData()\n    formData.append('file', file)\n\n    try {\n      //Need to connect to the server\n      const res = await axios.post('/upload', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      })\n      const { fileName, filePath } = res.data\n      if (res.status === 200) {\n        console.log('Was uploaded successfully ' + res.status)\n      }\n      setUploadedFile({ fileName, filePath })\n    } catch (err) {\n      if (err.response.status === 500) {\n        console.error('There is a problem with the server ' + err.message)\n      } else {\n        //This message is from the server if no file is uploaded\n        console.error(err.response.data.msg)\n      }\n    }\n  }\n\n  return (\n    //The fragment allows to group children without creating extra nodes\n\n    <Card style={{ width: '17rem', top: '25px' }}>\n      <Card.Body>\n        <Card.Title>\n          Audio Upload\n        </Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">Select your own audio to upload</Card.Subtitle>\n        <Card.Text>\n\n\n\n          <Fragment>\n            <div className=\"mb-2\">\n              <form onSubmit={onSubmit}>\n                <div className=\"input-group mb-3\">\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    id=\"inputGroupFile02\"\n                    onChange={onChange}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Upload Audio\"\n                    className=\"btn btn-primary btn-block\"\n                  />\n\n                  <label\n                    className=\"id=inputGroupFile02\"\n                    htmlFor=\"inputGroupFile02\"\n                  ></label>\n                </div>\n              </form>\n            </div>\n\n            {/* {uploadedFile ? (\n        <div className=\"row mt-5\">\n          <div className=\"col-md-6 m-auto\">\n            <h3 className=\"text-center\">{uploadedFile.filename}</h3>\n            <img style={{ width: '50%' }} src={uploadedFile.filepath} alt=\"\" />\n          </div>\n        </div>\n      ) : null} */}\n          </Fragment>\n\n\n\n        </Card.Text >\n        <Card.Link href=\"#\">Cancel</Card.Link>\n        {/* <Card.Link href=\"#\">Another Link</Card.Link> */}\n      </Card.Body >\n    </Card >\n\n\n  )\n}\n\nexport default AudioUpload\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/BackgroundImport.js",["58","59","60"],{"ruleId":"61","severity":1,"message":"62","line":10,"column":10,"nodeType":"63","messageId":"64","endLine":10,"endColumn":15},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"61","severity":1,"message":"69","line":3,"column":3,"nodeType":"63","messageId":"64","endLine":3,"endColumn":12},{"ruleId":"61","severity":1,"message":"70","line":57,"column":17,"nodeType":"63","messageId":"64","endLine":57,"endColumn":25},{"ruleId":"61","severity":1,"message":"71","line":58,"column":20,"nodeType":"63","messageId":"64","endLine":58,"endColumn":31},{"ruleId":"61","severity":1,"message":"72","line":59,"column":18,"nodeType":"63","messageId":"64","endLine":59,"endColumn":27},{"ruleId":"61","severity":1,"message":"73","line":140,"column":27,"nodeType":"63","messageId":"64","endLine":140,"endColumn":32},{"ruleId":"61","severity":1,"message":"74","line":3,"column":16,"nodeType":"63","messageId":"64","endLine":3,"endColumn":22},{"ruleId":"61","severity":1,"message":"75","line":8,"column":10,"nodeType":"63","messageId":"64","endLine":8,"endColumn":18},{"ruleId":"61","severity":1,"message":"76","line":9,"column":10,"nodeType":"63","messageId":"64","endLine":9,"endColumn":22},{"ruleId":"61","severity":1,"message":"74","line":3,"column":16,"nodeType":"63","messageId":"64","endLine":3,"endColumn":22},{"ruleId":"61","severity":1,"message":"75","line":10,"column":10,"nodeType":"63","messageId":"64","endLine":10,"endColumn":18},{"ruleId":"61","severity":1,"message":"76","line":11,"column":10,"nodeType":"63","messageId":"64","endLine":11,"endColumn":22},"no-unused-vars","'route' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["77"],"no-negated-in-lhs",["78"],"'Container' is defined but never used.","'setAudio' is assigned a value but never used.","'setSongList' is assigned a value but never used.","'setCanvas' is assigned a value but never used.","'color' is assigned a value but never used.","'Button' is defined but never used.","'filename' is assigned a value but never used.","'uploadedFile' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]