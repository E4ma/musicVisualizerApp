[{"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/index.js":"1","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/App.js":"2","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/PrivateRoute.js":"3","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/UpdateProfile.js":"4","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/ForgotPassword.js":"5","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Login.js":"6","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Signup.js":"7","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Home.js":"8","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MyAccount.js":"9","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/About.js":"10","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/contexts/AuthContext.js":"11","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/firebase.js":"12","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/LandingNav.js":"13","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Navigation.js":"14","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Displayer.js":"15","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/InsertIcon.js":"16","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/FileUpload.js":"17","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/Playlist.js":"18","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/contexts/PlaylistContext.js":"19","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Buttons/AudioControls.js":"20","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/SigninNav.js":"21","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/IconUpload.js":"22"},{"size":400,"mtime":1613675788586,"results":"23","hashOfConfig":"24"},{"size":2152,"mtime":1613715663876,"results":"25","hashOfConfig":"24"},{"size":586,"mtime":1613515553822,"results":"26","hashOfConfig":"24"},{"size":2639,"mtime":1613515553823,"results":"27","hashOfConfig":"24"},{"size":1654,"mtime":1613515553820,"results":"28","hashOfConfig":"24"},{"size":1986,"mtime":1614013024436,"results":"29","hashOfConfig":"24"},{"size":2261,"mtime":1613972866352,"results":"30","hashOfConfig":"24"},{"size":6824,"mtime":1614008811638,"results":"31","hashOfConfig":"24"},{"size":2066,"mtime":1614013024437,"results":"32","hashOfConfig":"24"},{"size":1289,"mtime":1613972866345,"results":"33","hashOfConfig":"24"},{"size":1469,"mtime":1613515554044,"results":"34","hashOfConfig":"24"},{"size":577,"mtime":1613515554045,"results":"35","hashOfConfig":"24"},{"size":985,"mtime":1614008811640,"results":"36","hashOfConfig":"24"},{"size":1570,"mtime":1614008811640,"results":"37","hashOfConfig":"24"},{"size":7888,"mtime":1614013111632,"results":"38","hashOfConfig":"24"},{"size":359,"mtime":1613972885006,"results":"39","hashOfConfig":"24"},{"size":8345,"mtime":1613972885005,"results":"40","hashOfConfig":"24"},{"size":1177,"mtime":1613976824042,"results":"41","hashOfConfig":"24"},{"size":3173,"mtime":1614013066772,"results":"42","hashOfConfig":"24"},{"size":1053,"mtime":1613716984170,"results":"43","hashOfConfig":"24"},{"size":1058,"mtime":1613972866352,"results":"44","hashOfConfig":"24"},{"size":5459,"mtime":1613972885005,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1ffvp7o",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"48"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"48"},"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/index.js",[],["105","106"],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/App.js",["107"],"import React, { useState } from 'react'\nimport './App.css'\nimport Signup from './Signup'\nimport { AuthProvider } from '../contexts/AuthContext'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n// import Navigation from './Navigation'\nimport About from './About'\n// import TemplatesPage from './TemplatesPage'\nimport Editor from './Home'\nimport Profile from './MyAccount'\nimport Login from './Login'\nimport PrivateRoute from './PrivateRoute'\nimport ForgotPassword from './ForgotPassword'\nimport UpdateProfile from './UpdateProfile'\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <AuthProvider>\n          <Switch>\n            <Route path=\"/Login\" component={Login} />\n            <PrivateRoute exact path=\"/MyAccount\" component={Profile} />\n            <PrivateRoute exact path=\"/Home\" component={Editor} />\n            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/\" component={About} />\n            <Route path=\"/forgot-password\" component={ForgotPassword} />\n          </Switch>\n        </AuthProvider>\n      </Router>\n    </div>\n  )\n}\n\n// const App = () => {\n//\n//   // const [isSignedIn, setIsSignedIn] = useState(false)\n//\n\n//   // if (isSignedIn === 'signout') {\n//   //   setIsSignedIn(false)\n//   // } else if (isSignedIn === 'signin') {\n//   //   setIsSignedIn(true)\n//   // }\n\n//   const onRouteChange = (route) => {\n//  if (route === 'Home') {\n//       setDisplayPage(<Home />)\n//     } else if (route === 'About') {\n//       setDisplayPage(<About />)\n//     } else if (route === 'TemplatesPage') {\n//       setDisplayPage(<TemplatesPage />)\n//     }\n//     setRoute({ route: route })\n//   }\n\n//   // if (route === 'signout') {\n//   //   setRoute({ isSignedIn: false })\n//   // } else if (route === 'signin') {\n//   //   setRoute({ isSignedIn: true })\n//   // } else\n\n//   return (\n//     <>\n//       <div className=\"Frontscr\">\n//         <Navigation  onRouteChange={onRouteChange} />\n//         {displayPage}\n//       </div>\n//     </>\n//   )\n// }\n\nexport default App\n\n// isSignedIn={setIsSignedIn}\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/PrivateRoute.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/UpdateProfile.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/ForgotPassword.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Login.js",["108","109"],"import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport SigninNav from \"./SigninNav\"\n\nexport default function Login() {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const { login } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n    try {\n      setError(\"\")\n      setLoading(true)\n      await login(emailRef.current.value, passwordRef.current.value)\n      history.push(\"/MyAccount\")\n    } catch {\n      setError(\"Failed to log in\")\n    }\n\n    setLoading(false)\n  }\n\n  return (\n    <>\n      <SigninNav />\n      <Container className=\"signinContainer\">\n        <div className=\"signinWrapper\">\n          <div >\n\n            <h2 className=\"text-center m-4\">Welcome Back!</h2>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <Form.Group id=\"email\">\n                <input type=\"email\" placeholder=\"Email\" className=\"signinInput\" ref={emailRef} required />\n              </Form.Group>\n              <Form.Group id=\"password\">\n                <input type=\"password\" placeholder=\"Password\" className=\"signinInput\" ref={passwordRef} required />\n              </Form.Group>\n              <button disabled={loading} className=\"formBtn\" type=\"submit\">\n                Sign In\n            </button>\n            </Form>\n            <div className=\"w-100 text-center mt-3\">\n              <Link to=\"/forgot-password\" className=\"formLink\">Forgot Password?</Link>\n            </div>\n\n          </div>\n\n          <div className=\"w-100 text-center m-2\">\n            Need an account? <Link to=\"/signup\" className=\"formLink\">Sign Up</Link>\n          </div>\n\n        </div>\n      </Container>\n    </>\n  )\n}","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Signup.js",["110","111"],"import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport LandingNav from \"./LandingNav\"\n\n\nexport default function Signup() {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const { signup } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n    //are passwords same?\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\")\n      //and then exit\n    }\n\n    try {\n      setError(\"\")\n      //disables signup button\n      setLoading(true)\n      await signup(emailRef.current.value, passwordRef.current.value)\n      history.push(\"/\")\n    } catch {\n      setError(\"Failed to create an account. Password should be at least 6 characters\")\n    }\n\n    setLoading(false)\n  }\n\n  return (\n    <>\n      <LandingNav />\n      <Container className=\"signinContainer\">\n<div className=\"signinWrapper\">\n<div>\n        <h2 className=\"text-center m-4\">Sign Up</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <input className=\"signinInput\" placeholder=\"Enter Email\" type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <input className=\"signinInput\" placeholder=\"Enter Password\" type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <input className=\"signinInput\" placeholder=\"Re-enter Password\" type=\"password\" ref={passwordConfirmRef} required />\n            </Form.Group>\n            <button disabled={loading} className=\"formBtn\" type=\"submit\">\n              Sign Up\n            </button>\n          </Form>\n</div>\n      <div className=\"w-100 text-center m-2\">\n        Already have an account? <Link to=\"/login\" className=\"formLink\">Sign In</Link>\n      </div>\n</div>\n      </Container>\n    </>\n  )\n}","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Home.js",["112"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Card, Row, Col, Nav, Modal } from 'react-bootstrap'\nimport Tab from 'react-bootstrap/Tab'\nimport Displayer from './Displayer'\nimport FileUpload from './MediaInteractions/FileUpload'\nimport IconUpload from './MediaInteractions/IconUpload'\nimport InsertIcon from './MediaInteractions/InsertIcon'\nimport Navigation from './Navigation'\nimport PlaylistContext from '../contexts/PlaylistContext'\nimport background from './Images/background1.jpg'\nimport icon from './Images/Daco.png'\n\nconst Home = () => {\n  // This is for controlling the Modal window (AUDIO)\n  const [isOpen, setIsOpen] = useState(false)\n  const showModal = () => {\n    setIsOpen(true)\n  }\n  const hideModal = () => {\n    setIsOpen(false)\n  }\n\n  // This is for controlling the Modal window (BACKGROUND)\n  const [backModalOpen, setBackModalOpen] = useState(false)\n  const showBackModal = () => {\n    setBackModalOpen(true)\n  }\n  const hideBackModal = () => {\n    setBackModalOpen(false)\n  }\n\n  // This is for controlling the Modal window (ICON)\n  const [iconModalOpen, setIconModalOpen] = useState(false)\n  const showIconModal = () => {\n    setIconModalOpen(true)\n  }\n  const hideIconModal = () => {\n    setIconModalOpen(false)\n  }\n\n  //Background image change\n  const [backgroundUrl, setBackgroundUrl] = useState(background)\n  const getPicture = async (picture) => {\n    const response = await axios.get(\n      `http://localhost:5000/upload/image/${picture}`,\n      { responseType: 'blob' },\n    )\n    console.log(response.data)\n    setBackgroundUrl(URL.createObjectURL(response.data))\n\n  }\n\n  //icon image change\n  const [iconUrl, setIconUrl] = useState(icon)\n  const getIcon = async (iconImage) => {\n    const response = await axios.get(\n      `http://localhost:5000/iconUpload/icon/${iconImage}`,\n      { responseType: 'blob' },\n    )\n    console.log(response.data)\n    setIconUrl(URL.createObjectURL(response.data))\n\n  }\n\n\n  return (\n    <PlaylistContext>\n      <Navigation />\n      <div className=\"editorContainer\">\n        <Row className=\"editorRow justify-content-md-center\">\n          <Col xs={2}>\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n              <Row>\n                <Col md={2}>\n                  <Nav\n                    variant=\"pills\"\n                    className=\"flex-column textbold\"\n                    bg=\"transparent\"\n                    style={{ fontWeight: 'bold' }}\n                  >\n                    <br />\n\n                    {/*------ Audio -----*/}\n\n                    <Nav.Item>\n                      <Nav.Link\n                        eventKey=\"uploadAudio\"\n                        style={{\n                          borderRadius: '22px',\n                          backgroundColor: 'transparent',\n                        }}\n                      >\n                        <button className=\"btn1\" onClick={showModal}>\n                          Audio\n                    </button>\n                      </Nav.Link>\n                    </Nav.Item>\n\n                    <br />\n                    <br />\n\n                    {/*------ Background -----*/}\n                    <Nav.Item>\n                      <Nav.Link\n                        eventKey=\"uploadBackground\"\n                        style={{\n                          borderRadius: '22px',\n                          backgroundColor: 'transparent',\n                        }}\n                      >\n                        <button className=\"btn1\" onClick={showBackModal}>\n                          Background\n                    </button>\n                      </Nav.Link>\n                    </Nav.Item>\n                    <br />\n                    <br />\n\n                    {/*------ Icon -----*/}\n                    <Nav.Item>\n                      <Nav.Link\n                        eventKey=\"uploadIcon\"\n                        style={{\n                          borderRadius: '22px',\n                          backgroundColor: 'transparent',\n                        }}\n                      >\n                        <button className=\"btn1\" onClick={showIconModal}>Icon</button>\n                      </Nav.Link>\n                    </Nav.Item>\n                    <br />\n                    <br />\n\n                    {/*------ Text -----*/}\n                    <Nav.Item>\n                      <Nav.Link\n                        eventKey=\"home\"\n                        style={{\n                          borderRadius: '22px',\n                          backgroundColor: 'transparent',\n                        }}\n                      >\n                        <button className=\"btn1\">Visualizer</button>\n                      </Nav.Link>\n                    </Nav.Item>\n                  </Nav>\n                </Col>\n\n                <Col md={'auto'}>\n                  <Tab.Content>\n                    <Tab.Pane eventKey=\"uploadAudio\" mediatype=\"audio\">\n                      <Modal\n                        className=\"modalUpload\"\n                        show={isOpen}\n                        onHide={hideModal}\n                      >\n                        <FileUpload mediatype=\"Audio\" />\n                        <button className=\"btn2\" onClick={hideModal}>\n                          Cancel\n                    </button>\n                      </Modal>\n                    </Tab.Pane>\n\n                    <Tab.Pane eventKey=\"uploadBackground\" mediatype=\"image\">\n                      <Modal show={backModalOpen} onHide={hideBackModal}>\n                        <FileUpload getPicture={getPicture} mediatype=\"Background\" />\n                        <button className=\"btn2\" onClick={hideBackModal}>\n                          {' '}\n                      Cancel\n                    </button>\n                      </Modal>\n                    </Tab.Pane>\n\n                    <Tab.Pane eventKey=\"uploadIcon\">\n                      <Modal show={iconModalOpen} onHide={hideIconModal}>\n                        <IconUpload getIcon={getIcon} mediatype=\"Icon\" />\n                        <button className=\"btn2\" onClick={hideIconModal}>\n                          {' '}\n                      Cancel\n                    </button>\n                      </Modal>\n                    </Tab.Pane>\n\n                  </Tab.Content>\n                </Col>\n              </Row>\n            </Tab.Container>\n          </Col>\n\n          {/* card for displaying the visualizer on the right panel*/}\n\n          <Col md={9}>\n            <div className=\"visualizer\">\n              <Card.Body>\n                <Displayer backgroundUrl={backgroundUrl} />\n                <InsertIcon iconUrl={iconUrl} />\n              </Card.Body>\n            </div>\n          </Col>\n\n        </Row>\n\n      </div>\n    </PlaylistContext >\n  )\n}\n\nexport default Home\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MyAccount.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/About.js",["113","114","115"],"import React from 'react'\nimport { Nav, Modal, Jumbotron, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\"\n// import Displayer from './Displayer'\nimport LandingNav from './LandingNav'\n\nimport vid1 from \"./Vidoes/tunnel1.mp4\";\nimport vid2 from \"./Vidoes/globe1.mp4\";\n\n// styling for About is in App.css\n\nconst About = () => {\n    return (\n\n        <div>\n            <LandingNav />\n            <Container className=\"landingContainer\">\n            <div>\n                <Modal.Dialog >\n                    <video src={vid1}\n                        controls autoPlay loop\n                    />\n                </Modal.Dialog>\n            </div>\n\n            <div className='aboutScrStyles'>\n                \n                    <h1>Turn your music into a visual!</h1>\n                    <h4>HummingBird makes it fast and easy to create your </h4>\n                    <h4>own custom visualizers..</h4>\n                    \n                      \n                            <Link to=\"/Login\" style={{ color: 'white' }}>\n                                <button className=\"btn2\">Create</button>\n                            </Link>\n                        \n                    \n            </div >\n            </Container>\n        </div>\n\n    )\n}\n\nexport default About","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/contexts/AuthContext.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/firebase.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/LandingNav.js",["116"],"import React from 'react'\nimport { Link} from \"react-router-dom\"\nimport { Navbar, Nav, Container, Button } from 'react-bootstrap'\nimport pic from './Images/logogrey-bird.png'\n\n\n\nconst LandingNav = () => {\n\n\n  return (\n    \n<Navbar className=\"landingNav\" variant=\"dark\" expand=\"sm\" >\n        <Container className=\"navContainer\">\n        <Navbar.Brand href=\"/About\">\n          {/* <img src={pic} alt={''} width={80} height={80} /> */}\n          <img \n          src={pic} \n          alt={''} \n          height={'40'} \n          width={'45'} \n          className=\"d-inline-block\"/>{' '}HUMMINGBIRD\n        </Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse className=\"justify-content-end\" id=\"basic-navbar-nav\" >\n          <Nav fill >\n\n          <Nav.Item><Link to=\"/Login\" className=\"navBtn\">Sign In</Link></Nav.Item>\n\n          </Nav>\n        </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n\n   \n  )\n}\n\nexport default LandingNav","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Navigation.js",["117","118"],"import React, { useState } from 'react'\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport { Navbar, Nav, Container } from 'react-bootstrap'\n\nimport pic from './Images/logogrey-bird.png'\n// import pic from './Logo1sn.png'\n\n\nconst Navigation = () => {\n\n  const [error, setError] = useState(\"\")\n  const { currentUser, logout } = useAuth()\n  const history = useHistory()\n\n  async function handleLogout() {\n    setError(\"\")\n\n    try {\n      await logout()\n      history.push(\"/login\")\n    } catch {\n      setError(\"Failed to log out\")\n    }\n  }\n\n  //Navbar\n\n  return (\n\n\n    <Navbar className=\"landingNav\" variant=\"dark\" expand=\"sm\">\n      <Container className=\"navContainer\">\n      <Navbar.Brand href=\"/About\">\n          {/* <img src={pic} alt={''} width={80} height={80} /> */}\n          <img \n          src={pic} \n          alt={''} \n          height={'40'} \n          width={'45'} \n          className=\"d-inline-block\"/>{' '}HUMMINGBIRD\n        </Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse className=\"justify-content-end\" id=\"basic-navbar-nav\">\n          <Nav fill >\n\n            <Nav.Item ><Link className=\"mainNav\" to=\"/Home\" >Editor</Link></Nav.Item>\n            <Nav.Item ><Link className=\"mainNav\" to=\"/MyAccount\" >Profile</Link></Nav.Item>\n            <Nav.Item onClick={handleLogout}><Link className=\"navBtn\" >Sign Out</Link></Nav.Item>\n\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n\n\n  )\n}\n\nexport default Navigation","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Displayer.js",["119","120"],"import React, {\n  createRef,\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useContext,\n} from 'react'\nimport { PlaylistContext } from '../contexts/PlaylistContext'\nimport AudioControls from './Buttons/AudioControls'\n\nconst UpdateWindowSize = () => {\n  const [size, setSize] = useState([1000, 1000])\n  useLayoutEffect(() => {\n    const updateSize = () => {\n      setSize([window.innerWidth, window.innerHeight])\n    }\n    window.addEventListener('resize', updateSize)\n    return () => window.removeEventListener('resize', updateSize)\n  }, [])\n  return size\n}\n\nlet rafId\n\nlet ctx, x_end, y_end, bar_height\n\nconst bars = 900 //  max 1030 - leave it in 555\nconst bar_width = 2 //  good in 1\nconst radius = 0 // innercircle\n\nconst Displayer = (props) => {\n  const {\n    currentSongIndex,\n    setCurrentSongIndex,\n    songList,\n    getSong,\n    audio,\n    frequency_array,\n    audioContext,\n    analyser,\n  } = useContext(PlaylistContext)\n  //This is the state that lets us know what the current song loaded is\n\n  const [width, height] = UpdateWindowSize()\n  const [canvas, setCanvas] = useState(createRef())\n  //State for whether the song is playing or not\n  const [isPaused, setIsPaused] = useState(true)\n\n  // const [currentSongIndex, setCurrentSongIndex] = useState(-1)\n  //Slider for changing peak lengths\n  const [sliderM, setSliderM] = useState(1)\n  const [sliderN, setSliderN] = useState(1)\n  const center_x = width / 2\n  const center_y = height / 2\n\n  function animationLooper(canvas) {\n    canvas.width = width\n    canvas.height = height\n    ctx = canvas.getContext('2d')\n    for (let i = 0; i < bars; i++) {\n      //divide a circle into equal part\n      const rads = (Math.PI * 2) / bars\n      // Math is magical - you can make lots of visualizer\n      // this 4.5 decides the canves size\n      bar_height = frequency_array[i] * 2.5\n      const x = center_x + Math.cos(rads * i) * radius\n      const y = center_y + Math.sin(rads * i) * radius\n      x_end =\n        center_x +\n        Math.cos(rads * sliderN * i + (Math.PI / 640) * new Date()) *\n          (radius + bar_height)\n      y_end =\n        center_y +\n        Math.sin(rads * sliderM * i + (Math.PI / 640) * new Date()) *\n          (radius + bar_height)\n      //draw a bar\n      // const x = bar_width / 2 + (i * window.innerWidth) / bars;\n      // const y = 900;\n      // const y_end = 800 - bar_height;\n      // const x_end = x;\n      drawBar(x, y, x_end, y_end, i, ctx, canvas)\n    }\n  }\n\n  function drawBar(x1 = 0, y1 = 0, x2 = 0, y2 = 0, i, ctx) {\n    i = (i + new Date().getTime() * 2) % 600 //  2 is an OK number,  600/6 =100 integer is good\n    const gradient = ctx.createLinearGradient(x1, y1, x2, y2)\n    gradient.addColorStop(0, 'rgba(0, 255, 0, 255)')\n    gradient.addColorStop(1, 'rgba(254, 0, 0, 255)')\n    ctx.fillStyle = 'pink'\n    let lineColor\n    if (i < 150) {\n      // lineColor = \"red\"\n      lineColor =\n        'rgb(' +\n        Math.abs(275 - i) +\n        ', ' +\n        Math.abs(175 - i / 2) +\n        ', ' +\n        1000 +\n        ')'\n    } else if (i < 300) {\n      // lineColor=\"blue\"\n      lineColor =\n        'rgb(' +\n        1000 +\n        ', ' +\n        Math.abs(275 - i) +\n        ', ' +\n        Math.abs(175 - i / 2) +\n        ')'\n    } else if (i < 450) {\n      // lineColor=\"green\"\n      lineColor =\n        'rgb(' +\n        Math.abs(175 - i / 2) +\n        ', ' +\n        1000 +\n        ', ' +\n        Math.abs(275 - i) +\n        ')'\n    } else if (i < 600) {\n      // lineColor = \"red\"\n      lineColor =\n        'rgb(' +\n        Math.abs(175 - i / 2) +\n        ', ' +\n        1000 +\n        ', ' +\n        Math.abs(275 - i) +\n        ')'\n    } else if (i < 750) {\n      // lineColor=\"blue\"\n      lineColor =\n        'rgb(' +\n        1000 +\n        ', ' +\n        Math.abs(275 - i) +\n        ', ' +\n        Math.abs(175 - i / 2) +\n        ')'\n    } else if (i < 900) {\n      // lineColor=\"green\"\n      lineColor =\n        'rgb(' +\n        Math.abs(275 - i) +\n        ', ' +\n        Math.abs(175 - i / 2) +\n        ', ' +\n        1000 +\n        ')'\n    }\n\n    ctx.strokeStyle = lineColor\n    ctx.lineWidth = bar_width\n    ctx.beginPath()\n    ctx.moveTo(x1, y1)\n    ctx.lineTo(x2, y2)\n    ctx.stroke()\n  }\n\n  //Sets the function to toggle if a song is playing or not\n  const togglePlay = () => {\n    // Plays audio when called\n    console.log('Audio clicked in Displayer', audio)\n    if (audio.paused) {\n      audioContext.resume()\n      audio.play()\n      setIsPaused(false)\n      rafId = requestAnimationFrame(tick)\n    } else {\n      //pauses audio\n      audio.pause()\n      setIsPaused(true)\n      cancelAnimationFrame(rafId)\n    }\n  }\n  const playTrack = () => {\n    if (audio) {\n      togglePlay()\n    }\n  }\n  const prevTrack = () => {\n    if (audio && !isPaused) {\n      togglePlay()\n    }\n    setCurrentSongIndex((curr) => {\n      let newSongNum\n      if (currentSongIndex === 0) {\n        newSongNum = songList.length - 1\n      } else {\n        newSongNum = (curr - 1) % songList.length\n      }\n      getSong(songList[newSongNum])\n      return newSongNum\n    })\n    console.log('This is the currentsongindex click prev', currentSongIndex)\n  }\n\n  console.log('This is the current song index', currentSongIndex)\n  const nextTrack = () => {\n    if (audio && !isPaused) {\n      togglePlay()\n    }\n    setCurrentSongIndex((curr) => {\n      console.log('This is curr', curr)\n      let newSongNum\n      if (curr === 0) {\n        newSongNum = curr + 1\n      } else {\n        newSongNum = (curr + 1) % songList.length\n      }\n      getSong(songList[newSongNum])\n      return newSongNum\n    })\n    // getSong(songList[(currentSongIndex + 1) % songList.length])\n  }\n\n  useEffect(() => {\n    if (rafId) {\n      cancelAnimationFrame(rafId)\n      rafId = requestAnimationFrame(tick)\n    }\n  }, [sliderM, sliderN])\n\n  function tick() {\n    animationLooper(canvas.current)\n    analyser.getByteTimeDomainData(frequency_array)\n    rafId = requestAnimationFrame(tick)\n  }\n\n  //console.log('This is the songList that is being imported', songList)\n\n  return (\n    <div\n      className=\"audioControlBackground\"\n      style={{ backgroundImage: `url(${props.backgroundUrl})` }}\n    >\n      <div className=\"buttonWrapper\">\n        <AudioControls\n          playTrack={playTrack}\n          onClickPrev={prevTrack}\n          onClickNext={nextTrack}\n          isPaused={isPaused}\n        />\n      </div>\n      <div className=\"songInfoWrapper\">\n        <div style={{ color: 'red' }}>{songList[currentSongIndex]}</div>\n        {songList && (\n          <select\n            value={songList[currentSongIndex]}\n            onChange={(e) => {\n              console.log('e', e.target.value)\n              getSong(e.target.value)\n              let foo = (e.target.selectedIndex - 1) % songList.length\n              setCurrentSongIndex(foo)\n            }}\n          >\n            {' '}\n            <option>Choose A Song</option>\n            {songList &&\n              songList.map((song) => {\n                return <option value={song}>{song}</option>\n              })}\n          </select>\n        )}\n      </div>\n\n      <div className=\"canvasWrapper\">\n        {audio && audio.paused ? <canvas /> : <canvas ref={canvas} />}\n      </div>\n\n      <div className=\"sliders\">\n        {' '}\n        <div>{sliderM}</div>\n        <p>X</p>\n        <input\n          className=\"slider\"\n          type=\"range\"\n          min=\"0\"\n          max=\"8\"\n          step=\".1\"\n          onChange={(e) => {\n            setSliderM(e.target.value)\n          }}\n          value={sliderM}\n        />{' '}\n        <div>{sliderN}</div>\n        <p>Y</p>\n        <input\n          className=\"slider1\"\n          type=\"range\"\n          min=\"0\"\n          max=\"8\"\n          step=\".1\"\n          onChange={(e) => {\n            setSliderN(e.target.value)\n          }}\n          value={sliderN}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Displayer\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/InsertIcon.js",["121"],"import React from 'react'\n// import { Container, Row, Col, Image } from 'react-bootstrap'\n\n\n//Icon input\nconst InsertIcon = (props) => {\n\n\n\n  return (\n    <div className=\"iconWrapper\">\n      <img\n        style={{\n          width: '15%',\n          height: '15%',\n        }}\n        src={`${props.iconUrl}`}\n      />\n    </div>\n  )\n}\n\nexport default InsertIcon\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/FileUpload.js",["122","123","124","125","126"],"import React, { useState, useEffect, useCallback, useContext } from 'react'\nimport axios from 'axios'\nimport { Card, ListGroup } from 'react-bootstrap'\nimport Playlist from './Playlist'\n// import ImageList from './ImageList'\nimport { PlaylistContext } from '../../contexts/PlaylistContext'\n\nconst FileUpload = (props) => {\n  //Need to use a hook to set text in the label to the file namespace\n  const [file, setFile] = useState('')\n  const [filename, setFilename] = useState('Choose File')\n  const [uploadedFile, setUploadedFile] = useState({})\n  const [imagelist, setImagelist] = useState([])\n  const [playlist, setPlaylist] = useState([])\n  const [currentUser, setCurrentUser] = useState('USR------1')\n\n  const { setSongList } = useContext(PlaylistContext)\n\n  const onChange = (e) => {\n    //HTML file uploads come as an array so we want the index of the first file\n    setFile(e.target.files[0])\n    setFilename(e.target.files[0].name)\n  }\n\n  const onSubmit = async (e) => {\n    // e.preventDefault() used to prevent submitting by accident by preventing normal submitting\n    e.preventDefault()\n\n    const formData = new FormData()\n    formData.append('file', file)\n\n    try {\n      const res = await axios.post(\n        'http://localhost:5000/upload/media',\n        formData,\n        {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        },\n      )\n      const { fileName, filePath } = res.data\n      // console.log('These are the headers', res.headers)\n      if (res.status === 200) {\n        console.log('File was uploaded successfully ' + res.status)\n      }\n      setUploadedFile({ fileName, filePath })\n    } catch (err) {\n      if (err.response.status === 500) {\n        console.error('There is a problem with the server ' + err.message)\n      } else {\n        //This message is from the server if no file is uploaded\n        // console.error('we had an error??? ' + err.response.data.msg)\n        console.error(err.response.data.msg)\n      }\n    }\n  }\n\n  // Gets the playlist and sends to the Playlist Component\n\n  const fetchSongSelect = useCallback(() => {\n    axios\n      .get('http://localhost:5000/upload/list')\n      .then((res) => {\n        // console.log('this is the res', res)\n        return res.data\n      })\n      .then((playlist) => {\n        // console.log('This is the playlist', playlist)\n        // console.log(`Playlist length in FileUpload`, playlist.length)\n        setSongList(playlist)\n      })\n  }, [setSongList])\n\n  useEffect(() => {\n    fetchSongSelect()\n  }, [uploadedFile, fetchSongSelect])\n\n  //get imagelist + send to imagelist component\n  const getImagelist = useCallback(() => {\n    axios\n      .get('http://localhost:5000/upload/backgroundList')\n      .then((res) => {\n        console.log('this is the res', res.data)\n        return res.data\n      })\n      .then((imagelist) => {\n        setImagelist(imagelist)\n      })\n  }, [setImagelist])\n  useEffect(() => {\n    getImagelist()\n  }, [uploadedFile, getImagelist])\n\n  // If the Audio button is selected\n  if (props.mediatype === 'Audio') {\n    return (\n      // <Card style={{ width: '29rem', margin: '16px' }}>\n      <Card style={{ height: '25rem' }}>\n        <Card.Body className=\"modalUpload\">\n          <Card.Title className=\"mb-2 text-muted\">\n            {props.mediatype} Upload\n          </Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            Select {props.mediatype} to Upload\n          </Card.Subtitle>\n          <Card.Text>\n            <>\n              {/* <div className=\"mb-2\"> */}\n              <div>\n                <form onSubmit={onSubmit}>\n                  {/* <div className=\"input-group mb-4\"> */}\n                  <div>\n                    <input\n                      type=\"file\"\n                      // className=\"form-control mb-5\"\n                      className=\"modalUpload\"\n                      // id=\"inputGroupFile02\"\n                      accept={`${props.mediatype}/wav, ${props.mediatype}/mp3, ${props.mediatype}/mpeg`}\n                      onChange={onChange}\n                    />\n                    <input\n                      type=\"submit\"\n                      value={`Submit`}\n                      // className=\"btn btn-primary btn-block\"\n                      className=\"btn2\"\n                      onClick={() => fetchSongSelect()}\n                    />\n                    {/* <label\n                      className=\"id=inputGroupFile02\"\n                      htmlFor=\"inputGroupFile02\"\n                    ></label> */}\n                    <Playlist uploadedFile={uploadedFile} />\n                  </div>\n                </form>\n              </div>\n            </>\n          </Card.Text>\n        </Card.Body>\n        {/* <Playlist uploadedFile={uploadedFile} /> */}\n      </Card>\n    )\n  }\n  if (props.mediatype === 'Background') {\n    return (\n      <Card style={{ height: '25rem' }}>\n        <Card.Body className=\"modalUpload\">\n          <Card.Title className=\"mb-2 text-muted\">\n            {props.mediatype} Upload\n          </Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            Select {props.mediatype} to Upload\n          </Card.Subtitle>\n          <Card.Text>\n            <>\n              {/* <div className=\"mb-2\"> */}\n              <div>\n                <form onSubmit={onSubmit}>\n                  {/* <div className=\"input-group mb-3\"> */}\n                  <div>\n                    <input\n                      type=\"file\"\n                      // className=\"form-control mb-5\"\n                      className=\"modalUpload\"\n                      // id=\"inputGroupFile02\"\n                      accept={`${props.filetype}/jpg, ${props.filetype}/jpeg, ${props.filetype}/png, ${props.filetype}/bmp`}\n                      onChange={onChange}\n                    />\n                    <input\n                      type=\"submit\"\n                      value={`Submit`}\n                      // className=\"btn btn-primary btn-block\"\n                      className=\"btn2\"\n                      onClick={() => getImagelist()}\n                    />\n\n                    {/* <label\n                      className=\"id=inputGroupFile02\"\n                      htmlFor=\"inputGroupFile02\"\n                    ></label> */}\n                    <ListGroup\n                      action\n                      onClick={(event) => {\n                        props.getPicture(event.target.firstChild.data)\n                      }}\n                    >\n                      {imagelist?.map((picture, index) => {\n                        return (\n                          <ListGroup.Item action key={index} value={picture}>\n                            {picture}\n                          </ListGroup.Item>\n                        )\n                      })}\n                    </ListGroup>\n                  </div>\n                </form>\n              </div>\n            </>\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    )\n  }\n\n  if (props.mediatype === 'Icon') {\n    return (\n      <Card style={{ height: '25rem' }}>\n        <Card.Body className=\"modalUpload\">\n          <Card.Title className=\"mb-2 text-muted\">\n            {props.mediatype} Upload\n          </Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            Select {props.mediatype} to Upload\n          </Card.Subtitle>\n          <Card.Text>\n            <>\n              {/* <div className=\"mb-2\"> */}\n              <div>\n                <form onSubmit={onSubmit}>\n                  {/* <div className=\"input-group mb-3\"> */}\n                  <div>\n                    <input\n                      type=\"file\"\n                      // className=\"form-control mb-5\"\n                      className=\"modalUpload\"\n                      // id=\"inputGroupFile02\"\n                      accept={`${props.filetype}/jpg, ${props.filetype}/jpeg, ${props.filetype}/bmp`}\n                      onChange={onChange}\n                    />\n                    <input\n                      type=\"submit\"\n                      value={`Submit`}\n                      // className=\"btn btn-primary btn-block\"\n                      className=\"btn2\"\n                    />\n                  </div>\n                </form>\n              </div>\n            </>\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    )\n  }\n\n}\n\nexport default FileUpload\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/Playlist.js",["127"],"import React, { useContext, useState } from 'react'\nimport { Card, ListGroup } from 'react-bootstrap'\nimport { PlaylistContext } from '../../contexts/PlaylistContext'\n\nconst Playlist = (props) => {\n  const { setCurrentSongIndex, songList } = useContext(PlaylistContext)\n\n  const generateKey = (pre) => {\n    return `${pre}_${new Date().getTime()}`\n  }\n  return (\n    <>\n      <br />\n      <Card.Body className=\"playlistTab\" style={{ overflow: 'auto' }}>\n        <Card.Title className=\"mb-2 text-muted\">Playlist</Card.Title>\n        <Card.Text className=\"tabScroll\">\n          <div>\n            <ListGroup action>\n              {songList?.map((song, index) => {\n                // console.log('This is the song with index', song, index)\n\n                return (\n                  <ListGroup.Item\n                    onClick={() => setCurrentSongIndex(index)}\n                    key={generateKey(index)}\n                    value={song}\n                  >\n                    {song}\n                  </ListGroup.Item>\n                )\n              })}\n            </ListGroup>\n          </div>\n        </Card.Text>\n      </Card.Body>\n    </>\n  )\n}\n\nexport default Playlist\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/contexts/PlaylistContext.js",["128","129"],"import React, { createContext, useState, useEffect } from 'react'\nimport axios from 'axios'\n\nexport const PlaylistContext = createContext()\n\nconst PlaylistContextProvider = (props) => {\n  const [songList, setSongList] = useState([])\n  const [currentSongIndex, setCurrentSongIndex] = useState(-1)\n  const [audio, setAudio] = useState()\n  const [audioContext, setAudioContext] = useState()\n  const [source, setSource] = useState()\n  const [analyser, setAnalyser] = useState()\n  const [frequency_array, setFrequency_array] = useState()\n\n  // createAudioContextSingleton runs the file only once not again and again\n  const createAudioContextSingleton = () => {\n    if (!audio) {\n      let a = new Audio()\n      console.log('CreateAudioContextSingleton: a =', a)\n      let ac = new (window.AudioContext || window.webkitAudioContext)()\n      let s = ac.createMediaElementSource(a)\n      let analy = ac.createAnalyser()\n      s.connect(analy)\n      analy.connect(ac.destination)\n      let freqArr = new Uint8Array(analy.frequencyBinCount)\n\n      setAudio(a)\n      setAnalyser(analy)\n      setSource(s)\n      setAudioContext(ac)\n      setFrequency_array(freqArr)\n    }\n  }\n\n  const getSong = (song) => {\n    if (!audio) {\n      createAudioContextSingleton()\n      console.log('this is createAudioSingleton', audio)\n    }\n    console.log('this is song =', song)\n\n    console.log('PlaylistContext: songList[currentSongIndex]', currentSongIndex)\n  }\n\n  const loadSongIntoAudio = async () => {\n    if (!songList[currentSongIndex] || !audio) {\n      console.log('nothing here')\n      return\n    }\n\n    try {\n      const response = await axios.request({\n        url: `http://localhost:5000/upload/media/${songList[currentSongIndex]}`,\n        responseType: 'blob',\n        method: 'GET',\n      })\n      let MIN_URL_LENGTH = 22\n\n      if (!response.data || response.data.length <= MIN_URL_LENGTH) {\n        throw new Error(\n          `Error with respond.data located in /upload/media:`,\n          response.data,\n        )\n      }\n      // console.log('PlaylistContext: Audio in getSong= ', audio)\n\n      audio.src = URL.createObjectURL(response.data)\n      console.log('PlaylistContext: audio.src', audio.src)\n      audio.load()\n    } catch (ex) {\n      console.error(`PlaylistContext: exception in getSong(): `, ex.message)\n    }\n    // audio.play()\n  }\n\n  const getSongList = async () => {\n    let res = await axios.get('http://localhost:5000/upload/list')\n    const data = res.data\n    console.log('This is data', data)\n\n    setSongList(data)\n  }\n  // console.log(uploadedFile)\n  //Returns a list of files saved\n  useEffect(() => {\n    getSongList()\n  }, [])\n\n  useEffect(() => {\n    loadSongIntoAudio()\n  }, [currentSongIndex, audio])\n\n  return (\n    <PlaylistContext.Provider\n      value={{\n        createAudioContextSingleton,\n        currentSongIndex,\n        setCurrentSongIndex,\n        songList,\n        setSongList,\n        getSong,\n        getSongList,\n        loadSongIntoAudio,\n        audio,\n        frequency_array,\n        audioContext,\n        analyser,\n      }}\n    >\n      {props.children}\n    </PlaylistContext.Provider>\n  )\n}\n\nexport default PlaylistContextProvider\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Buttons/AudioControls.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/SigninNav.js",["130","131"],"import React from 'react'\nimport { Link} from \"react-router-dom\"\nimport { Navbar, Nav, Container, Button } from 'react-bootstrap'\nimport pic from './Images/logogrey-bird.png'\nimport wave from './Images/navWave.svg'\n// import pic from './Logo1sn.png'\n\n\nconst SigninNav = () => {\n\n\n  return (\n    \n<Navbar className=\"landingNav\" variant=\"dark\" expand=\"sm\" >\n        <Container className=\"navContainer\">\n        <Navbar.Brand href=\"/About\">\n          {/* <img src={pic} alt={''} width={80} height={80} /> */}\n          <img \n          src={pic} \n          alt={''} \n          height={'40'} \n          width={'45'} \n          className=\"d-inline-block\"/>{' '}HUMMINGBIRD\n        </Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse className=\"justify-content-end\" id=\"basic-navbar-nav\" >\n          <Nav fill >\n\n          <Nav.Item><Link to=\"/Signup\" className=\"navBtn\">Sign Up</Link></Nav.Item>\n\n          </Nav>\n        </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n\n   \n  )\n}\n\nexport default SigninNav","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/MediaInteractions/IconUpload.js",["132","133"],"import React, { useState, useEffect, useCallback, useContext } from 'react'\nimport axios from 'axios'\nimport { Card, ListGroup } from 'react-bootstrap'\n\nconst IconUpload = (props) => {\n  const [file, setFile] = useState('')\n  const [filename, setFilename] = useState('Choose File')\n  const [uploadedFile, setUploadedFile] = useState({})\n  const [imagelist, setImagelist] = useState([])\n\n \n\n  const onChange = (e) => {\n    //HTML file uploads come as an array so we want the index of the first file\n    setFile(e.target.files[0])\n    setFilename(e.target.files[0].name)\n  }\n\n  const onSubmit = async (e) => {\n    // e.preventDefault() used to prevent submitting by accident by preventing normal submitting\n    e.preventDefault()\n\n    const formData = new FormData()\n    formData.append('file', file)\n\n    try {\n      const res = await axios.post(\n        'http://localhost:5000/iconUpload/icon',\n        formData,\n        {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        },\n      )\n      const { fileName, filePath } = res.data\n      // console.log('These are the headers', res.headers)\n      if (res.status === 200) {\n        console.log('File was uploaded successfully ' + res.status)\n      }\n      setUploadedFile({ fileName, filePath })\n    } catch (err) {\n      if (err.response.status === 500) {\n        console.error('There is a problem with the server ' + err.message)\n      } else {\n        //This message is from the server if no file is uploaded\n        // console.error('we had an error??? ' + err.response.data.msg)\n        console.error(err.response.data.msg)\n      }\n    }\n  }\n\n\n  const getImagelist = useCallback(() => {\n    axios\n      .get('http://localhost:5000/iconUpload/iconList')\n      .then((res) => {\n        console.log('this is the res', res.data)\n        return res.data\n      })\n      .then((imagelist) => {\n        setImagelist(imagelist)\n      })\n  }, [setImagelist])\n  useEffect(() => {\n    getImagelist()\n  }, [uploadedFile, getImagelist])\n\n  // If the Icon button is selected\n\n  if (props.mediatype === 'Icon') {\n    return (\n      <Card style={{ height: '25rem' }}>\n        <Card.Body className=\"modalUpload\">\n          <Card.Title className=\"mb-2 text-muted\">\n            {props.mediatype} Upload\n          </Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            Select {props.mediatype} to Upload\n          </Card.Subtitle>\n          <Card.Text>\n            <>\n              {/* <div className=\"mb-2\"> */}\n              <div>\n                <form onSubmit={onSubmit}>\n                  {/* <div className=\"input-group mb-3\"> */}\n                  <div>\n                    <input\n                      type=\"file\"\n                      // className=\"form-control mb-5\"\n                      className=\"modalUpload\"\n                      // id=\"inputGroupFile02\"\n                      accept={`${props.filetype}/jpg, ${props.filetype}/jpeg, ${props.filetype}/png, ${props.filetype}/bmp`}\n                      onChange={onChange}\n                    />\n                    <input\n                      type=\"submit\"\n                      value={`Submit`}\n                      // className=\"btn btn-primary btn-block\"\n                      className=\"btn2\"\n                      onClick={() => getImagelist()}\n                    />\n\n                    {/* <label\n                      className=\"id=inputGroupFile02\"\n                      htmlFor=\"inputGroupFile02\"\n                    ></label> */}\n                    <ListGroup\n                      action\n                      onClick={(event) => {\n                        props.getIcon(event.target.firstChild.data)\n                      }}\n                    >\n                      {imagelist?.map((picture, index) => {\n                        return (\n                          <ListGroup.Item action key={index} value={picture}>\n                            {picture}\n                          </ListGroup.Item>\n                        )\n                      })}\n                    </ListGroup>\n                  </div>\n                </form>\n              </div>\n            </>\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    )\n  }\n  return (\n    <Card style={{ width: '16rem', margin: '16px' }}>\n      <Card.Body>\n        <Card.Title>{props.mediatype} Upload</Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          Select {props.mediatype} to Upload\n        </Card.Subtitle>\n        <Card.Text>\n          <>\n            <div className=\"mb-2\">\n              <form onSubmit={onSubmit}>\n                <div className=\"input-group mb-3\">\n                  <input\n                    type=\"file\"\n                    className=\"form-control mb-5\"\n                    id=\"inputGroupFile02\"\n                    accept={`${props.filetype}/gif, ${props.filetype}/png, ${props.filetype}/jpg`}\n                    onChange={onChange}\n                  />\n                  <input\n                    type=\"submit\"\n                    value={`Submit`}\n                    // className=\"btn btn-primary btn-block\"\n                    className=\"btn1\"\n                  />\n\n                  <label\n                    className=\"id=inputGroupFile02\"\n                    htmlFor=\"inputGroupFile02\"\n                  ></label>\n                </div>\n              </form>\n            </div>\n          </>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default IconUpload\n",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"142","line":2,"column":16,"nodeType":"140","messageId":"141","endLine":2,"endColumn":22},{"ruleId":"138","severity":1,"message":"143","line":2,"column":24,"nodeType":"140","messageId":"141","endLine":2,"endColumn":28},{"ruleId":"138","severity":1,"message":"142","line":2,"column":16,"nodeType":"140","messageId":"141","endLine":2,"endColumn":22},{"ruleId":"138","severity":1,"message":"143","line":2,"column":24,"nodeType":"140","messageId":"141","endLine":2,"endColumn":28},{"ruleId":"138","severity":1,"message":"144","line":1,"column":27,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"138","severity":1,"message":"145","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":13},{"ruleId":"138","severity":1,"message":"146","line":2,"column":22,"nodeType":"140","messageId":"141","endLine":2,"endColumn":31},{"ruleId":"138","severity":1,"message":"147","line":8,"column":8,"nodeType":"140","messageId":"141","endLine":8,"endColumn":12},{"ruleId":"138","severity":1,"message":"142","line":3,"column":34,"nodeType":"140","messageId":"141","endLine":3,"endColumn":40},{"ruleId":"138","severity":1,"message":"148","line":12,"column":10,"nodeType":"140","messageId":"141","endLine":12,"endColumn":15},{"ruleId":"138","severity":1,"message":"149","line":13,"column":11,"nodeType":"140","messageId":"141","endLine":13,"endColumn":22},{"ruleId":"138","severity":1,"message":"150","line":45,"column":18,"nodeType":"140","messageId":"141","endLine":45,"endColumn":27},{"ruleId":"151","severity":1,"message":"152","line":224,"column":6,"nodeType":"153","endLine":224,"endColumn":24,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":12,"column":7,"nodeType":"157","endLine":18,"endColumn":9},{"ruleId":"138","severity":1,"message":"158","line":11,"column":10,"nodeType":"140","messageId":"141","endLine":11,"endColumn":18},{"ruleId":"138","severity":1,"message":"159","line":14,"column":10,"nodeType":"140","messageId":"141","endLine":14,"endColumn":18},{"ruleId":"138","severity":1,"message":"160","line":14,"column":20,"nodeType":"140","messageId":"141","endLine":14,"endColumn":31},{"ruleId":"138","severity":1,"message":"149","line":15,"column":10,"nodeType":"140","messageId":"141","endLine":15,"endColumn":21},{"ruleId":"138","severity":1,"message":"161","line":15,"column":23,"nodeType":"140","messageId":"141","endLine":15,"endColumn":37},{"ruleId":"138","severity":1,"message":"139","line":1,"column":29,"nodeType":"140","messageId":"141","endLine":1,"endColumn":37},{"ruleId":"138","severity":1,"message":"162","line":11,"column":10,"nodeType":"140","messageId":"141","endLine":11,"endColumn":16},{"ruleId":"151","severity":1,"message":"163","line":91,"column":6,"nodeType":"153","endLine":91,"endColumn":31,"suggestions":"164"},{"ruleId":"138","severity":1,"message":"142","line":3,"column":34,"nodeType":"140","messageId":"141","endLine":3,"endColumn":40},{"ruleId":"138","severity":1,"message":"165","line":5,"column":8,"nodeType":"140","messageId":"141","endLine":5,"endColumn":12},{"ruleId":"138","severity":1,"message":"166","line":1,"column":51,"nodeType":"140","messageId":"141","endLine":1,"endColumn":61},{"ruleId":"138","severity":1,"message":"158","line":7,"column":10,"nodeType":"140","messageId":"141","endLine":7,"endColumn":18},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Card' is defined but never used.","'useEffect' is defined but never used.","'Nav' is defined but never used.","'Jumbotron' is defined but never used.","'vid2' is defined but never used.","'error' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'setCanvas' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tick'. Either include it or remove the dependency array.","ArrayExpression",["169"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'filename' is assigned a value but never used.","'playlist' is assigned a value but never used.","'setPlaylist' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","'source' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadSongIntoAudio'. Either include it or remove the dependency array.",["170"],"'wave' is defined but never used.","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [sliderM, sliderN, tick]",{"range":"175","text":"176"},"Update the dependencies array to be: [currentSongIndex, audio, loadSongIntoAudio]",{"range":"177","text":"178"},[5786,5804],"[sliderM, sliderN, tick]",[2697,2722],"[currentSongIndex, audio, loadSongIntoAudio]"]