<<<<<<< HEAD
[{"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\index.js":"1","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\App.js":"2","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\TemplatesPage.js":"3","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Navbars\\Navigation.js":"4","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\About.js":"5","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Home.js":"6","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Displayer.js":"7","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\IconInteractions\\InsertIcon.js":"8","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\UploadAudio\\AudioUpload.js":"9","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\UploadBackground\\backgroundUpload.js":"10","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\IconInteractions\\IconUpload.js":"11","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Login.js":"12"},{"size":404,"mtime":1611804724730,"results":"13","hashOfConfig":"14"},{"size":1348,"mtime":1612648242589,"results":"15","hashOfConfig":"14"},{"size":207,"mtime":1611177150255,"results":"16","hashOfConfig":"14"},{"size":2485,"mtime":1612648242591,"results":"17","hashOfConfig":"14"},{"size":1248,"mtime":1611804724707,"results":"18","hashOfConfig":"14"},{"size":2448,"mtime":1612301689198,"results":"19","hashOfConfig":"14"},{"size":6150,"mtime":1612648454409,"results":"20","hashOfConfig":"14"},{"size":396,"mtime":1612301689200,"results":"21","hashOfConfig":"14"},{"size":2859,"mtime":1612503513351,"results":"22","hashOfConfig":"14"},{"size":2831,"mtime":1612301689208,"results":"23","hashOfConfig":"14"},{"size":2783,"mtime":1612301689199,"results":"24","hashOfConfig":"14"},{"size":2381,"mtime":1612648242590,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"mpxc4k",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"28"},"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\index.js",[],["60","61"],"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\App.js",["62"],"import React, { useState } from 'react'\r\nimport './App.css'\r\nimport Navigation from './Components/Navbars/Navigation'\r\nimport About from './Components/About'\r\nimport TemplatesPage from './Components/TemplatesPage'\r\nimport Home from './Components/Home'\r\nimport Login from './Components/Login'\r\n\r\nconst App = () => {\r\n  const [route, setRoute] = useState('signout')\r\n  const [isSignedIn, setIsSignedIn] = useState(false)\r\n  const [displayPage, setDisplayPage] = useState(Home)\r\n\r\n  if (isSignedIn === 'signout') {\r\n    setIsSignedIn(false)\r\n  } else if (isSignedIn === 'signin') {\r\n    setIsSignedIn(true)\r\n  }\r\n\r\n  const onRouteChange = (route) => {\r\n    if (route === 'signout') {\r\n      setRoute({ isSignedIn: false })\r\n    } else if (route === 'signin') {\r\n      setRoute({ isSignedIn: true })\r\n    } else if (route === 'Home') {\r\n      setDisplayPage(<Home />)\r\n    } else if (route === 'About') {\r\n      setDisplayPage(<About />)\r\n    } else if (route === 'TemplatesPage') {\r\n      setDisplayPage(<TemplatesPage />)\r\n    } else if (route === 'Login') {\r\n      setDisplayPage(<Login />)\r\n    }\r\n    setRoute({ route: route })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Frontscr\">\r\n        <Navigation isSignedIn={setIsSignedIn} onRouteChange={onRouteChange} />\r\n        {displayPage}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\TemplatesPage.js",[],"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Navbars\\Navigation.js",["63"],"import React from 'react'\r\nimport { Navbar, Nav, Button } from 'react-bootstrap'\r\nimport Login from '../Login';\r\nimport pic2 from './Logo2.png'\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n  \r\n  function openLogin(open){\r\n    if (open){\r\n      return \r\n      <>\r\n      <Login />\r\n      </>\r\n    } else {\r\n      console.log('not working');\r\n    }\r\n\r\n      \r\n   \r\n  }\r\n\r\n  if (isSignedIn === true) {\r\n    return (\r\n      <>\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\" sticky=\"top\">\r\n          <Navbar.Brand href=\"/Home\">\r\n            <img src={pic2} alt={''} width={80} height={80} />\r\n          </Navbar.Brand>\r\n\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              {/* <Nav.Link onClick={() => onRouteChange('Profile')} >My Account</Nav.Link> */}\r\n              <Nav.Link onClick={() => onRouteChange('TemplatesPage')}>\r\n                Templates\r\n              </Nav.Link>\r\n            </Nav>\r\n            <Button\r\n              onClick={() => onRouteChange('signout')}\r\n              variant=\"outline-info\"\r\n            >\r\n              Signout\r\n            </Button>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </>\r\n    )\r\n  } else {\r\n    return (\r\n      <>\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\" sticky=\"top\">\r\n          <Navbar.Brand href=\"/Home\" style={{ fontSize: 23 }}>\r\n            <img src={pic2} alt={''} width={80} height={80} />\r\n            HummingBird\r\n          </Navbar.Brand>\r\n\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto\" style={{ fontSize: 23 }}>\r\n              <Nav.Link onClick={() => onRouteChange('About')}>About</Nav.Link>\r\n              <Nav.Link onClick={() => onRouteChange('TemplatesPage')}>\r\n                Templates\r\n              </Nav.Link>\r\n              <Nav.Link>My Account</Nav.Link>\r\n              {/* <Nav.Link onClick = {()=>onRouteChange('contact')}  variant=\"outline-info\">Contact us</Nav.Link>  */}\r\n            </Nav>\r\n            <Button \r\n            onClick={() => openLogin()}\r\n            variant=\"outline-info\">\r\n              Sign In\r\n            </Button>\r\n            {/* <Button variant=\"outline-info\">\r\n              Sign Up\r\n            </Button> */}\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navigation\r\n","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\About.js",[],"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Home.js",[],"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Displayer.js",["64","65","66"],"import React, { createRef, useState, useEffect, useLayoutEffect } from 'react'\r\n\r\nimport axios from 'axios'\r\n\r\nconst UpdateWindowSize = () => {\r\n  const [size, setSize] = useState([1000, 1000])\r\n  useLayoutEffect(() => {\r\n    const updateSize = () => {\r\n      setSize([window.innerWidth, window.innerHeight])\r\n    }\r\n    window.addEventListener('resize', updateSize)\r\n    return () => window.removeEventListener('resize', updateSize)\r\n  }, [])\r\n  return size\r\n}\r\n\r\nlet rafId\r\n\r\nlet ctx, x_end, y_end, bar_height\r\n\r\nconst bars = 600 //  max 1030 - leave it in 555\r\nconst bar_width = 2 //  good in 1\r\nconst radius = 0 // innercircle\r\nlet audio\r\nlet audioContext\r\nlet source\r\nlet analyser\r\nlet frequency_array\r\nconst createAudioContext = () => {\r\n  audio = new Audio()\r\n\r\n  audioContext = new (window.AudioContext || window.webkitAudioContext)()\r\n  source = audioContext.createMediaElementSource(audio)\r\n  analyser = audioContext.createAnalyser()\r\n  source.connect(analyser)\r\n  analyser.connect(audioContext.destination)\r\n  frequency_array = new Uint8Array(analyser.frequencyBinCount)\r\n}\r\n\r\nconst Displayer = () => {\r\n  const [width, height] = UpdateWindowSize()\r\n  const [canvas, setCanvas] = useState(createRef())\r\n  const [isPaused, setIsPaused] = useState(true)\r\n  const [songSelect, setsongSelect] = useState()\r\n  const [currentSong, setCurrentSong] = useState(0)\r\n  const center_x = width / 2\r\n  const center_y = height / 2\r\n\r\n  const getSong = async (song) => {\r\n    createAudioContext()\r\n    const response = await axios.get(\r\n      `http://localhost:5000/upload/media/${song}`,\r\n      { responseType: 'blob' },\r\n    )\r\n    audio.src = URL.createObjectURL(response.data)\r\n    audio.load()\r\n    // audio.play()\r\n  }\r\n  function animationLooper(canvas) {\r\n    canvas.width = width\r\n    canvas.height = height\r\n    ctx = canvas.getContext('2d')\r\n    for (let i = 0; i < bars; i++) {\r\n      //divide a circle into equal part\r\n      const rads = (Math.PI * 2) / bars\r\n      // Math is magical - you can make lots of visualizer\r\n      // this 4.5 decides the canves size\r\n      bar_height = frequency_array[i] * 2.5\r\n      const x = center_x + Math.cos(rads * i) * radius\r\n      const y = center_y + Math.sin(rads * i) * radius\r\n      x_end = center_x + Math.cos(rads * i) * (radius + bar_height)\r\n      y_end = center_y + Math.sin(rads * i) * (radius + bar_height)\r\n      //draw a bar\r\n      drawBar(x, y, x_end, y_end, i, ctx, canvas)\r\n    }\r\n  }\r\n  function drawBar(x1 = 0, y1 = 0, x2 = 0, y2 = 0, i, ctx) {\r\n    i = (i + new Date().getTime() * 2) % 600 //  2 is an OK number,  600/6 =100 integer is good\r\n    const gradient = ctx.createLinearGradient(x1, y1, x2, y2)\r\n    gradient.addColorStop(0, 'rgba(0, 255, 0, 255)')\r\n    gradient.addColorStop(1, 'rgba(254, 0, 0, 255)')\r\n    ctx.fillStyle = 'pink'\r\n    let lineColor\r\n    if (i < 100) {\r\n      // lineColor = \"red\"\r\n      lineColor =\r\n        'rgb(' +\r\n        Math.abs(275 - i) +\r\n        ', ' +\r\n        Math.abs(175 - i / 2) +\r\n        ', ' +\r\n        1000 +\r\n        ')'\r\n    } else if (i < 200) {\r\n      // lineColor=\"blue\"\r\n      lineColor =\r\n        'rgb(' +\r\n        1000 +\r\n        ', ' +\r\n        Math.abs(275 - i) +\r\n        ', ' +\r\n        Math.abs(175 - i / 2) +\r\n        ')'\r\n    } else if (i < 300) {\r\n      // lineColor=\"green\"\r\n      lineColor =\r\n        'rgb(' +\r\n        Math.abs(175 - i / 2) +\r\n        ', ' +\r\n        1000 +\r\n        ', ' +\r\n        Math.abs(275 - i) +\r\n        ')'\r\n    } else if (i < 400) {\r\n      // lineColor = \"red\"\r\n      lineColor =\r\n        'rgb(' +\r\n        Math.abs(175 - i / 2) +\r\n        ', ' +\r\n        1000 +\r\n        ', ' +\r\n        Math.abs(275 - i) +\r\n        ')'\r\n    } else if (i < 500) {\r\n      // lineColor=\"blue\"\r\n      lineColor =\r\n        'rgb(' +\r\n        1000 +\r\n        ', ' +\r\n        Math.abs(275 - i) +\r\n        ', ' +\r\n        Math.abs(175 - i / 2) +\r\n        ')'\r\n    } else if (i < 600) {\r\n      // lineColor=\"green\"\r\n      lineColor =\r\n        'rgb(' +\r\n        Math.abs(275 - i) +\r\n        ', ' +\r\n        Math.abs(175 - i / 2) +\r\n        ', ' +\r\n        1000 +\r\n        ')'\r\n    }\r\n\r\n    ctx.strokeStyle = lineColor\r\n    ctx.lineWidth = bar_width\r\n    ctx.beginPath()\r\n    ctx.moveTo(x1, y1)\r\n    ctx.lineTo(x2, y2)\r\n    ctx.stroke()\r\n  }\r\n\r\n  const togglePlay = () => {\r\n    // createAudioContext()\r\n    if (audio.paused) {\r\n      audioContext.resume()\r\n      audio.play()\r\n      setIsPaused(false)\r\n      rafId = requestAnimationFrame(tick)\r\n    } else {\r\n      audio.pause()\r\n      setIsPaused(true)\r\n      cancelAnimationFrame(rafId)\r\n    }\r\n  }\r\n\r\n  function tick() {\r\n    animationLooper(canvas.current)\r\n    analyser.getByteTimeDomainData(frequency_array)\r\n    rafId = requestAnimationFrame(tick)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getSongList = async () => {\r\n      let res = await axios.get('http://localhost:5000/upload/list')\r\n      setsongSelect(res.data)\r\n      console.log(setsongSelect)\r\n    }\r\n    getSongList()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"audioControlBackground\">\r\n      <div className=\"buttonWrapper\">\r\n        <button\r\n          onClick={() => {\r\n            if (audio) {\r\n              togglePlay()\r\n            }\r\n          }}\r\n          style={{\r\n            width: '200px',\r\n            backgroundColor: isPaused\r\n              ? // this is the play/pause button colors\r\n                'yellow'\r\n              : 'green',\r\n          }}\r\n        >\r\n          {isPaused ? 'Play' : 'Pause'}\r\n        </button>\r\n\r\n        <select\r\n          onChange={(e) => {\r\n            getSong(e.target.value)\r\n          }}\r\n        >\r\n          {' '}\r\n          <option>Choose A Song</option>\r\n          {songSelect &&\r\n            songSelect.map((song) => {\r\n              return <option value={song}>{song}</option>\r\n            })}\r\n        </select>\r\n      </div>\r\n      <div className=\"songInfoWrapper\">\r\n        {/* Inserted by SN */}\r\n\r\n        {/* Removed by SN */}\r\n        {/* < h3 style={{ color: textColor }}>{songName}</h3> */}\r\n      </div>\r\n      <div className=\"canvasWrapper\">\r\n        <canvas ref={canvas} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Displayer\r\n","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\IconInteractions\\InsertIcon.js",["67","68","69","70","71"],"import React from 'react'\r\nimport { Container, Row, Col, Image } from 'react-bootstrap'\r\nimport icon from '../Images/Daco.png'\r\n\r\n//Icon input\r\nconst InsertIcon = () => {\r\n  return (\r\n    <div className=\"iconWrapper\">\r\n      <img\r\n        style={{\r\n          width: '20%',\r\n          height: '20%',\r\n        }}\r\n        src={`${icon}`}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InsertIcon\r\n","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\UploadAudio\\AudioUpload.js",["72","73"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst AudioUpload = () => {\r\n  //Need to use a hook to set text in the label to the file namespace\r\n  const [file, setFile] = useState('')\r\n  const [filename, setFilename] = useState('Choose File')\r\n  const [uploadedFile, setUploadedFile] = useState({})\r\n\r\n  const onChange = (e) => {\r\n    //HTML file uploads come as an array so we want the index of the first file\r\n    setFile(e.target.files[0])\r\n    setFilename(e.target.files[0].name)\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    // e.preventDefault() used to prevent submitting by accident by preventing normal submitting\r\n    e.preventDefault()\r\n    const formData = new FormData()\r\n    formData.append('file', file)\r\n\r\n    try {\r\n      //Need to connect to the server the endpoint is media\r\n      const res = await axios.post(\r\n        'http://localhost:5000/upload/media',\r\n        formData,\r\n        {\r\n          headers: { 'Content-Type': 'multipart/form-data' },\r\n        },\r\n      )\r\n      const { fileName, filePath } = res.data\r\n      console.log(res.headers)\r\n      if (res.status === 200) {\r\n        console.log('Was uploaded successfully ' + res.status)\r\n      }\r\n      setUploadedFile({ fileName, filePath })\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        console.error('There is a problem with the server ' + err.message)\r\n      } else {\r\n        //This message is from the server if no file is uploaded\r\n        // console.error('we had an error??? ' + err.response.data.msg)\r\n        console.error(err.response.data.msg)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card style={{ width: '18rem', margin: '20px' }}>\r\n      <Card.Body>\r\n        <Card.Title>Audio Upload</Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">\r\n          Select audio to upload\r\n        </Card.Subtitle>\r\n        <Card.Text>\r\n          <>\r\n            <div className=\"mb-2\">\r\n              <form onSubmit={onSubmit}>\r\n                <div className=\"input-group mb-3\">\r\n                  <input\r\n                    type=\"file\"\r\n                    className=\"form-control mb-5\"\r\n                    id=\"inputGroupFile02\"\r\n                    accept=\"audio/wav, audio/mp3, audio/mpeg\"\r\n                    onChange={onChange}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"UploadAudio\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                  />\r\n\r\n                  <label\r\n                    className=\"id=inputGroupFile02\"\r\n                    htmlFor=\"inputGroupFile02\"\r\n                  ></label>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AudioUpload\r\n",["74","75"],"C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\UploadBackground\\backgroundUpload.js",["76","77"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst BackgroundUpload = () => {\r\n  //Need to use a hook to set text in the label to the file namespace\r\n  const [file, setFile] = useState('')\r\n  const [filename, setFilename] = useState('Choose File')\r\n  const [uploadedFile, setUploadedFile] = useState({})\r\n\r\n  const onChange = (e) => {\r\n    //HTML file uploads come as an array so we want the index of the first file\r\n    setFile(e.target.files[0])\r\n    setFilename(e.target.files[0].name)\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    //used to prevent submitting by accident by preventing normal submitting\r\n    e.preventDefault()\r\n    const formData = new FormData()\r\n    formData.append('file', file)\r\n\r\n    try {\r\n      //Need to connect to the server the endpoint is media\r\n      const res = await axios.post(\r\n        'http://localhost:5000/upload/media',\r\n        formData,\r\n        {\r\n          headers: { 'Content-Type': 'multipart/form-data' },\r\n        },\r\n      )\r\n      const { fileName, filePath } = res.data\r\n      if (res.status === 200) {\r\n        console.log('Was uploaded successfully ' + res.status)\r\n      }\r\n      setUploadedFile({ fileName, filePath })\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        console.error('There is a problem with the server ' + err.message)\r\n      } else {\r\n        //This message is from the server if no file is uploaded\r\n        console.error(err.response.data.msg)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    //The fragment allows to group children without creating extra nodes\r\n    <Card style={{ width: '18rem', margin: '24px' }}>\r\n      <Card.Body>\r\n        <Card.Title>Upload Background</Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">\r\n          Select a background to upload\r\n        </Card.Subtitle>\r\n        <Card.Text>\r\n          <>\r\n            <div className=\"mb-2\">\r\n              <form onSubmit={onSubmit}>\r\n                <div className=\"input-group mb-3\">\r\n                  <input\r\n                    type=\"file\"\r\n                    className=\"form-control\"\r\n                    id=\"inputGroupFile02\"\r\n                    accept=\"image/gif, image/jpeg, image/jpg\"\r\n                    onChange={onChange}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Upload Background\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                  />\r\n\r\n                  <label\r\n                    className=\"id=inputGroupFile02\"\r\n                    htmlFor=\"inputGroupFile02\"\r\n                  ></label>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default BackgroundUpload\r\n","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\IconInteractions\\IconUpload.js",["78","79"],"import React, { useState, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst IconUpload = () => {\r\n  //Need to use a hook to set text in the label to the file namespace\r\n  const [file, setFile] = useState('')\r\n  const [filename, setFilename] = useState('Choose File')\r\n  const [uploadedFile, setUploadedFile] = useState({})\r\n\r\n  const onChange = (e) => {\r\n    //HTML file uploads come as an array so we want the index of the first file\r\n    setFile(e.target.files[0])\r\n    setFilename(e.target.files[0].name)\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    //used to prevent submitting by accident by preventing normal submitting\r\n    e.preventDefault()\r\n    const formData = new FormData()\r\n    formData.append('file', file)\r\n    console.log(formData)\r\n    try {\r\n      //Need to connect to the server this is the endpoint\r\n      const res = await axios.post(\r\n        'http://localhost:5000/upload/icon',\r\n        formData,\r\n        {\r\n          headers: { 'Content-Type': 'multipart/form-data' },\r\n        },\r\n      )\r\n      const { fileName, filePath } = res.data\r\n      if (res.status === 200) {\r\n        console.log('Icon was uploaded successfully ' + res.status)\r\n      }\r\n      setUploadedFile({ fileName, filePath })\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        console.error('There is a problem with the server ' + err.message)\r\n      } else {\r\n        //This message is from the server if no file is uploaded\r\n        console.error(err.response.data.msg)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card style={{ width: '18rem', margin: '24px' }}>\r\n      <Card.Body>\r\n        <Card.Title>Upload Icon</Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">\r\n          Select an Icon to upload\r\n        </Card.Subtitle>\r\n        <Card.Text>\r\n          <>\r\n            <div className=\"mb-2\">\r\n              <form onSubmit={onSubmit}>\r\n                <div className=\"input-group mb-3\">\r\n                  <input\r\n                    type=\"file\"\r\n                    className=\"form-control\"\r\n                    id=\"inputGroupFile02\"\r\n                    accept=\"image/gif, image/png, image/jpeg, image/jpg\"\r\n                    onChange={onChange}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Upload Background\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                  />\r\n\r\n                  <label\r\n                    className=\"id=inputGroupFile02\"\r\n                    htmlFor=\"inputGroupFile02\"\r\n                  ></label>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default IconUpload\r\n","C:\\Users\\samsu\\Desktop\\SAMSUDEEN\\EvolveU_FullStackDev\\PROJ_3\\musicVisualizerApp\\client\\src\\Components\\Login.js",["80","81"],"import React, { useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst Login = () => {\r\n  const [loginEmail, setLoginEmail] = useState(\"\")\r\n  const [loginPassword, setLoginPassword] = useState(\"\")\r\n  // const [error, setError] = useState(\"\")\r\n  const [route, setRoute] = useState('Login')\r\n\r\n  function onEmailChange (event) {\r\n    setLoginEmail(event.target.value);\r\n  }\r\n\r\n  function onPasswordChange(event) {\r\n    setLoginPassword(event.target.value);\r\n  }\r\n\r\n  function onRouteChange(route) {\r\n    setRoute(route);\r\n  }\r\n\r\n  function onSubmitLogin () {\r\n    fetch('http://localhost:3000/signin', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: loginEmail,\r\n        password: loginPassword\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.loadUser(user)\r\n          this.onRouteChange('home');\r\n        }\r\n      })\r\n  }\r\n\r\n  return (\r\n\r\n    // <Modal.Dialog centered>\r\n      <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend >Sign In</legend>\r\n              <div className=\"mt3\">\r\n                <label htmlFor=\"email-address\">Email</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={onPasswordChange}\r\n                />\r\n              </div>\r\n              <Button\r\n              onClick={onSubmitLogin}\r\n              >Submit</Button>\r\n              <div className=\"lh-copy mt3\">\r\n              <p  onClick={onRouteChange('Register')} className=\"f6 link dim black db pointer\">Register</p>\r\n            </div>\r\n            </fieldset>\r\n\r\n    // </Modal.Dialog>\r\n\r\n  )\r\n}\r\n\r\nexport default Login\r\n",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":10,"column":10,"nodeType":"88","messageId":"89","endLine":10,"endColumn":15},{"ruleId":"90","severity":1,"message":"91","line":11,"column":7,"nodeType":"92","messageId":"93","endLine":13,"endColumn":10},{"ruleId":"86","severity":1,"message":"94","line":42,"column":18,"nodeType":"88","messageId":"89","endLine":42,"endColumn":27},{"ruleId":"86","severity":1,"message":"95","line":45,"column":10,"nodeType":"88","messageId":"89","endLine":45,"endColumn":21},{"ruleId":"86","severity":1,"message":"96","line":45,"column":23,"nodeType":"88","messageId":"89","endLine":45,"endColumn":37},{"ruleId":"86","severity":1,"message":"97","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":19},{"ruleId":"86","severity":1,"message":"98","line":2,"column":21,"nodeType":"88","messageId":"89","endLine":2,"endColumn":24},{"ruleId":"86","severity":1,"message":"99","line":2,"column":26,"nodeType":"88","messageId":"89","endLine":2,"endColumn":29},{"ruleId":"86","severity":1,"message":"100","line":2,"column":31,"nodeType":"88","messageId":"89","endLine":2,"endColumn":36},{"ruleId":"101","severity":1,"message":"102","line":9,"column":7,"nodeType":"103","endLine":15,"endColumn":9},{"ruleId":"86","severity":1,"message":"104","line":8,"column":10,"nodeType":"88","messageId":"89","endLine":8,"endColumn":18},{"ruleId":"86","severity":1,"message":"105","line":9,"column":10,"nodeType":"88","messageId":"89","endLine":9,"endColumn":22},{"ruleId":"82","replacedBy":"106"},{"ruleId":"84","replacedBy":"107"},{"ruleId":"86","severity":1,"message":"104","line":8,"column":10,"nodeType":"88","messageId":"89","endLine":8,"endColumn":18},{"ruleId":"86","severity":1,"message":"105","line":9,"column":10,"nodeType":"88","messageId":"89","endLine":9,"endColumn":22},{"ruleId":"86","severity":1,"message":"104","line":8,"column":10,"nodeType":"88","messageId":"89","endLine":8,"endColumn":18},{"ruleId":"86","severity":1,"message":"105","line":9,"column":10,"nodeType":"88","messageId":"89","endLine":9,"endColumn":22},{"ruleId":"86","severity":1,"message":"108","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":13},{"ruleId":"86","severity":1,"message":"87","line":9,"column":10,"nodeType":"88","messageId":"89","endLine":9,"endColumn":15},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'route' is assigned a value but never used.","Identifier","unusedVar","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'setCanvas' is assigned a value but never used.","'currentSong' is assigned a value but never used.","'setCurrentSong' is assigned a value but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Image' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'filename' is assigned a value but never used.","'uploadedFile' is assigned a value but never used.",["109"],["110"],"'Modal' is defined but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/index.js":"1","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/App.js":"2","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/TemplatesPage.js":"3","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/About.js":"4","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Home.js":"5","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Navbars/Navigation.js":"6","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/UploadBackground/backgroundUpload.js":"7","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Displayer.js":"8","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/IconInteractions/IconUpload.js":"9","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/IconInteractions/InsertIcon.js":"10","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/UploadAudio/AudioUpload.js":"11","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Login.js":"12"},{"size":389,"mtime":1611935111113,"results":"13","hashOfConfig":"14"},{"size":1301,"mtime":1612643947106,"results":"15","hashOfConfig":"14"},{"size":196,"mtime":1611168617430,"results":"16","hashOfConfig":"14"},{"size":1207,"mtime":1611935111111,"results":"17","hashOfConfig":"14"},{"size":2369,"mtime":1612552648608,"results":"18","hashOfConfig":"14"},{"size":2403,"mtime":1612643947107,"results":"19","hashOfConfig":"14"},{"size":2744,"mtime":1612122303180,"results":"20","hashOfConfig":"14"},{"size":5921,"mtime":1612649854724,"results":"21","hashOfConfig":"14"},{"size":2697,"mtime":1612122303176,"results":"22","hashOfConfig":"14"},{"size":376,"mtime":1612122303176,"results":"23","hashOfConfig":"14"},{"size":2699,"mtime":1612643947108,"results":"24","hashOfConfig":"14"},{"size":2302,"mtime":1612643947107,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1qwo52n",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/index.js",[],["57","58"],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/App.js",["59"],"import React, { useState } from 'react'\nimport './App.css'\nimport Navigation from './Components/Navbars/Navigation'\nimport About from './Components/About'\nimport TemplatesPage from './Components/TemplatesPage'\nimport Home from './Components/Home'\nimport Login from './Components/Login'\n\nconst App = () => {\n  const [route, setRoute] = useState('signout')\n  const [isSignedIn, setIsSignedIn] = useState(false)\n  const [displayPage, setDisplayPage] = useState(Home)\n\n  if (isSignedIn === 'signout') {\n    setIsSignedIn(false)\n  } else if (isSignedIn === 'signin') {\n    setIsSignedIn(true)\n  }\n\n  const onRouteChange = (route) => {\n    if (route === 'signout') {\n      setRoute({ isSignedIn: false })\n    } else if (route === 'signin') {\n      setRoute({ isSignedIn: true })\n    } else if (route === 'Home') {\n      setDisplayPage(<Home />)\n    } else if (route === 'About') {\n      setDisplayPage(<About />)\n    } else if (route === 'TemplatesPage') {\n      setDisplayPage(<TemplatesPage />)\n    } else if (route === 'Login') {\n      setDisplayPage(<Login />)\n    }\n    setRoute({ route: route })\n  }\n\n  return (\n    <>\n      <div className=\"Frontscr\">\n        <Navigation isSignedIn={setIsSignedIn} onRouteChange={onRouteChange} />\n        {displayPage}\n      </div>\n    </>\n  )\n}\n\nexport default App\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/TemplatesPage.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/About.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Home.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Navbars/Navigation.js",[],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/UploadBackground/backgroundUpload.js",["60","61"],"import React, { useState } from 'react'\nimport axios from 'axios'\nimport { Card } from 'react-bootstrap'\n\nconst BackgroundUpload = () => {\n  //Need to use a hook to set text in the label to the file namespace\n  const [file, setFile] = useState('')\n  const [filename, setFilename] = useState('Choose File')\n  const [uploadedFile, setUploadedFile] = useState({})\n\n  const onChange = (e) => {\n    //HTML file uploads come as an array so we want the index of the first file\n    setFile(e.target.files[0])\n    setFilename(e.target.files[0].name)\n  }\n\n  const onSubmit = async (e) => {\n    //used to prevent submitting by accident by preventing normal submitting\n    e.preventDefault()\n    const formData = new FormData()\n    formData.append('file', file)\n\n    try {\n      //Need to connect to the server the endpoint is media\n      const res = await axios.post(\n        'http://localhost:5000/upload/media',\n        formData,\n        {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        },\n      )\n      const { fileName, filePath } = res.data\n      if (res.status === 200) {\n        console.log('Was uploaded successfully ' + res.status)\n      }\n      setUploadedFile({ fileName, filePath })\n    } catch (err) {\n      if (err.response.status === 500) {\n        console.error('There is a problem with the server ' + err.message)\n      } else {\n        //This message is from the server if no file is uploaded\n        console.error(err.response.data.msg)\n      }\n    }\n  }\n\n  return (\n    //The fragment allows to group children without creating extra nodes\n    <Card style={{ width: '18rem', margin: '24px' }}>\n      <Card.Body>\n        <Card.Title>Upload Background</Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          Select a background to upload\n        </Card.Subtitle>\n        <Card.Text>\n          <>\n            <div className=\"mb-2\">\n              <form onSubmit={onSubmit}>\n                <div className=\"input-group mb-3\">\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    id=\"inputGroupFile02\"\n                    accept=\"image/gif, image/jpeg, image/jpg\"\n                    onChange={onChange}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Upload Background\"\n                    className=\"btn btn-primary btn-block\"\n                  />\n\n                  <label\n                    className=\"id=inputGroupFile02\"\n                    htmlFor=\"inputGroupFile02\"\n                  ></label>\n                </div>\n              </form>\n            </div>\n          </>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default BackgroundUpload\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Displayer.js",["62","63","64"],"/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/IconInteractions/IconUpload.js",["65","66"],"import React, { useState, Fragment } from 'react'\nimport axios from 'axios'\nimport { Card } from 'react-bootstrap'\n\nconst IconUpload = () => {\n  //Need to use a hook to set text in the label to the file namespace\n  const [file, setFile] = useState('')\n  const [filename, setFilename] = useState('Choose File')\n  const [uploadedFile, setUploadedFile] = useState({})\n\n  const onChange = (e) => {\n    //HTML file uploads come as an array so we want the index of the first file\n    setFile(e.target.files[0])\n    setFilename(e.target.files[0].name)\n  }\n\n  const onSubmit = async (e) => {\n    //used to prevent submitting by accident by preventing normal submitting\n    e.preventDefault()\n    const formData = new FormData()\n    formData.append('file', file)\n    console.log(formData)\n    try {\n      //Need to connect to the server this is the endpoint\n      const res = await axios.post(\n        'http://localhost:5000/upload/icon',\n        formData,\n        {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        },\n      )\n      const { fileName, filePath } = res.data\n      if (res.status === 200) {\n        console.log('Icon was uploaded successfully ' + res.status)\n      }\n      setUploadedFile({ fileName, filePath })\n    } catch (err) {\n      if (err.response.status === 500) {\n        console.error('There is a problem with the server ' + err.message)\n      } else {\n        //This message is from the server if no file is uploaded\n        console.error(err.response.data.msg)\n      }\n    }\n  }\n\n  return (\n    <Card style={{ width: '18rem', margin: '24px' }}>\n      <Card.Body>\n        <Card.Title>Upload Icon</Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          Select an Icon to upload\n        </Card.Subtitle>\n        <Card.Text>\n          <>\n            <div className=\"mb-2\">\n              <form onSubmit={onSubmit}>\n                <div className=\"input-group mb-3\">\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    id=\"inputGroupFile02\"\n                    accept=\"image/gif, image/png, image/jpeg, image/jpg\"\n                    onChange={onChange}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Upload Background\"\n                    className=\"btn btn-primary btn-block\"\n                  />\n\n                  <label\n                    className=\"id=inputGroupFile02\"\n                    htmlFor=\"inputGroupFile02\"\n                  ></label>\n                </div>\n              </form>\n            </div>\n          </>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default IconUpload\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/IconInteractions/InsertIcon.js",["67","68","69","70","71"],"import React from 'react'\nimport { Container, Row, Col, Image } from 'react-bootstrap'\nimport icon from '../Images/Daco.png'\n\n//Icon input\nconst InsertIcon = () => {\n  return (\n    <div className=\"iconWrapper\">\n      <img\n        style={{\n          width: '20%',\n          height: '20%',\n        }}\n        src={`${icon}`}\n      />\n    </div>\n  )\n}\n\nexport default InsertIcon\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/UploadAudio/AudioUpload.js",["72","73"],"import React, { useState } from 'react'\nimport axios from 'axios'\nimport { Card } from 'react-bootstrap'\n\nconst AudioUpload = () => {\n  //Need to use a hook to set text in the label to the file namespace\n  const [file, setFile] = useState('')\n  const [filename, setFilename] = useState('Choose File')\n  const [uploadedFile, setUploadedFile] = useState({})\n\n  const onChange = (e) => {\n    //HTML file uploads come as an array so we want the index of the first file\n    setFile(e.target.files[0])\n    setFilename(e.target.files[0].name)\n  }\n\n  const onSubmit = async (e) => {\n    // e.preventDefault() used to prevent submitting by accident by preventing normal submitting\n    e.preventDefault()\n    const formData = new FormData()\n    formData.append('file', file)\n\n    try {\n      //Need to connect to the server the endpoint is media\n      const res = await axios.post(\n        'http://localhost:5000/upload/media',\n        formData,\n        {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        },\n      )\n      const { fileName, filePath } = res.data\n      console.log(res.headers)\n      if (res.status === 200) {\n        console.log('Was uploaded successfully ' + res.status)\n      }\n      setUploadedFile({ fileName, filePath })\n    } catch (err) {\n      if (err.response.status === 500) {\n        console.error('There is a problem with the server ' + err.message)\n      } else {\n        //This message is from the server if no file is uploaded\n        console.error(err.response.data.msg)\n      }\n    }\n  }\n\n  return (\n    <Card style={{ width: '18rem', margin: '20px' }}>\n      <Card.Body>\n        <Card.Title>Audio Upload</Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          Select audio to upload\n        </Card.Subtitle>\n        <Card.Text>\n          <>\n            <div className=\"mb-2\">\n              <form onSubmit={onSubmit}>\n                <div className=\"input-group mb-3\">\n                  <input\n                    type=\"file\"\n                    className=\"form-control mb-5\"\n                    id=\"inputGroupFile02\"\n                    accept=\"audio/wav, audio/mp3, audio/mpeg\"\n                    onChange={onChange}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"UploadAudio\"\n                    className=\"btn btn-primary btn-block\"\n                  />\n\n                  <label\n                    className=\"id=inputGroupFile02\"\n                    htmlFor=\"inputGroupFile02\"\n                  ></label>\n                </div>\n              </form>\n            </div>\n          </>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default AudioUpload\n","/Users/deanerfree/Downloads/EvolveU/the-mandalorians/musicVisualizerApp/client/src/Components/Login.js",["74","75"],"import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\nconst Login = () => {\n  const [loginEmail, setLoginEmail] = useState(\"\")\n  const [loginPassword, setLoginPassword] = useState(\"\")\n  // const [error, setError] = useState(\"\")\n  const [route, setRoute] = useState('Login')\n\n  function onEmailChange (event) {\n    setLoginEmail(event.target.value);\n  }\n\n  function onPasswordChange(event) {\n    setLoginPassword(event.target.value);\n  }\n\n  function onRouteChange(route) {\n    setRoute(route);\n  }\n\n  function onSubmitLogin () {\n    fetch('http://localhost:3000/signin', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: loginEmail,\n        password: loginPassword\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          this.loadUser(user)\n          this.onRouteChange('home');\n        }\n      })\n  }\n\n  return (\n\n    // <Modal.Dialog centered>\n      <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend >Sign In</legend>\n              <div className=\"mt3\">\n                <label htmlFor=\"email-address\">Email</label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onChange={onEmailChange}\n                />\n              </div>\n              <div className=\"mv3\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={onPasswordChange}\n                />\n              </div>\n              <Button\n              onClick={onSubmitLogin}\n              >Submit</Button>\n              <div className=\"lh-copy mt3\">\n              <p  onClick={onRouteChange('Register')} className=\"f6 link dim black db pointer\">Register</p>\n            </div>\n            </fieldset>\n\n    // </Modal.Dialog>\n\n  )\n}\n\nexport default Login\n",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":10,"column":10,"nodeType":"82","messageId":"83","endLine":10,"endColumn":15},{"ruleId":"80","severity":1,"message":"84","line":8,"column":10,"nodeType":"82","messageId":"83","endLine":8,"endColumn":18},{"ruleId":"80","severity":1,"message":"85","line":9,"column":10,"nodeType":"82","messageId":"83","endLine":9,"endColumn":22},{"ruleId":"80","severity":1,"message":"86","line":42,"column":18,"nodeType":"82","messageId":"83","endLine":42,"endColumn":27},{"ruleId":"80","severity":1,"message":"87","line":45,"column":10,"nodeType":"82","messageId":"83","endLine":45,"endColumn":21},{"ruleId":"80","severity":1,"message":"88","line":45,"column":23,"nodeType":"82","messageId":"83","endLine":45,"endColumn":37},{"ruleId":"80","severity":1,"message":"84","line":8,"column":10,"nodeType":"82","messageId":"83","endLine":8,"endColumn":18},{"ruleId":"80","severity":1,"message":"85","line":9,"column":10,"nodeType":"82","messageId":"83","endLine":9,"endColumn":22},{"ruleId":"80","severity":1,"message":"89","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":19},{"ruleId":"80","severity":1,"message":"90","line":2,"column":21,"nodeType":"82","messageId":"83","endLine":2,"endColumn":24},{"ruleId":"80","severity":1,"message":"91","line":2,"column":26,"nodeType":"82","messageId":"83","endLine":2,"endColumn":29},{"ruleId":"80","severity":1,"message":"92","line":2,"column":31,"nodeType":"82","messageId":"83","endLine":2,"endColumn":36},{"ruleId":"93","severity":1,"message":"94","line":9,"column":7,"nodeType":"95","endLine":15,"endColumn":9},{"ruleId":"80","severity":1,"message":"84","line":8,"column":10,"nodeType":"82","messageId":"83","endLine":8,"endColumn":18},{"ruleId":"80","severity":1,"message":"85","line":9,"column":10,"nodeType":"82","messageId":"83","endLine":9,"endColumn":22},{"ruleId":"80","severity":1,"message":"96","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":13},{"ruleId":"80","severity":1,"message":"81","line":9,"column":10,"nodeType":"82","messageId":"83","endLine":9,"endColumn":15},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'route' is assigned a value but never used.","Identifier","unusedVar","'filename' is assigned a value but never used.","'uploadedFile' is assigned a value but never used.","'setCanvas' is assigned a value but never used.","'currentSong' is assigned a value but never used.","'setCurrentSong' is assigned a value but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Image' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Modal' is defined but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> 49ab388c035f15d60f37b237ae2527f91a00c0f0
