[{"G:\\Mozambique\\ULS\\Resumes\\EvolveU\\Project-3\\Project-3\\Feb-11-2021\\musicVisualizerApp\\client\\src\\index.js":"1","G:\\Mozambique\\ULS\\Resumes\\EvolveU\\Project-3\\Project-3\\Feb-11-2021\\musicVisualizerApp\\client\\src\\App.js":"2","G:\\Mozambique\\ULS\\Resumes\\EvolveU\\Project-3\\Project-3\\Feb-11-2021\\musicVisualizerApp\\client\\src\\Components\\About.js":"3","G:\\Mozambique\\ULS\\Resumes\\EvolveU\\Project-3\\Project-3\\Feb-11-2021\\musicVisualizerApp\\client\\src\\Components\\Home.js":"4","G:\\Mozambique\\ULS\\Resumes\\EvolveU\\Project-3\\Project-3\\Feb-11-2021\\musicVisualizerApp\\client\\src\\Components\\TemplatesPage.js":"5","G:\\Mozambique\\ULS\\Resumes\\EvolveU\\Project-3\\Project-3\\Feb-11-2021\\musicVisualizerApp\\client\\src\\Components\\Navbars\\Navigation.js":"6","G:\\Mozambique\\ULS\\Resumes\\EvolveU\\Project-3\\Project-3\\Feb-11-2021\\musicVisualizerApp\\client\\src\\Components\\Displayer.js":"7","G:\\Mozambique\\ULS\\Resumes\\EvolveU\\Project-3\\Project-3\\Feb-11-2021\\musicVisualizerApp\\client\\src\\Components\\MediaInteractions\\InsertIcon.js":"8","G:\\Mozambique\\ULS\\Resumes\\EvolveU\\Project-3\\Project-3\\Feb-11-2021\\musicVisualizerApp\\client\\src\\Components\\MediaInteractions\\FileUpload.js":"9","G:\\Mozambique\\ULS\\Resumes\\EvolveU\\Project-3\\Project-3\\Feb-11-2021\\musicVisualizerApp\\client\\src\\Components\\MediaInteractions\\Playlist.js":"10"},{"size":404,"mtime":1613081625080,"results":"11","hashOfConfig":"12"},{"size":1238,"mtime":1613081619725,"results":"13","hashOfConfig":"12"},{"size":1248,"mtime":1613081619792,"results":"14","hashOfConfig":"12"},{"size":3499,"mtime":1613360709820,"results":"15","hashOfConfig":"12"},{"size":207,"mtime":1613081622538,"results":"16","hashOfConfig":"12"},{"size":8511,"mtime":1613084418305,"results":"17","hashOfConfig":"12"},{"size":9213,"mtime":1613421732579,"results":"18","hashOfConfig":"12"},{"size":399,"mtime":1613183548192,"results":"19","hashOfConfig":"12"},{"size":6339,"mtime":1613360731520,"results":"20","hashOfConfig":"12"},{"size":930,"mtime":1613166932246,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"5xx3si",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"G:\\Mozambique\\ULS\\Resumes\\EvolveU\\Project-3\\Project-3\\Feb-11-2021\\musicVisualizerApp\\client\\src\\index.js",[],["47","48"],"G:\\Mozambique\\ULS\\Resumes\\EvolveU\\Project-3\\Project-3\\Feb-11-2021\\musicVisualizerApp\\client\\src\\App.js",["49"],"import React, { useState } from 'react'\r\nimport './App.css'\r\nimport Navigation from './Components/Navbars/Navigation'\r\nimport About from './Components/About'\r\nimport TemplatesPage from './Components/TemplatesPage'\r\nimport Home from './Components/Home'\r\n\r\nconst App = () => {\r\n  const [route, setRoute] = useState('signout')\r\n  const [isSignedIn, setIsSignedIn] = useState(false)\r\n  const [displayPage, setDisplayPage] = useState(Home)\r\n\r\n  if (isSignedIn === 'signout') {\r\n    setIsSignedIn(false)\r\n  } else if (isSignedIn === 'signin') {\r\n    setIsSignedIn(true)\r\n  }\r\n\r\n  const onRouteChange = (route) => {\r\n    if (route === 'signout') {\r\n      setRoute({ isSignedIn: false })\r\n    } else if (route === 'signin') {\r\n      setRoute({ isSignedIn: true })\r\n    } else if (route === 'Home') {\r\n      setDisplayPage(<Home />)\r\n    } else if (route === 'About') {\r\n      setDisplayPage(<About />)\r\n    } else if (route === 'TemplatesPage') {\r\n      setDisplayPage(<TemplatesPage />)\r\n    }\r\n    setRoute({ route: route })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Frontscr\">\r\n        <Navigation isSignedIn={setIsSignedIn} onRouteChange={onRouteChange} />\r\n        {displayPage}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","G:\\Mozambique\\ULS\\Resumes\\EvolveU\\Project-3\\Project-3\\Feb-11-2021\\musicVisualizerApp\\client\\src\\Components\\About.js",[],"G:\\Mozambique\\ULS\\Resumes\\EvolveU\\Project-3\\Project-3\\Feb-11-2021\\musicVisualizerApp\\client\\src\\Components\\Home.js",[],"G:\\Mozambique\\ULS\\Resumes\\EvolveU\\Project-3\\Project-3\\Feb-11-2021\\musicVisualizerApp\\client\\src\\Components\\TemplatesPage.js",[],"G:\\Mozambique\\ULS\\Resumes\\EvolveU\\Project-3\\Project-3\\Feb-11-2021\\musicVisualizerApp\\client\\src\\Components\\Navbars\\Navigation.js",["50","51"],"import React, { useState } from 'react'\r\nimport { Navbar, Nav, Button, Modal, Form, Row, Col } from 'react-bootstrap'\r\nimport pic from '../Images/logogrey.png'\r\n// import pic from './Logo1sn.png'\r\nimport Axios from 'axios'\r\n\r\nconst Navigation = ({ onRouteChange }) => {\r\n  // for open/close of signin/signup modals\r\n  const [show, setShow] = useState(false)\r\n  const [register, setRegister] = useState(false)\r\n\r\n  const handleClose = () => setShow(false)\r\n  const handleLogin = () => setShow(true)\r\n  const handleRegister = () => setRegister(true)\r\n  const handleRegisterClose = () => setRegister(false)\r\n\r\n  function registerClicked() {\r\n    handleClose() || setRegister(true)\r\n  }\r\n\r\n  // Event handlers for SignUp\r\n  const url = 'http://localhost:5000/register/signUp'\r\n  const [data, setData] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n  })\r\n\r\n  const registerForm = (e) => {\r\n    e.preventDefault()\r\n    Axios.post(url, {\r\n      firstname: data.firstname,\r\n      lastname: data.lastname,\r\n      username: data.username,\r\n      email: data.email,\r\n      password: data.password,\r\n    })\r\n      .then((res) => {\r\n        console.log(res.data)\r\n      })\r\n      .catch((err) => {\r\n        if (err.res) {\r\n          console.log('this is a response error', err.res)\r\n        } else if (err.req) {\r\n          console.log('this is a request error', err.req)\r\n        } else {\r\n          console.log('error', err)\r\n        }\r\n      })\r\n  }\r\n\r\n  function handleSignup(e) {\r\n    const newuser = { ...data }\r\n    newuser[e.target.name] = e.target.value\r\n    setData(newuser)\r\n    //  console.log(newuser)\r\n  }\r\n\r\n  ; <Modal show={register} onHide={handleRegisterClose} animation=\"false\">\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>Sign Up</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <Form onSubmit={(e) => registerForm(e)}>\r\n        <Form.Group>\r\n          <Form.Label>First Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"firstname\"\r\n            placeholder=\"Enter first name\"\r\n            value={data.firstname}\r\n            onChange={(e) => handleSignup(e)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Last Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"lastname\"\r\n            placeholder=\"Enter last name\"\r\n            value={data.lastname}\r\n            onChange={(e) => handleSignup(e)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"Create a Username\"\r\n            value={data.username}\r\n            onChange={(e) => handleSignup(e)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={data.email}\r\n            onChange={(e) => handleSignup(e)}\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={data.password}\r\n            onChange={(e) => handleSignup(e)}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Sign Up\r\n        </Button>\r\n      </Form>\r\n    </Modal.Body>\r\n  </Modal>\r\n\r\n  if (register === true) {\r\n    return (\r\n      <Modal show={register} onHide={handleRegisterClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Sign Up</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={(e) => registerForm(e)}>\r\n            <Form.Group>\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"firstname\"\r\n                placeholder=\"Enter first name\"\r\n                value={data.firstname}\r\n                onChange={(e) => handleSignup(e)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"lastname\"\r\n                placeholder=\"Enter last name\"\r\n                value={data.lastname}\r\n                onChange={(e) => handleSignup(e)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"username\"\r\n                placeholder=\"Create a Username\"\r\n                value={data.username}\r\n                onChange={(e) => handleSignup(e)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={data.email}\r\n                onChange={(e) => handleSignup(e)}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                We'll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                value={data.password}\r\n                onChange={(e) => handleSignup(e)}\r\n              />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  if (show === true) {\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Sign In</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"username\"\r\n                placeholder=\"username\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={registerClicked} variant=\"Light\">\r\n            Sign Up\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  //Navbar\r\n\r\n  return (\r\n    <>\r\n      <Navbar style={{ backgroundColor: 'black' }} variant=\"dark\" expand=\"sm\" sticky=\"top\">\r\n        <Navbar.Brand href=\"/Home\" style={{ fontSize: 23 }}>\r\n          {/* <img src={pic} alt={''} width={80} height={80} /> */}\r\n          <img src={pic} alt={''} height={'30%'} width={'30%'} />\r\n        </Navbar.Brand>\r\n\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto\" style={{ fontSize: 23 }}>\r\n            <Nav.Link onClick={() => onRouteChange('About')} style={{ color: 'white' }}>\r\n              About\r\n              </Nav.Link>\r\n            <Nav.Link onClick={() => onRouteChange('TemplatesPage')} style={{ color: 'white' }}>\r\n              Templates\r\n            </Nav.Link>\r\n            {/* <Nav.Link>My Account</Nav.Link> */}\r\n            <Button onClick={handleLogin} variant=\"outline-secondary\" size='lg'>\r\n              Sign In\r\n            </Button>\r\n            <Button onClick={handleRegister} variant=\"outline-info\" size='lg'>\r\n              Sign Up\r\n            </Button>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Navigation","G:\\Mozambique\\ULS\\Resumes\\EvolveU\\Project-3\\Project-3\\Feb-11-2021\\musicVisualizerApp\\client\\src\\Components\\Displayer.js",["52","53"],"G:\\Mozambique\\ULS\\Resumes\\EvolveU\\Project-3\\Project-3\\Feb-11-2021\\musicVisualizerApp\\client\\src\\Components\\MediaInteractions\\InsertIcon.js",["54"],"import React from 'react'\r\n// import { Container, Row, Col, Image } from 'react-bootstrap'\r\nimport icon from '../Images/Daco.png'\r\n\r\n//Icon input\r\nconst InsertIcon = () => {\r\n  return (\r\n    <div className=\"iconWrapper\">\r\n      <img\r\n        style={{\r\n          width: '15%',\r\n          height: '15%',\r\n        }}\r\n        src={`${icon}`}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InsertIcon\r\n","G:\\Mozambique\\ULS\\Resumes\\EvolveU\\Project-3\\Project-3\\Feb-11-2021\\musicVisualizerApp\\client\\src\\Components\\MediaInteractions\\FileUpload.js",["55","56"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Card } from 'react-bootstrap'\r\nimport Playlist from './Playlist'\r\n\r\nconst FileUpload = (props) => {\r\n  //Need to use a hook to set text in the label to the file namespace\r\n  const [file, setFile] = useState('')\r\n  const [filename, setFilename] = useState('Choose File')\r\n  const [uploadedFile, setUploadedFile] = useState({})\r\n  const [currentUser, setCurrentUser] = useState('USR------1')\r\n\r\n  console.log('USER.....:', currentUser)\r\n\r\n  const onChange = (e) => {\r\n    //HTML file uploads come as an array so we want the index of the first file\r\n    setFile(e.target.files[0])\r\n    setFilename(e.target.files[0].name)\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    // e.preventDefault() used to prevent submitting by accident by preventing normal submitting\r\n    e.preventDefault()\r\n    const formData = new FormData()\r\n    formData.append('file', file)\r\n\r\n    try {\r\n      //Need to connect to the server the endpoint is media\r\n      // const res = await axios({\r\n      //   method: 'post',\r\n      //   url: 'http://localhost:5000/upload/media',\r\n      //   body: {\r\n      //     formData,\r\n      //     headers: { 'Content-Type': 'multipart/form-data' },\r\n      //     // body: currentUser\r\n      //   }\r\n      // }\r\n      // )\r\n      const res = await axios.post(\r\n        'http://localhost:5000/upload/media',\r\n        formData,\r\n        {\r\n          headers: { 'Content-Type': 'multipart/form-data' },\r\n        },\r\n      )\r\n      const { fileName, filePath } = res.data\r\n      console.log(res.headers)\r\n      if (res.status === 200) {\r\n        console.log('Was uploaded successfully ' + res.status)\r\n      }\r\n      setUploadedFile({ fileName, filePath })\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        console.error('There is a problem with the server ' + err.message)\r\n      } else {\r\n        //This message is from the server if no file is uploaded\r\n        // console.error('we had an error??? ' + err.response.data.msg)\r\n        console.error(err.response.data.msg)\r\n      }\r\n    }\r\n  }\r\n  // If the audio button is selected\r\n  if (props.mediatype === 'Audio') {\r\n    return (\r\n      <Card style={{ width: '16rem', margin: '16px' }}>\r\n        <Card.Body>\r\n          <Card.Title>{props.mediatype} Upload</Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            Select {props.mediatype} to Upload\r\n          </Card.Subtitle>\r\n          <Card.Text>\r\n            <>\r\n              <div className=\"mb-2\">\r\n                <form onSubmit={onSubmit}>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"form-control mb-5\"\r\n                      id=\"inputGroupFile02\"\r\n                      accept={`${props.mediatype}/wav, ${props.mediatype}/mp3, ${props.mediatype}/mpeg`}\r\n                      onChange={onChange}\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      value={`Upload ${props.mediatype}`}\r\n                      // className=\"btn btn-primary btn-block\"\r\n                      className=\"btn1\"\r\n                    />\r\n\r\n                    <label\r\n                      className=\"id=inputGroupFile02\"\r\n                      htmlFor=\"inputGroupFile02\"\r\n                    ></label>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </>\r\n          </Card.Text>\r\n        </Card.Body>\r\n        <Playlist uploadedFile = {uploadedFile} />\r\n      </Card>\r\n    )\r\n  }\r\n  if (props.mediatype === 'Background') {\r\n    return (\r\n      <Card style={{ width: '16rem', margin: '16px' }}>\r\n        <Card.Body>\r\n          <Card.Title>{props.mediatype} Upload</Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            Select {props.mediatype} to Upload\r\n          </Card.Subtitle>\r\n          <Card.Text>\r\n            <>\r\n              <div className=\"mb-2\">\r\n                <form onSubmit={onSubmit}>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"form-control mb-5\"\r\n                      id=\"inputGroupFile02\"\r\n                      accept={`${props.filetype}/jpg, ${props.filetype}/jpeg, ${props.filetype}/bmp`}\r\n                      onChange={onChange}\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      value={`Upload ${props.mediatype}`}\r\n                      // className=\"btn btn-primary btn-block\"\r\n                      className=\"btn1\"\r\n                    />\r\n\r\n                    <label\r\n                      className=\"id=inputGroupFile02\"\r\n                      htmlFor=\"inputGroupFile02\"\r\n                    ></label>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n  }\r\n  return (\r\n    <Card style={{ width: '16rem', margin: '16px' }}>\r\n      <Card.Body>\r\n        <Card.Title>{props.mediatype} Upload</Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">\r\n          Select {props.mediatype} to Upload\r\n        </Card.Subtitle>\r\n        <Card.Text>\r\n          <>\r\n            <div className=\"mb-2\">\r\n              <form onSubmit={onSubmit}>\r\n                <div className=\"input-group mb-3\">\r\n                  <input\r\n                    type=\"file\"\r\n                    className=\"form-control mb-5\"\r\n                    id=\"inputGroupFile02\"\r\n                    accept={`${props.filetype}/gif, ${props.filetype}/png, ${props.filetype}/jpg`}\r\n                    onChange={onChange}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value={`Upload ${props.mediatype}`}\r\n                    // className=\"btn btn-primary btn-block\"\r\n                    className=\"btn1\"\r\n                  />\r\n\r\n                  <label\r\n                    className=\"id=inputGroupFile02\"\r\n                    htmlFor=\"inputGroupFile02\"\r\n                  ></label>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default FileUpload\r\n","G:\\Mozambique\\ULS\\Resumes\\EvolveU\\Project-3\\Project-3\\Feb-11-2021\\musicVisualizerApp\\client\\src\\Components\\MediaInteractions\\Playlist.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":9,"column":10,"nodeType":"63","messageId":"64","endLine":9,"endColumn":15},{"ruleId":"61","severity":1,"message":"65","line":2,"column":44,"nodeType":"63","messageId":"64","endLine":2,"endColumn":47},{"ruleId":"61","severity":1,"message":"66","line":2,"column":49,"nodeType":"63","messageId":"64","endLine":2,"endColumn":52},{"ruleId":"61","severity":1,"message":"67","line":42,"column":18,"nodeType":"63","messageId":"64","endLine":42,"endColumn":27},{"ruleId":"68","severity":1,"message":"69","line":55,"column":6,"nodeType":"70","endLine":55,"endColumn":24,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":9,"column":7,"nodeType":"74","endLine":15,"endColumn":9},{"ruleId":"61","severity":1,"message":"75","line":9,"column":10,"nodeType":"63","messageId":"64","endLine":9,"endColumn":18},{"ruleId":"61","severity":1,"message":"76","line":11,"column":23,"nodeType":"63","messageId":"64","endLine":11,"endColumn":37},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'route' is assigned a value but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'setCanvas' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tick'. Either include it or remove the dependency array.","ArrayExpression",["79"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'filename' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [sliderM, sliderN, tick]",{"range":"82","text":"83"},[1697,1715],"[sliderM, sliderN, tick]"]